{"id":"a66a1b5f8f6acceb2c95a07a0e4a000a","_format":"hh-sol-build-info-1","solcVersion":"0.8.1","solcLongVersion":"0.8.1+commit.df193b15","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n *\n * _Available since v4.5._\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/common/ERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IERC2981.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n *\n * _Available since v4.5._\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual override returns (address, uint256) {\n        RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId];\n\n        if (royalty.receiver == address(0)) {\n            royalty = _defaultRoyaltyInfo;\n        }\n\n        uint256 royaltyAmount = (salePrice * royalty.royaltyFraction) / _feeDenominator();\n\n        return (royalty.receiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        require(feeNumerator <= _feeDenominator(), \"ERC2981: royalty fee will exceed salePrice\");\n        require(receiver != address(0), \"ERC2981: invalid receiver\");\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        require(feeNumerator <= _feeDenominator(), \"ERC2981: royalty fee will exceed salePrice\");\n        require(receiver != address(0), \"ERC2981: Invalid parameters\");\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/extensions/ERC721Royalty.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../common/ERC2981.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Extension of ERC721 with the ERC2981 NFT Royalty Standard, a standardized way to retrieve royalty payment\n * information.\n *\n * Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually for\n * specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n *\n * _Available since v4.5._\n */\nabstract contract ERC721Royalty is ERC2981, ERC721 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC2981) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally clears the royalty information for the token.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n        _resetTokenRoyalty(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../interfaces/IERC4906.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/OathToMeliorism.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract OathToMeliorism is ERC721URIStorage {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private currentTokenId;\r\n    //string public baseTokenURI;\r\n    //uint256 public _mintPrice;\r\n    string public collectionInfoURI;\r\n    \r\n    constructor() ERC721(\"OathToMeliorism\", \"NOFUN\") {\r\n        //baseTokenURI = \"\";\r\n        collectionInfoURI = \"https://nftstorage.link/ipfs/bafybeibnhlhq6i7x3yxe6z4r5zmymmtuwgbxsbbpw5a72t5rvagp5xhcga/OathToMeliorism.json\";\r\n    }\r\n    \r\n    function mint(address recipient, string memory tokenURI) external payable returns (uint256) {\r\n        currentTokenId.increment();\r\n        uint256 newItemId = currentTokenId.current();\r\n        _safeMint(recipient, newItemId);\r\n        _setTokenURI(newItemId, tokenURI);\r\n\r\n        // Used for assigning primary NFT\r\n        //characters[tokenID] = Character({\r\n        //    exp: 0,\r\n        //    element: element,\r\n        //    metadataURI: metadataURI\r\n        //});\r\n\r\n        // Temporarily made automatic for testing\r\n        // Set as the user's main avatar if they have no other LMNTLs\r\n        //if (tokenOwners[msg.sender].length == 1) {\r\n        //    setMainAvatar(msg.sender, tokenID);\r\n        //}\r\n        \r\n        //setMainAvatar(msg.sender, tokenID);\r\n\r\n\r\n        // For payment on mint\r\n        /*\r\n        require(msg.value >= _mintPrice, \"Insufficient funds\");\r\n\r\n        if (msg.value > _mintPrice) {\r\n            uint256 refundAmount = msg.value.sub(_mintPrice);\r\n            payable(msg.sender).transfer(refundAmount);\r\n        }*/\r\n\r\n        return newItemId;\r\n    }\r\n\r\n    function contractURI() public view returns (string memory) {\r\n        return collectionInfoURI;\r\n    }\r\n\r\n  /*/// @dev Returns an URI for a given token ID\r\n    function _baseURI() internal view virtual override returns (string memory) {\r\n        return baseTokenURI;\r\n    }\r\n\r\n  /// @dev Sets the base token URI prefix.\r\n    function setBaseTokenURI(string memory _baseTokenURI) public {\r\n        baseTokenURI = _baseTokenURI;\r\n    }*/\r\n\r\n  /// @dev Sets the URI for the collection info JSON.\r\n    function setContractURI(string memory _collectionInfoURI) public {\r\n        collectionInfoURI = _collectionInfoURI;\r\n    }\r\n\r\n/*\r\n    mapping (address => uint16[]) public tokenOwners;\r\n\r\n    mapping(address => uint16) public holderMainAvatars;\r\n\r\n    // Define the structure for character traits\r\n    struct Character {\r\n        uint8 element;\r\n        uint256 exp;\r\n        string metadataURI;\r\n    }\r\n\r\n    // Store the characters in a mapping\r\n    mapping (uint16 => Character) public characters;*/\r\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":7863,"file":"@openzeppelin/contracts/utils/Address.sol","start":7851},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":8678,"file":"@openzeppelin/contracts/utils/Address.sol","start":8666},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1999],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nodeType":"ImportDirective","scope":113,"sourceUnit":2000,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1999,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[1999],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1999],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0"}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2338]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":115,"nodeType":"ImportDirective","scope":116,"sourceUnit":2339,"src":"116:44:1","symbolAliases":[],"unitAlias":""}],"src":"91:70:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[2338],"IERC2981":[134]},"id":135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":118,"nodeType":"ImportDirective","scope":135,"sourceUnit":2339,"src":"132:44:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":120,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2338,"src":"490:7:2"},"id":121,"nodeType":"InheritanceSpecifier","src":"490:7:2"}],"contractDependencies":[2338],"contractKind":"interface","documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"178:289:2","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants.\n _Available since v4.5._"},"fullyImplemented":false,"id":134,"linearizedBaseContracts":[134,2338],"name":"IERC2981","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"504:231:2","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."},"functionSelector":"2a55205a","id":133,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":133,"src":"770:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"salePrice","nodeType":"VariableDeclaration","scope":133,"src":"795:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"760:58:2"},"returnParameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"receiver","nodeType":"VariableDeclaration","scope":133,"src":"842:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"royaltyAmount","nodeType":"VariableDeclaration","scope":133,"src":"860:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"841:41:2"},"scope":134,"src":"740:143:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":135,"src":"468:417:2"}],"src":"107:779:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[2338],"IERC4906":[156],"IERC721":[1202]},"id":157,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":136,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":137,"nodeType":"ImportDirective","scope":157,"sourceUnit":116,"src":"132:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":138,"nodeType":"ImportDirective","scope":157,"sourceUnit":160,"src":"156:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":140,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2338,"src":"248:7:3"},"id":141,"nodeType":"InheritanceSpecifier","src":"248:7:3"},{"baseName":{"id":142,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1202,"src":"257:7:3"},"id":143,"nodeType":"InheritanceSpecifier","src":"257:7:3"}],"contractDependencies":[1202,2338],"contractKind":"interface","documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"181:45:3","text":"@title EIP-721 Metadata Update Extension"},"fullyImplemented":false,"id":156,"linearizedBaseContracts":[156,1202,2338],"name":"IERC4906","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"271:201:3","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"id":148,"name":"MetadataUpdate","nodeType":"EventDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"indexed":false,"mutability":"mutable","name":"_tokenId","nodeType":"VariableDeclaration","scope":148,"src":"498:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:18:3"},"src":"477:39:3"},{"anonymous":false,"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"522:212:3","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"id":155,"name":"BatchMetadataUpdate","nodeType":"EventDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nodeType":"VariableDeclaration","scope":155,"src":"765:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":153,"indexed":false,"mutability":"mutable","name":"_toTokenId","nodeType":"VariableDeclaration","scope":155,"src":"787:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"764:42:3"},"src":"739:68:3"}],"scope":157,"src":"226:583:3"}],"src":"107:703:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC165":[2338],"IERC721":[1202]},"id":160,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":158,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":159,"nodeType":"ImportDirective","scope":160,"sourceUnit":1203,"src":"116:37:4","symbolAliases":[],"unitAlias":""}],"src":"91:63:4"},"id":4},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1977],"Context":[1999],"ERC165":[2326],"ERC721":[1086],"IERC165":[2338],"IERC721":[1202],"IERC721Metadata":[1449],"IERC721Receiver":[1220],"Math":[3204],"SignedMath":[3621],"Strings":[2302]},"id":1087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":161,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":162,"nodeType":"ImportDirective","scope":1087,"sourceUnit":1203,"src":"132:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":163,"nodeType":"ImportDirective","scope":1087,"sourceUnit":1221,"src":"156:31:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":164,"nodeType":"ImportDirective","scope":1087,"sourceUnit":1450,"src":"188:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":165,"nodeType":"ImportDirective","scope":1087,"sourceUnit":1978,"src":"231:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":166,"nodeType":"ImportDirective","scope":1087,"sourceUnit":2000,"src":"265:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":167,"nodeType":"ImportDirective","scope":1087,"sourceUnit":2303,"src":"299:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":168,"nodeType":"ImportDirective","scope":1087,"sourceUnit":2327,"src":"333:46:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":170,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1999,"src":"647:7:5"},"id":171,"nodeType":"InheritanceSpecifier","src":"647:7:5"},{"baseName":{"id":172,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2326,"src":"656:6:5"},"id":173,"nodeType":"InheritanceSpecifier","src":"656:6:5"},{"baseName":{"id":174,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1202,"src":"664:7:5"},"id":175,"nodeType":"InheritanceSpecifier","src":"664:7:5"},{"baseName":{"id":176,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1449,"src":"673:15:5"},"id":177,"nodeType":"InheritanceSpecifier","src":"673:15:5"}],"contractDependencies":[1202,1449,1999,2326,2338],"contractKind":"contract","documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"381:246:5","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1086,"linearizedBaseContracts":[1086,1449,1202,2326,2338,1999],"name":"ERC721","nodeType":"ContractDefinition","nodes":[{"id":180,"libraryName":{"id":178,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1977,"src":"701:7:5"},"nodeType":"UsingForDirective","src":"695:26:5","typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":183,"libraryName":{"id":181,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2302,"src":"732:7:5"},"nodeType":"UsingForDirective","src":"726:26:5","typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":185,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","scope":1086,"src":"776:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":184,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":187,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","scope":1086,"src":"823:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":186,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":191,"mutability":"mutable","name":"_owners","nodeType":"VariableDeclaration","scope":1086,"src":"898:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":190,"keyType":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":195,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","scope":1086,"src":"992:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":194,"keyType":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":199,"mutability":"mutable","name":"_tokenApprovals","nodeType":"VariableDeclaration","scope":1086,"src":"1093:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":198,"keyType":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":205,"mutability":"mutable","name":"_operatorApprovals","nodeType":"VariableDeclaration","scope":1086,"src":"1199:71:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":204,"keyType":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":203,"keyType":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":202,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":221,"nodeType":"Block","src":"1446:57:5","statements":[{"expression":{"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":213,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"1456:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":214,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1464:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":216,"nodeType":"ExpressionStatement","src":"1456:13:5"},{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":217,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1479:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":218,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1489:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":220,"nodeType":"ExpressionStatement","src":"1479:17:5"}]},"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"1277:108:5","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":222,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"name_","nodeType":"VariableDeclaration","scope":222,"src":"1402:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":207,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"symbol_","nodeType":"VariableDeclaration","scope":222,"src":"1423:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":209,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:5"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"1446:0:5"},"scope":1086,"src":"1390:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2325,2337],"body":{"id":252,"nodeType":"Block","src":"1678:192:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":233,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"1707:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":235,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"1727:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1202_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1202_$","typeString":"type(contract IERC721)"}],"id":234,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1202","typeString":"type(contract IERC721)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":239,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"1763:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":241,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"1783:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1449_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1449_$","typeString":"type(contract IERC721Metadata)"}],"id":240,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1449","typeString":"type(contract IERC721Metadata)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":248,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"1851:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":246,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1086_$","typeString":"type(contract super ERC721)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"1827:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":232,"id":251,"nodeType":"Return","src":"1688:175:5"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"1509:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":253,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":229,"nodeType":"OverrideSpecifier","overrides":[{"id":227,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2326,"src":"1646:6:5"},{"id":228,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2338,"src":"1654:7:5"}],"src":"1637:25:5"},"parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":253,"src":"1597:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":224,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:5"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":253,"src":"1672:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":230,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:5"},"scope":1086,"src":"1570:300:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1127],"body":{"id":276,"nodeType":"Block","src":"2010:123:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2028:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:5","typeDescriptions":{}}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"2020:73:5"},{"expression":{"baseExpression":{"id":272,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2110:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":274,"indexExpression":{"id":273,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2120:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":261,"id":275,"nodeType":"Return","src":"2103:23:5"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"1876:48:5","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":277,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":{"id":258,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:5"},"parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":277,"src":"1948:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:5"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":277,"src":"2001:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:5"},"scope":1086,"src":"1929:204:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1135],"body":{"id":304,"nodeType":"Block","src":"2271:138:5","statements":[{"assignments":[287],"declarations":[{"constant":false,"id":287,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":304,"src":"2281:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":291,"initialValue":{"arguments":[{"id":289,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2306:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":288,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"2297:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":293,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"2332:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:5","typeDescriptions":{}}},"id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":301,"nodeType":"ExpressionStatement","src":"2324:56:5"},{"expression":{"id":302,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"2397:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":285,"id":303,"nodeType":"Return","src":"2390:12:5"}]},"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"2139:46:5","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":305,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nodeType":"FunctionDefinition","overrides":{"id":282,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:5"},"parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":305,"src":"2207:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:5"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":305,"src":"2262:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:5"},"scope":1086,"src":"2190:219:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1434],"body":{"id":314,"nodeType":"Block","src":"2540:29:5","statements":[{"expression":{"id":312,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2557:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":311,"id":313,"nodeType":"Return","src":"2550:12:5"}]},"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"2415:51:5","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":315,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":{"id":308,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:5"},"parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"2484:2:5"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":315,"src":"2525:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":309,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:5"},"scope":1086,"src":"2471:98:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1440],"body":{"id":324,"nodeType":"Block","src":"2704:31:5","statements":[{"expression":{"id":322,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"2721:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":321,"id":323,"nodeType":"Return","src":"2714:14:5"}]},"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"2575:53:5","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":325,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","overrides":{"id":318,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:5"},"parameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"2648:2:5"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":325,"src":"2689:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":319,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:5"},"scope":1086,"src":"2633:102:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1448],"body":{"id":363,"nodeType":"Block","src":"2889:188:5","statements":[{"expression":{"arguments":[{"id":335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"2914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":334,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2899:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"2899:23:5"},{"assignments":[339],"declarations":[{"constant":false,"id":339,"mutability":"mutable","name":"baseURI","nodeType":"VariableDeclaration","scope":363,"src":"2933:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":338,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":342,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":340,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2957:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":345,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2990:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":343,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:5","typeDescriptions":{}}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:5","trueExpression":{"arguments":[{"arguments":[{"id":354,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"3036:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3045:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2132,"src":"3045:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":352,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":350,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:5","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":333,"id":362,"nodeType":"Return","src":"2977:93:5"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"2741:55:5","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":364,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nodeType":"FunctionDefinition","overrides":{"id":330,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:5"},"parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":364,"src":"2819:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:5"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":364,"src":"2874:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":331,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:5"},"scope":1086,"src":"2801:276:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":372,"nodeType":"Block","src":"3385:26:5","statements":[{"expression":{"hexValue":"","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":369,"id":371,"nodeType":"Return","src":"3395:9:5"}]},"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"3083:231:5","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":373,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"3336:2:5"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":373,"src":"3370:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":367,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:5"},"scope":1086,"src":"3319:92:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1175],"body":{"id":415,"nodeType":"Block","src":"3538:336:5","statements":[{"assignments":[383],"declarations":[{"constant":false,"id":383,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":415,"src":"3548:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":382,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":388,"initialValue":{"arguments":[{"id":386,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"3579:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":384,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3564:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1086_$","typeString":"type(contract ERC721)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":305,"src":"3564:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":390,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"3605:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":391,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"3611:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":389,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"3597:57:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"3686:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":399,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"3702:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":402,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"3728:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":403,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"3735:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":401,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3711:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"3665:170:5"},{"expression":{"arguments":[{"id":411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"3855:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":412,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"3859:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":410,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"3846:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"3846:21:5"}]},"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"3417:46:5","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":416,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":380,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:5"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":416,"src":"3485:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":416,"src":"3497:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:5"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3538:0:5"},"scope":1086,"src":"3468:406:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1191],"body":{"id":433,"nodeType":"Block","src":"4020:82:5","statements":[{"expression":{"arguments":[{"id":426,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"4045:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":425,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"4030:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"4030:23:5"},{"expression":{"baseExpression":{"id":429,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"4071:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":431,"indexExpression":{"id":430,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"4087:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":424,"id":432,"nodeType":"Return","src":"4064:31:5"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"3880:50:5","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":434,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nodeType":"FunctionDefinition","overrides":{"id":421,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:5"},"parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":434,"src":"3956:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:5"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":434,"src":"4011:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:5"},"scope":1086,"src":"3935:167:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1183],"body":{"id":450,"nodeType":"Block","src":"4253:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":444,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4282:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":446,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4296:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":447,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"4306:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":443,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"4263:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":449,"nodeType":"ExpressionStatement","src":"4263:52:5"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"4108:56:5","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nodeType":"FunctionDefinition","overrides":{"id":441,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:5"},"parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":451,"src":"4196:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":451,"src":"4214:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":438,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:5"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"4253:0:5"},"scope":1086,"src":"4169:153:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1201],"body":{"id":468,"nodeType":"Block","src":"4491:59:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":462,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"4508:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":464,"indexExpression":{"id":463,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4527:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":466,"indexExpression":{"id":465,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4534:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":461,"id":467,"nodeType":"Return","src":"4501:42:5"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"4328:55:5","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":469,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nodeType":"FunctionDefinition","overrides":{"id":458,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:5"},"parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":469,"src":"4414:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":469,"src":"4429:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:5"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":469,"src":"4485:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:5"},"scope":1086,"src":"4388:162:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1167],"body":{"id":495,"nodeType":"Block","src":"4701:207:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":482,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4790:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4790:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":484,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"4804:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4771:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4763:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"4763:99:5"},{"expression":{"arguments":[{"id":490,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4883:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"4889:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":489,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"4873:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4873:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"4873:28:5"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"4556:51:5","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":496,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":478,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:5"},"parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":496,"src":"4634:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":496,"src":"4648:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":496,"src":"4660:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:5"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"4701:0:5"},"scope":1086,"src":"4612:296:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1157],"body":{"id":514,"nodeType":"Block","src":"5067:56:5","statements":[{"expression":{"arguments":[{"id":508,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"5094:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":509,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"5100:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5104:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":507,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[515,545],"referencedDeclaration":545,"src":"5077:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5077:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"5077:39:5"}]},"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"4914:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":515,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","overrides":{"id":505,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:5"},"parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":515,"src":"5000:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":515,"src":"5014:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":515,"src":"5026:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:5"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"5067:0:5"},"scope":1086,"src":"4974:149:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1147],"body":{"id":544,"nodeType":"Block","src":"5301:164:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":530,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"5338:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5352:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":529,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"5319:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5319:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5311:99:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"5311:99:5"},{"expression":{"arguments":[{"id":538,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"5434:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":539,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5440:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5444:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":541,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5453:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":537,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"5420:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5420:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"5420:38:5"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"5129:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":545,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","overrides":{"id":526,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:5"},"parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":545,"src":"5215:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":545,"src":"5229:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":545,"src":"5241:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":545,"src":"5258:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":523,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:5"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"5301:0:5"},"scope":1086,"src":"5189:276:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":573,"nodeType":"Block","src":"6428:165:5","statements":[{"expression":{"arguments":[{"id":558,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"6448:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"6454:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"6458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":557,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6438:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6438:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"6438:28:5"},{"expression":{"arguments":[{"arguments":[{"id":565,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"6507:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"6513:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":567,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"6517:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":568,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6526:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":564,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6484:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6484:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6476:110:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":572,"nodeType":"ExpressionStatement","src":"6476:110:5"}]},"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"5471:850:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":574,"src":"6349:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":574,"src":"6363:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":574,"src":"6375:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":574,"src":"6392:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":553,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:5"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"6428:0:5"},"scope":1086,"src":"6326:267:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":586,"nodeType":"Block","src":"6777:40:5","statements":[{"expression":{"baseExpression":{"id":582,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6794:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":584,"indexExpression":{"id":583,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"6802:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":581,"id":585,"nodeType":"Return","src":"6787:23:5"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"6599:98:5","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":587,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":587,"src":"6720:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:5"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":587,"src":"6768:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:5"},"scope":1086,"src":"6702:115:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":604,"nodeType":"Block","src":"7191:55:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":596,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"7217:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":595,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"7208:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7208:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:5","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7229:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":594,"id":603,"nodeType":"Return","src":"7201:38:5"}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"6823:292:5","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":605,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nodeType":"FunctionDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":605,"src":"7137:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:5"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":605,"src":"7185:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":592,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:5"},"scope":1086,"src":"7120:126:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7503:162:5","statements":[{"assignments":[616],"declarations":[{"constant":false,"id":616,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":638,"src":"7513:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":621,"initialValue":{"arguments":[{"id":619,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"7544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":617,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"7529:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1086_$","typeString":"type(contract ERC721)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":305,"src":"7529:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7529:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:5"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7570:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":623,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"7581:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":626,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"7607:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7614:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":625,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"7590:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7590:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":631,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"7638:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":630,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7626:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7626:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":633,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7650:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":614,"id":637,"nodeType":"Return","src":"7562:96:5"}]},"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"7252:147:5","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":639,"src":"7432:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":639,"src":"7449:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:5"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":639,"src":"7497:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":612,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:5"},"scope":1086,"src":"7404:261:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":653,"nodeType":"Block","src":"8060:43:5","statements":[{"expression":{"arguments":[{"id":648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8080:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8084:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":647,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[654,683],"referencedDeclaration":683,"src":"8070:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8070:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"8070:26:5"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7671:319:5","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":654,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":654,"src":"8014:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":654,"src":"8026:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:5"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8060:0:5"},"scope":1086,"src":"7995:108:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":682,"nodeType":"Block","src":"8408:195:5","statements":[{"expression":{"arguments":[{"id":665,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"8424:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"8428:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":664,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8418:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8418:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"8418:18:5"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:5","typeDescriptions":{}}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8490:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"8502:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"8506:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":677,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"8515:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":670,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"8467:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8467:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":669,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8446:150:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":681,"nodeType":"ExpressionStatement","src":"8446:150:5"}]},"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"8109:210:5","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":683,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":683,"src":"8343:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":683,"src":"8355:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":683,"src":"8372:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:5"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"8408:0:5"},"scope":1086,"src":"8324:279:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"8986:859:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":692,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"9004:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:5","typeDescriptions":{}}},"id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8996:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"ExpressionStatement","src":"8996:61:5"},{"expression":{"arguments":[{"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:5","subExpression":{"arguments":[{"id":703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9084:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":702,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"9076:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9076:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"9067:58:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:5","typeDescriptions":{}}},"id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9157:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"9169:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":715,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9173:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":709,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"9136:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9136:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"ExpressionStatement","src":"9136:48:5"},{"expression":{"arguments":[{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:5","subExpression":{"arguments":[{"id":721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9288:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":720,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"9280:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9280:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":719,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9271:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"ExpressionStatement","src":"9271:58:5"},{"id":733,"nodeType":"UncheckedBlock","src":"9340:360:5","statements":[{"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":727,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"9671:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":729,"indexExpression":{"id":728,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"9681:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":732,"nodeType":"ExpressionStatement","src":"9671:18:5"}]},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":734,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"9710:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":736,"indexExpression":{"id":735,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"9729:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":739,"nodeType":"ExpressionStatement","src":"9710:21:5"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:5","typeDescriptions":{}}},"id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9756:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":745,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"9768:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":746,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9772:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":740,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"9747:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9747:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"EmitStatement","src":"9742:38:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:5","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9811:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"9823:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"9827:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":749,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"9791:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9791:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"9791:47:5"}]},"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"8609:311:5","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":760,"src":"8940:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":760,"src":"8952:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":687,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:5"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"8986:0:5"},"scope":1086,"src":"8925:920:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":826,"nodeType":"Block","src":"10220:713:5","statements":[{"assignments":[767],"declarations":[{"constant":false,"id":767,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":826,"src":"10230:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":772,"initialValue":{"arguments":[{"id":770,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"10261:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":768,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"10246:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1086_$","typeString":"type(contract ERC721)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":305,"src":"10246:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10246:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:5"},{"expression":{"arguments":[{"id":774,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"10301:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:5","typeDescriptions":{}}},"id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10308:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"10320:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":773,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"10280:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10280:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"ExpressionStatement","src":"10280:51:5"},{"expression":{"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":783,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"10433:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":786,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"10456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":784,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"10441:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1086_$","typeString":"type(contract ERC721)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":305,"src":"10441:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10441:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":789,"nodeType":"ExpressionStatement","src":"10433:31:5"},{"expression":{"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:5","subExpression":{"baseExpression":{"id":790,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"10509:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":792,"indexExpression":{"id":791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"10525:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":794,"nodeType":"ExpressionStatement","src":"10502:31:5"},{"id":801,"nodeType":"UncheckedBlock","src":"10544:237:5","statements":[{"expression":{"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":795,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"10749:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":797,"indexExpression":{"id":796,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"10759:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":800,"nodeType":"ExpressionStatement","src":"10749:21:5"}]},{"expression":{"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:5","subExpression":{"baseExpression":{"id":802,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"10797:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":804,"indexExpression":{"id":803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"10805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"10790:23:5"},{"eventCall":{"arguments":[{"id":808,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"10838:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:5","typeDescriptions":{}}},"id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10845:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":813,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"10857:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":807,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"10829:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10829:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"EmitStatement","src":"10824:41:5"},{"expression":{"arguments":[{"id":817,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"10896:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:5","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10903:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":822,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"10915:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":816,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"10876:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10876:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"10876:50:5"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"9851:315:5","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":827,"src":"10186:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:5"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"10220:0:5"},"scope":1086,"src":"10171:762:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"11336:1124:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":838,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"11354:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1086_$","typeString":"type(contract ERC721)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":305,"src":"11354:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11354:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":842,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11381:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"11346:81:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"11445:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:5","typeDescriptions":{}}},"id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11451:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":847,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11437:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"ExpressionStatement","src":"11437:65:5"},{"expression":{"arguments":[{"id":858,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11534:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"11540:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":857,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"11513:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11513:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"ExpressionStatement","src":"11513:42:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":867,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":865,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"11655:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1086_$","typeString":"type(contract ERC721)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":305,"src":"11655:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11655:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":869,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11682:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":864,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"11647:81:5"},{"expression":{"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:5","subExpression":{"baseExpression":{"id":874,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"11797:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":876,"indexExpression":{"id":875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11813:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"11790:31:5"},{"id":891,"nodeType":"UncheckedBlock","src":"11832:496:5","statements":[{"expression":{"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":879,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"12265:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":881,"indexExpression":{"id":880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12275:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":884,"nodeType":"ExpressionStatement","src":"12265:20:5"},{"expression":{"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":885,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"12299:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":887,"indexExpression":{"id":886,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12309:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":890,"nodeType":"ExpressionStatement","src":"12299:18:5"}]},{"expression":{"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":892,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"12337:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":894,"indexExpression":{"id":893,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"12345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":895,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12356:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":897,"nodeType":"ExpressionStatement","src":"12337:21:5"},{"eventCall":{"arguments":[{"id":899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12383:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12389:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"12393:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":898,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"12374:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12374:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"EmitStatement","src":"12369:32:5"},{"expression":{"arguments":[{"id":905,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12432:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12438:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"12442:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":904,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12412:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12412:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":910,"nodeType":"ExpressionStatement","src":"12412:41:5"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"10939:313:5","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":912,"src":"11276:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":912,"src":"11290:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":912,"src":"11302:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:5"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[],"src":"11336:0:5"},"scope":1086,"src":"11257:1203:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":935,"nodeType":"Block","src":"12636:107:5","statements":[{"expression":{"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":920,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"12646:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":922,"indexExpression":{"id":921,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"12662:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"12673:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":925,"nodeType":"ExpressionStatement","src":"12646:29:5"},{"eventCall":{"arguments":[{"arguments":[{"id":929,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"12714:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":927,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"12699:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1086_$","typeString":"type(contract ERC721)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":305,"src":"12699:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12699:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"12724:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":932,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"12728:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":926,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"12690:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12690:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"EmitStatement","src":"12685:51:5"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"12466:101:5","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":936,"src":"12590:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":936,"src":"12602:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"12636:0:5"},"scope":1086,"src":"12572:171:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":967,"nodeType":"Block","src":"12972:184:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":947,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"12990:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":948,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"12999:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12982:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"12982:55:5"},{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":953,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"13047:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":956,"indexExpression":{"id":954,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"13066:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":957,"indexExpression":{"id":955,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"13073:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":958,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"13085:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":960,"nodeType":"ExpressionStatement","src":"13047:46:5"},{"eventCall":{"arguments":[{"id":962,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"13123:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"13130:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"13140:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":961,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"13108:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13108:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":966,"nodeType":"EmitStatement","src":"13103:46:5"}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"12749:125:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":968,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":968,"src":"12907:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":968,"src":"12922:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":968,"src":"12940:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":942,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:5"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[],"src":"12972:0:5"},"scope":1086,"src":"12879:277:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"13303:70:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"13329:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":975,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"13321:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13321:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13313:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"ExpressionStatement","src":"13313:53:5"}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"13162:73:5","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":982,"src":"13264:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:5"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"13303:0:5"},"scope":1086,"src":"13240:133:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1043,"nodeType":"Block","src":"14080:676:5","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":996,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"14094:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"14094:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14094:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1041,"nodeType":"Block","src":"14714:36:5","statements":[{"expression":{"hexValue":"74727565","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":995,"id":1040,"nodeType":"Return","src":"14728:11:5"}]},"id":1042,"nodeType":"IfStatement","src":"14090:660:5","trueBody":{"id":1038,"nodeType":"Block","src":"14111:597:5","statements":[{"clauses":[{"block":{"id":1018,"nodeType":"Block","src":"14225:91:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"14250:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1013,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"14260:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1220_$","typeString":"type(contract IERC721Receiver)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"14260:32:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14260:41:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":995,"id":1017,"nodeType":"Return","src":"14243:58:5"}]},"errorName":"","id":1019,"nodeType":"TryCatchClause","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"retval","nodeType":"VariableDeclaration","scope":1019,"src":"14210:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1009,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:5"},"src":"14201:115:5"},{"block":{"id":1035,"nodeType":"Block","src":"14345:353:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1023,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"14367:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14367:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1033,"nodeType":"Block","src":"14494:190:5","statements":[{"AST":{"nodeType":"YulBlock","src":"14580:86:5","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14617:2:5","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14621:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:5"},"nodeType":"YulFunctionCall","src":"14613:15:5"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14636:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:5"},"nodeType":"YulFunctionCall","src":"14630:13:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14606:6:5"},"nodeType":"YulFunctionCall","src":"14606:38:5"},"nodeType":"YulExpressionStatement","src":"14606:38:5"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1021,"isOffset":false,"isSlot":false,"src":"14621:6:5","valueSize":1},{"declaration":1021,"isOffset":false,"isSlot":false,"src":"14636:6:5","valueSize":1}],"id":1032,"nodeType":"InlineAssembly","src":"14571:95:5"}]},"id":1034,"nodeType":"IfStatement","src":"14363:321:5","trueBody":{"id":1031,"nodeType":"Block","src":"14387:101:5","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1027,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14409:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"ExpressionStatement","src":"14409:60:5"}]}}]},"errorName":"","id":1036,"nodeType":"TryCatchClause","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"reason","nodeType":"VariableDeclaration","scope":1036,"src":"14324:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1020,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:5"},"src":"14317:381:5"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1003,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"14166:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14166:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"14180:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1006,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"14186:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1007,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"14195:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1000,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"14145:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"14129:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1220_$","typeString":"type(contract IERC721Receiver)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1220","typeString":"contract IERC721Receiver"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"14129:36:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:71:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1037,"nodeType":"TryStatement","src":"14125:573:5"}]}}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"13379:541:5","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1044,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1044,"src":"13966:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1044,"src":"13988:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1044,"src":"14008:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1044,"src":"14033:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":990,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:5"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1044,"src":"14074:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":993,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:5"},"scope":1086,"src":"13925:831:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1056,"nodeType":"Block","src":"15586:2:5","statements":[]},"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"14762:705:5","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1057,"src":"15502:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1057,"src":"15516:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"firstTokenId","nodeType":"VariableDeclaration","scope":1057,"src":"15528:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"batchSize","nodeType":"VariableDeclaration","scope":1057,"src":"15550:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:5"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[],"src":"15586:0:5"},"scope":1086,"src":"15472:116:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1069,"nodeType":"Block","src":"16407:2:5","statements":[]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"15594:695:5","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1070,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1070,"src":"16323:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1070,"src":"16337:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"firstTokenId","nodeType":"VariableDeclaration","scope":1070,"src":"16349:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"batchSize","nodeType":"VariableDeclaration","scope":1070,"src":"16371:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:5"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"16407:0:5"},"scope":1086,"src":"16294:115:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1084,"nodeType":"Block","src":"16958:45:5","statements":[{"expression":{"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1078,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"16968:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1080,"indexExpression":{"id":1079,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"16978:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1081,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"16990:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ExpressionStatement","src":"16968:28:5"}]},"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"16415:409:5","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nodeType":"FunctionDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1085,"src":"16916:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1085,"src":"16933:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:5"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[],"src":"16958:0:5"},"scope":1086,"src":"16882:121:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1087,"src":"628:16377:5"}],"src":"107:16899:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2338],"IERC721":[1202]},"id":1203,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1088,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1089,"nodeType":"ImportDirective","scope":1203,"sourceUnit":2339,"src":"133:47:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1091,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2338,"src":"271:7:6"},"id":1092,"nodeType":"InheritanceSpecifier","src":"271:7:6"}],"contractDependencies":[2338],"contractKind":"interface","documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"182:67:6","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1202,"linearizedBaseContracts":[1202,2338],"name":"IERC721","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"285:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1101,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1101,"src":"393:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1101,"src":"415:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1101,"src":"435:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:6"},"src":"378:82:6"},{"anonymous":false,"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"466:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1110,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1110,"src":"580:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"indexed":true,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":1110,"src":"603:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1108,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1110,"src":"629:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:6"},"src":"565:89:6"},{"anonymous":false,"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"660:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1119,"name":"ApprovalForAll","nodeType":"EventDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1119,"src":"803:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"indexed":true,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1119,"src":"826:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"indexed":false,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":1119,"src":"852:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:6"},"src":"782:85:6"},{"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"873:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1127,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1127,"src":"973:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:6"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"balance","nodeType":"VariableDeclaration","scope":1127,"src":"1011:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:6"},"scope":1202,"src":"954:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"1034:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1135,"src":"1187:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:6"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1135,"src":"1227:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:6"},"scope":1202,"src":"1170:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"1248:556:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1147,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1147,"src":"1835:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1147,"src":"1849:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1147,"src":"1861:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1147,"src":"1878:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1143,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:6"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"1907:0:6"},"scope":1202,"src":"1809:99:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"1914:687:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1157,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1157,"src":"2632:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1157,"src":"2646:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1157,"src":"2658:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:6"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[],"src":"2683:0:6"},"scope":1202,"src":"2606:78:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"2690:732:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1167,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1167,"src":"3449:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1167,"src":"3463:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1167,"src":"3475:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:6"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[],"src":"3500:0:6"},"scope":1202,"src":"3427:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"3507:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1175,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1175,"src":"3981:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1175,"src":"3993:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:6"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"4018:0:6"},"scope":1202,"src":"3964:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"4025:309:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1183,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1183,"src":"4366:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":1183,"src":"4384:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1179,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:6"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"4407:0:6"},"scope":1202,"src":"4339:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"4414:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1191,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nodeType":"FunctionDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1191,"src":"4579:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:6"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1191,"src":"4619:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:6"},"scope":1202,"src":"4558:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"4643:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1201,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1201,"src":"4812:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1201,"src":"4827:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:6"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1201,"src":"4868:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1198,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:6"},"scope":1202,"src":"4786:88:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1203,"src":"250:4626:6"}],"src":"108:4769:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1220]},"id":1221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1204,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"141:152:7","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1220,"linearizedBaseContracts":[1220],"name":"IERC721Receiver","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"326:493:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1219,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1219,"src":"859:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1219,"src":"885:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1209,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1219,"src":"907:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1219,"src":"932:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1213,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:7"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1219,"src":"976:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1216,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:7"},"scope":1220,"src":"824:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1221,"src":"294:692:7"}],"src":"116:871:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol","exportedSymbols":{"Address":[1977],"Context":[1999],"ERC165":[2326],"ERC2981":[1647],"ERC721":[1086],"ERC721Royalty":[1266],"IERC165":[2338],"IERC2981":[134],"IERC721":[1202],"IERC721Metadata":[1449],"IERC721Receiver":[1220],"Math":[3204],"SignedMath":[3621],"Strings":[2302]},"id":1267,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"125:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1223,"nodeType":"ImportDirective","scope":1267,"sourceUnit":1087,"src":"150:23:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","file":"../../common/ERC2981.sol","id":1224,"nodeType":"ImportDirective","scope":1267,"sourceUnit":1648,"src":"174:34:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":1225,"nodeType":"ImportDirective","scope":1267,"sourceUnit":2327,"src":"209:49:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1227,"name":"ERC2981","nodeType":"IdentifierPath","referencedDeclaration":1647,"src":"1032:7:8"},"id":1228,"nodeType":"InheritanceSpecifier","src":"1032:7:8"},{"baseName":{"id":1229,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"1041:6:8"},"id":1230,"nodeType":"InheritanceSpecifier","src":"1041:6:8"}],"contractDependencies":[134,1086,1202,1449,1647,1999,2326,2338],"contractKind":"contract","documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"260:736:8","text":" @dev Extension of ERC721 with the ERC2981 NFT Royalty Standard, a standardized way to retrieve royalty payment\n information.\n Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually for\n specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n _Available since v4.5._"},"fullyImplemented":false,"id":1266,"linearizedBaseContracts":[1266,1086,1449,1202,1647,2326,134,2338,1999],"name":"ERC721Royalty","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[253,1495],"body":{"id":1246,"nodeType":"Block","src":"1223:60:8","statements":[{"expression":{"arguments":[{"id":1243,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"1264:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1241,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1240:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Royalty_$1266_$","typeString":"type(contract super ERC721Royalty)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":253,"src":"1240:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1240:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1240,"id":1245,"nodeType":"Return","src":"1233:43:8"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"1054:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1247,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":1237,"nodeType":"OverrideSpecifier","overrides":[{"id":1235,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"1191:6:8"},{"id":1236,"name":"ERC2981","nodeType":"IdentifierPath","referencedDeclaration":1647,"src":"1199:7:8"}],"src":"1182:25:8"},"parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":1247,"src":"1142:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1232,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1142:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1141:20:8"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1247,"src":"1217:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1238,"name":"bool","nodeType":"ElementaryTypeName","src":"1217:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1216:6:8"},"scope":1266,"src":"1115:168:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[827],"body":{"id":1264,"nodeType":"Block","src":"1468:74:8","statements":[{"expression":{"arguments":[{"id":1257,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1490:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1254,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1478:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Royalty_$1266_$","typeString":"type(contract super ERC721Royalty)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":827,"src":"1478:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1478:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"ExpressionStatement","src":"1478:20:8"},{"expression":{"arguments":[{"id":1261,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1527:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1260,"name":"_resetTokenRoyalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1508:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1508:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1263,"nodeType":"ExpressionStatement","src":"1508:27:8"}]},"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"1289:116:8","text":" @dev See {ERC721-_burn}. This override additionally clears the royalty information for the token."},"id":1265,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","overrides":{"id":1252,"nodeType":"OverrideSpecifier","overrides":[],"src":"1459:8:8"},"parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1265,"src":"1425:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1424:17:8"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"1468:0:8"},"scope":1266,"src":"1410:132:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1267,"src":"997:547:8"}],"src":"125:1420:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[1977],"Context":[1999],"ERC165":[2326],"ERC721":[1086],"ERC721URIStorage":[1422],"IERC165":[2338],"IERC4906":[156],"IERC721":[1202],"IERC721Metadata":[1449],"IERC721Receiver":[1220],"Math":[3204],"SignedMath":[3621],"Strings":[2302]},"id":1423,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1268,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1269,"nodeType":"ImportDirective","scope":1423,"sourceUnit":1087,"src":"153:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1270,"nodeType":"ImportDirective","scope":1423,"sourceUnit":157,"src":"177:42:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1272,"name":"IERC4906","nodeType":"IdentifierPath","referencedDeclaration":156,"src":"329:8:9"},"id":1273,"nodeType":"InheritanceSpecifier","src":"329:8:9"},{"baseName":{"id":1274,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"339:6:9"},"id":1275,"nodeType":"InheritanceSpecifier","src":"339:6:9"}],"contractDependencies":[156,1086,1202,1449,1999,2326,2338],"contractKind":"contract","documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"221:69:9","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":1422,"linearizedBaseContracts":[1422,1086,1449,156,1202,2326,2338,1999],"name":"ERC721URIStorage","nodeType":"ContractDefinition","nodes":[{"id":1278,"libraryName":{"id":1276,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2302,"src":"358:7:9"},"nodeType":"UsingForDirective","src":"352:26:9","typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1282,"mutability":"mutable","name":"_tokenURIs","nodeType":"VariableDeclaration","scope":1422,"src":"423:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1281,"keyType":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"423:26:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":1280,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[253,2337],"body":{"id":1305,"nodeType":"Block","src":"643:97:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1293,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"660:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30783439303634393036","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"682:10:9","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"675:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1294,"name":"bytes4","nodeType":"ElementaryTypeName","src":"675:6:9","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"675:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"660:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1301,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"721:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1299,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"697:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1422_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":253,"src":"697:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"697:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"660:73:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1292,"id":1304,"nodeType":"Return","src":"653:80:9"}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"475:55:9","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":1289,"nodeType":"OverrideSpecifier","overrides":[{"id":1287,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"611:6:9"},{"id":1288,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2338,"src":"619:7:9"}],"src":"602:25:9"},"parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":1306,"src":"562:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1284,"name":"bytes4","nodeType":"ElementaryTypeName","src":"562:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"561:20:9"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1306,"src":"637:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"637:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"636:6:9"},"scope":1422,"src":"535:205:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[364],"body":{"id":1364,"nodeType":"Block","src":"894:520:9","statements":[{"expression":{"arguments":[{"id":1316,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"919:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1315,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"904:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"ExpressionStatement","src":"904:23:9"},{"assignments":[1320],"declarations":[{"constant":false,"id":1320,"mutability":"mutable","name":"_tokenURI","nodeType":"VariableDeclaration","scope":1364,"src":"938:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1319,"name":"string","nodeType":"ElementaryTypeName","src":"938:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1324,"initialValue":{"baseExpression":{"id":1321,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"964:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1323,"indexExpression":{"id":1322,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"975:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"964:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"938:45:9"},{"assignments":[1326],"declarations":[{"constant":false,"id":1326,"mutability":"mutable","name":"base","nodeType":"VariableDeclaration","scope":1364,"src":"993:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1325,"name":"string","nodeType":"ElementaryTypeName","src":"993:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1329,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1327,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"1014:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1014:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"993:31:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1332,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1103:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1097:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1330,"name":"bytes","nodeType":"ElementaryTypeName","src":"1097:5:9","typeDescriptions":{}}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1097:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1097:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1097:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1340,"nodeType":"IfStatement","src":"1093:70:9","trueBody":{"id":1339,"nodeType":"Block","src":"1122:41:9","statements":[{"expression":{"id":1337,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"1143:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1314,"id":1338,"nodeType":"Return","src":"1136:16:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1343,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"1271:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1265:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1265:5:9","typeDescriptions":{}}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1265:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1265:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1291:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1265:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"1261:106:9","trueBody":{"id":1357,"nodeType":"Block","src":"1294:73:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1352,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1339:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1353,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"1345:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1350,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1322:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1322:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1322:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1315:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1348,"name":"string","nodeType":"ElementaryTypeName","src":"1315:6:9","typeDescriptions":{}}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1315:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1314,"id":1356,"nodeType":"Return","src":"1308:48:9"}]}},{"expression":{"arguments":[{"id":1361,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"1399:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1359,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1384:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1422_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":364,"src":"1384:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1384:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1314,"id":1363,"nodeType":"Return","src":"1377:30:9"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"746:55:9","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1365,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nodeType":"FunctionDefinition","overrides":{"id":1311,"nodeType":"OverrideSpecifier","overrides":[],"src":"861:8:9"},"parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1365,"src":"824:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:17:9"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1365,"src":"879:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1312,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"878:15:9"},"scope":1422,"src":"806:608:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1390,"nodeType":"Block","src":"1680:172:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"1706:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"1698:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1698:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1716:48:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":1373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1690:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1690:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"1690:75:9"},{"expression":{"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1380,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"1775:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1382,"indexExpression":{"id":1381,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"1786:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1775:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1383,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"1797:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1775:31:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1385,"nodeType":"ExpressionStatement","src":"1775:31:9"},{"eventCall":{"arguments":[{"id":1387,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"1837:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1386,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1822:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1822:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1389,"nodeType":"EmitStatement","src":"1817:28:9"}]},"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"1420:174:9","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}.\n Requirements:\n - `tokenId` must exist."},"id":1391,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1391,"src":"1621:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"_tokenURI","nodeType":"VariableDeclaration","scope":1391,"src":"1638:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1369,"name":"string","nodeType":"ElementaryTypeName","src":"1638:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1620:42:9"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[],"src":"1680:0:9"},"scope":1422,"src":"1599:253:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[827],"body":{"id":1420,"nodeType":"Block","src":"2128:142:9","statements":[{"expression":{"arguments":[{"id":1401,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2150:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1398,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2138:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1422_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":827,"src":"2138:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2138:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"ExpressionStatement","src":"2138:20:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":1406,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2179:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1408,"indexExpression":{"id":1407,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2190:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2179:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2173:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1404,"name":"bytes","nodeType":"ElementaryTypeName","src":"2173:5:9","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2173:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2210:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2173:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1419,"nodeType":"IfStatement","src":"2169:95:9","trueBody":{"id":1418,"nodeType":"Block","src":"2213:51:9","statements":[{"expression":{"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2227:26:9","subExpression":{"baseExpression":{"id":1413,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2234:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1415,"indexExpression":{"id":1414,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2245:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2234:19:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1417,"nodeType":"ExpressionStatement","src":"2227:26:9"}]}}]},"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"1858:207:9","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","overrides":{"id":1396,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:9"},"parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1421,"src":"2085:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2084:17:9"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[],"src":"2128:0:9"},"scope":1422,"src":"2070:200:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1423,"src":"291:1981:9"}],"src":"128:2145:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2338],"IERC721":[1202],"IERC721Metadata":[1449]},"id":1450,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1424,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1425,"nodeType":"ImportDirective","scope":1450,"sourceUnit":1203,"src":"137:24:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1427,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1202,"src":"326:7:10"},"id":1428,"nodeType":"InheritanceSpecifier","src":"326:7:10"}],"contractDependencies":[1202,2338],"contractKind":"interface","documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"163:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1449,"linearizedBaseContracts":[1449,1202,2338],"name":"IERC721Metadata","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"340:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1434,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[],"src":"416:2:10"},"returnParameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1434,"src":"442:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1431,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:10"},"scope":1449,"src":"403:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"463:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1440,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"543:2:10"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1440,"src":"569:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1437,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:10"},"scope":1449,"src":"528:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1441,"nodeType":"StructuredDocumentation","src":"590:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1448,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nodeType":"FunctionDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1443,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1448,"src":"703:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:10"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1448,"src":"743:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1445,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:10"},"scope":1449,"src":"685:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1450,"src":"297:463:10"}],"src":"112:649:10"},"id":10},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/common/ERC2981.sol","exportedSymbols":{"ERC165":[2326],"ERC2981":[1647],"IERC165":[2338],"IERC2981":[134]},"id":1648,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1451,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:11"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"../../interfaces/IERC2981.sol","id":1452,"nodeType":"ImportDirective","scope":1648,"sourceUnit":135,"src":"133:39:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1453,"nodeType":"ImportDirective","scope":1648,"sourceUnit":2327,"src":"173:46:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1455,"name":"IERC2981","nodeType":"IdentifierPath","referencedDeclaration":134,"src":"1125:8:11"},"id":1456,"nodeType":"InheritanceSpecifier","src":"1125:8:11"},{"baseName":{"id":1457,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2326,"src":"1135:6:11"},"id":1458,"nodeType":"InheritanceSpecifier","src":"1135:6:11"}],"contractDependencies":[134,2326,2338],"contractKind":"contract","documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"221:874:11","text":" @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n _Available since v4.5._"},"fullyImplemented":true,"id":1647,"linearizedBaseContracts":[1647,2326,134,2338],"name":"ERC2981","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC2981.RoyaltyInfo","id":1463,"members":[{"constant":false,"id":1460,"mutability":"mutable","name":"receiver","nodeType":"VariableDeclaration","scope":1463,"src":"1177:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"royaltyFraction","nodeType":"VariableDeclaration","scope":1463,"src":"1203:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1461,"name":"uint96","nodeType":"ElementaryTypeName","src":"1203:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"RoyaltyInfo","nodeType":"StructDefinition","scope":1647,"src":"1148:84:11","visibility":"public"},{"constant":false,"id":1466,"mutability":"mutable","name":"_defaultRoyaltyInfo","nodeType":"VariableDeclaration","scope":1647,"src":"1238:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":1465,"nodeType":"UserDefinedTypeName","pathNode":{"id":1464,"name":"RoyaltyInfo","nodeType":"IdentifierPath","referencedDeclaration":1463,"src":"1238:11:11"},"referencedDeclaration":1463,"src":"1238:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"private"},{"constant":false,"id":1471,"mutability":"mutable","name":"_tokenRoyaltyInfo","nodeType":"VariableDeclaration","scope":1647,"src":"1283:57:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1463_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"typeName":{"id":1470,"keyType":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1283:31:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1463_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo)"},"valueType":{"id":1469,"nodeType":"UserDefinedTypeName","pathNode":{"id":1468,"name":"RoyaltyInfo","nodeType":"IdentifierPath","referencedDeclaration":1463,"src":"1302:11:11"},"referencedDeclaration":1463,"src":"1302:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}}},"visibility":"private"},{"baseFunctions":[2325,2337],"body":{"id":1494,"nodeType":"Block","src":"1516:105:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1533:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1484,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"1553:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$134_$","typeString":"type(contract IERC2981)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC2981_$134_$","typeString":"type(contract IERC2981)"}],"id":1483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1548:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1548:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC2981_$134","typeString":"type(contract IERC2981)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1548:26:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1533:41:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1490,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1602:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1488,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1578:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2981_$1647_$","typeString":"type(contract super ERC2981)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2325,"src":"1578:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1578:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1533:81:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1481,"id":1493,"nodeType":"Return","src":"1526:88:11"}]},"documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"1347:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1495,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":1478,"nodeType":"OverrideSpecifier","overrides":[{"id":1476,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2338,"src":"1484:7:11"},{"id":1477,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2326,"src":"1493:6:11"}],"src":"1475:25:11"},"parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":1495,"src":"1435:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1473,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1435:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1434:20:11"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1480,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1495,"src":"1510:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1479,"name":"bool","nodeType":"ElementaryTypeName","src":"1510:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1509:6:11"},"scope":1647,"src":"1408:213:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[133],"body":{"id":1544,"nodeType":"Block","src":"1784:315:11","statements":[{"assignments":[1510],"declarations":[{"constant":false,"id":1510,"mutability":"mutable","name":"royalty","nodeType":"VariableDeclaration","scope":1544,"src":"1794:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo"},"typeName":{"id":1509,"nodeType":"UserDefinedTypeName","pathNode":{"id":1508,"name":"RoyaltyInfo","nodeType":"IdentifierPath","referencedDeclaration":1463,"src":"1794:11:11"},"referencedDeclaration":1463,"src":"1794:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage_ptr","typeString":"struct ERC2981.RoyaltyInfo"}},"visibility":"internal"}],"id":1514,"initialValue":{"baseExpression":{"id":1511,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"1823:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1463_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":1513,"indexExpression":{"id":1512,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"1841:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1823:26:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1794:55:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1515,"name":"royalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"1864:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"id":1516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1460,"src":"1864:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1892:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1884:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"1884:7:11","typeDescriptions":{}}},"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1884:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1864:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1527,"nodeType":"IfStatement","src":"1860:90:11","trueBody":{"id":1526,"nodeType":"Block","src":"1896:54:11","statements":[{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1522,"name":"royalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"1910:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1523,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"1920:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"src":"1910:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"id":1525,"nodeType":"ExpressionStatement","src":"1910:29:11"}]}},{"assignments":[1529],"declarations":[{"constant":false,"id":1529,"mutability":"mutable","name":"royaltyAmount","nodeType":"VariableDeclaration","scope":1544,"src":"1960:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1538,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1530,"name":"salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"1985:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1531,"name":"royalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"1997:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"id":1532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"royaltyFraction","nodeType":"MemberAccess","referencedDeclaration":1462,"src":"1997:23:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1985:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1984:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1535,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2024:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2024:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1984:57:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1960:81:11"},{"expression":{"components":[{"expression":{"id":1539,"name":"royalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"2060:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"id":1540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":1460,"src":"2060:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1541,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"2078:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2059:33:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":1507,"id":1543,"nodeType":"Return","src":"2052:40:11"}]},"documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"1627:39:11","text":" @inheritdoc IERC2981"},"functionSelector":"2a55205a","id":1545,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nodeType":"FunctionDefinition","overrides":{"id":1502,"nodeType":"OverrideSpecifier","overrides":[],"src":"1748:8:11"},"parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1545,"src":"1692:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"salePrice","nodeType":"VariableDeclaration","scope":1545,"src":"1709:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1691:36:11"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1545,"src":"1766:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"1766:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1545,"src":"1775:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1775:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1765:18:11"},"scope":1647,"src":"1671:428:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1553,"nodeType":"Block","src":"2440:29:11","statements":[{"expression":{"hexValue":"3130303030","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:5:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"functionReturnParameters":1550,"id":1552,"nodeType":"Return","src":"2450:12:11"}]},"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"2105:264:11","text":" @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."},"id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"_feeDenominator","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[],"src":"2398:2:11"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1554,"src":"2432:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1548,"name":"uint96","nodeType":"ElementaryTypeName","src":"2432:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"2431:8:11"},"scope":1647,"src":"2374:95:11","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":1587,"nodeType":"Block","src":"2814:243:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2832:12:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1564,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2848:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2848:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2832:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243323938313a20726f79616c7479206665652077696c6c206578636565642073616c655072696365","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2867:44:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d","typeString":"literal_string \"ERC2981: royalty fee will exceed salePrice\""},"value":"ERC2981: royalty fee will exceed salePrice"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d","typeString":"literal_string \"ERC2981: royalty fee will exceed salePrice\""}],"id":1562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2824:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2824:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1569,"nodeType":"ExpressionStatement","src":"2824:88:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1571,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2930:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2942:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1572,"name":"address","nodeType":"ElementaryTypeName","src":"2942:7:11","typeDescriptions":{}}},"id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2942:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2930:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243323938313a20696e76616c6964207265636569766572","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2954:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f66a1010ca1024f054dcd95a016427c9d452e7f1ceb553ccd3a5e37073a6ffff","typeString":"literal_string \"ERC2981: invalid receiver\""},"value":"ERC2981: invalid receiver"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f66a1010ca1024f054dcd95a016427c9d452e7f1ceb553ccd3a5e37073a6ffff","typeString":"literal_string \"ERC2981: invalid receiver\""}],"id":1570,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2922:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2922:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"2922:60:11"},{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1580,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2993:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1582,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"3027:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1583,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"3037:12:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1581,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"3015:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$1463_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3015:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"2993:57:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":1586,"nodeType":"ExpressionStatement","src":"2993:57:11"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"2475:250:11","text":" @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"_setDefaultRoyalty","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"receiver","nodeType":"VariableDeclaration","scope":1588,"src":"2758:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1556,"name":"address","nodeType":"ElementaryTypeName","src":"2758:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"feeNumerator","nodeType":"VariableDeclaration","scope":1588,"src":"2776:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1558,"name":"uint96","nodeType":"ElementaryTypeName","src":"2776:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"2757:39:11"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[],"src":"2814:0:11"},"scope":1647,"src":"2730:327:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1595,"nodeType":"Block","src":"3178:43:11","statements":[{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3188:26:11","subExpression":{"id":1592,"name":"_defaultRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"3195:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1594,"nodeType":"ExpressionStatement","src":"3188:26:11"}]},"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"3063:60:11","text":" @dev Removes default royalty information."},"id":1596,"implemented":true,"kind":"function","modifiers":[],"name":"_deleteDefaultRoyalty","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"3158:2:11"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[],"src":"3178:0:11"},"scope":1647,"src":"3128:93:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1633,"nodeType":"Block","src":"3590:252:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1607,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"3608:12:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1608,"name":"_feeDenominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3624:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint96_$","typeString":"function () pure returns (uint96)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3624:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"3608:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243323938313a20726f79616c7479206665652077696c6c206578636565642073616c655072696365","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3643:44:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d","typeString":"literal_string \"ERC2981: royalty fee will exceed salePrice\""},"value":"ERC2981: royalty fee will exceed salePrice"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dcda5bd52710522f2cc94635314fdacbfec7cf9b64adb69f4a07b374f938990d","typeString":"literal_string \"ERC2981: royalty fee will exceed salePrice\""}],"id":1606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3600:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3600:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1613,"nodeType":"ExpressionStatement","src":"3600:88:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1615,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"3706:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3726:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3718:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1616,"name":"address","nodeType":"ElementaryTypeName","src":"3718:7:11","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3718:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3706:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243323938313a20496e76616c696420706172616d6574657273","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3730:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d20a09dd8b4080dbbc254e38d9f607ef83a2c7a38b671ae8f8f162ffe46e2084","typeString":"literal_string \"ERC2981: Invalid parameters\""},"value":"ERC2981: Invalid parameters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d20a09dd8b4080dbbc254e38d9f607ef83a2c7a38b671ae8f8f162ffe46e2084","typeString":"literal_string \"ERC2981: Invalid parameters\""}],"id":1614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3698:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3698:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"ExpressionStatement","src":"3698:62:11"},{"expression":{"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1624,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"3771:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1463_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":1626,"indexExpression":{"id":1625,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"3789:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3771:26:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1628,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"3812:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1629,"name":"feeNumerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"3822:12:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":1627,"name":"RoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"3800:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RoyaltyInfo_$1463_storage_ptr_$","typeString":"type(struct ERC2981.RoyaltyInfo storage pointer)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_memory_ptr","typeString":"struct ERC2981.RoyaltyInfo memory"}},"src":"3771:64:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"id":1632,"nodeType":"ExpressionStatement","src":"3771:64:11"}]},"documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"3227:259:11","text":" @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."},"id":1634,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenRoyalty","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1634,"src":"3517:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"receiver","nodeType":"VariableDeclaration","scope":1634,"src":"3534:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"3534:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"feeNumerator","nodeType":"VariableDeclaration","scope":1634,"src":"3552:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":1602,"name":"uint96","nodeType":"ElementaryTypeName","src":"3552:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3516:56:11"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[],"src":"3590:0:11"},"scope":1647,"src":"3491:351:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1645,"nodeType":"Block","src":"4010:50:11","statements":[{"expression":{"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4020:33:11","subExpression":{"baseExpression":{"id":1640,"name":"_tokenRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"4027:17:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1463_storage_$","typeString":"mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"}},"id":1642,"indexExpression":{"id":1641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"4045:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4027:26:11","typeDescriptions":{"typeIdentifier":"t_struct$_RoyaltyInfo_$1463_storage","typeString":"struct ERC2981.RoyaltyInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1644,"nodeType":"ExpressionStatement","src":"4020:33:11"}]},"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"3848:95:11","text":" @dev Resets royalty information for the token id back to the global default."},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"_resetTokenRoyalty","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1646,"src":"3976:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3976:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3975:17:11"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[],"src":"4010:0:11"},"scope":1647,"src":"3948:112:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1648,"src":"1096:2966:11"}],"src":"108:3955:11"},"id":11},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1977]},"id":1978,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1649,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"126:67:12","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1977,"linearizedBaseContracts":[1977],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":1664,"nodeType":"Block","src":"1478:254:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1658,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"1702:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1657,"id":1663,"nodeType":"Return","src":"1695:30:12"}]},"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"216:1191:12","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1665,"src":"1432:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:12"},"returnParameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1665,"src":"1472:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1655,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:12"},"scope":1977,"src":"1412:320:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1698,"nodeType":"Block","src":"2718:241:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1676,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1977","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1977","typeString":"library Address"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:12","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1679,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2761:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1673,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1683,"nodeType":"ExpressionStatement","src":"2728:73:12"},{"assignments":[1685,null],"declarations":[{"constant":false,"id":1685,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1698,"src":"2813:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1684,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1692,"initialValue":{"arguments":[{"hexValue":"","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1686,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2831:9:12","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2853:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:12"},{"expression":{"arguments":[{"id":1694,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"2882:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"2874:78:12"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"1738:904:12","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1699,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1699,"src":"2666:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1699,"src":"2693:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:12"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[],"src":"2718:0:12"},"scope":1977,"src":"2647:312:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1716,"nodeType":"Block","src":"3790:96:12","statements":[{"expression":{"arguments":[{"id":1710,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"3829:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1711,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"3837:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1709,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1757,1801],"referencedDeclaration":1801,"src":"3807:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1708,"id":1715,"nodeType":"Return","src":"3800:79:12"}]},"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"2965:731:12","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1717,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1717,"src":"3723:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1717,"src":"3739:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1703,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:12"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1717,"src":"3776:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1706,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:12"},"scope":1977,"src":"3701:185:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1736,"nodeType":"Block","src":"4255:76:12","statements":[{"expression":{"arguments":[{"id":1730,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"4294:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"4302:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1733,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"4311:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1729,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1757,1801],"referencedDeclaration":1801,"src":"4272:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1728,"id":1735,"nodeType":"Return","src":"4265:59:12"}]},"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"3892:211:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1737,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1737,"src":"4139:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1737,"src":"4163:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1721,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1724,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1737,"src":"4190:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1723,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:12"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1737,"src":"4241:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1726,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:12"},"scope":1977,"src":"4108:223:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1756,"nodeType":"Block","src":"4806:111:12","statements":[{"expression":{"arguments":[{"id":1750,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"4845:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4853:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4859:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1749,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1757,1801],"referencedDeclaration":1801,"src":"4823:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1748,"id":1755,"nodeType":"Return","src":"4816:94:12"}]},"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"4337:351:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1757,"src":"4724:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1757,"src":"4740:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1741,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1757,"src":"4759:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:12"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1757,"src":"4792:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1746,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:12"},"scope":1977,"src":"4693:224:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1800,"nodeType":"Block","src":"5344:267:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1774,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1977","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1977","typeString":"library Address"}],"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:12","typeDescriptions":{}}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"5387:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1781,"nodeType":"ExpressionStatement","src":"5354:81:12"},{"assignments":[1783,1785],"declarations":[{"constant":false,"id":1783,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1800,"src":"5446:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1782,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1800,"src":"5460:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1784,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1792,"initialValue":{"arguments":[{"id":1790,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"5513:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1786,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5487:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"5506:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:12"},{"expression":{"arguments":[{"id":1794,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5562:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1795,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"5570:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1796,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"5579:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1797,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"5591:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1793,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"5535:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1770,"id":1799,"nodeType":"Return","src":"5528:76:12"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"4923:237:12","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1801,"src":"5205:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1801,"src":"5229:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1761,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1801,"src":"5256:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1801,"src":"5279:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1765,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:12"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1801,"src":"5330:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1768,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:12"},"scope":1977,"src":"5165:446:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"5888:97:12","statements":[{"expression":{"arguments":[{"id":1812,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"5924:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1813,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"5932:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1811,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1818,1847],"referencedDeclaration":1847,"src":"5905:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1810,"id":1816,"nodeType":"Return","src":"5898:80:12"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"5617:166:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1818,"src":"5816:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1818,"src":"5832:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1805,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:12"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1818,"src":"5874:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1808,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:12"},"scope":1977,"src":"5788:197:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1846,"nodeType":"Block","src":"6327:168:12","statements":[{"assignments":[1831,1833],"declarations":[{"constant":false,"id":1831,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1846,"src":"6338:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1830,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1846,"src":"6352:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1832,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1838,"initialValue":{"arguments":[{"id":1836,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6397:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1834,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6379:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:12","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:12"},{"expression":{"arguments":[{"id":1840,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6446:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1841,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6454:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1842,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"6463:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1843,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"6475:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1839,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6419:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1829,"id":1845,"nodeType":"Return","src":"6412:76:12"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"5991:173:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1847,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1847,"src":"6206:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1847,"src":"6230:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1822,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1847,"src":"6257:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1824,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:12"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1847,"src":"6313:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1827,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:12"},"scope":1977,"src":"6169:326:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1863,"nodeType":"Block","src":"6771:101:12","statements":[{"expression":{"arguments":[{"id":1858,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"6809:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1859,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"6817:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1857,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1864,1893],"referencedDeclaration":1893,"src":"6788:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1856,"id":1862,"nodeType":"Return","src":"6781:84:12"}]},"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"6501:168:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1864,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1864,"src":"6704:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1864,"src":"6720:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1851,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:12"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1864,"src":"6757:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1854,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:12"},"scope":1977,"src":"6674:198:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"7213:170:12","statements":[{"assignments":[1877,1879],"declarations":[{"constant":false,"id":1877,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1892,"src":"7224:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1876,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1892,"src":"7238:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1878,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1884,"initialValue":{"arguments":[{"id":1882,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"7285:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1880,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"7265:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:12","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:12"},{"expression":{"arguments":[{"id":1886,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"7334:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1887,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"7342:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1888,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"7351:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1889,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"7363:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1885,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"7307:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1875,"id":1891,"nodeType":"Return","src":"7300:76:12"}]},"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"6878:175:12","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1893,"src":"7097:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1869,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1893,"src":"7121:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1868,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1871,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1893,"src":"7148:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1870,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:12"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1893,"src":"7199:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1873,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:12"},"scope":1977,"src":"7058:325:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"7865:434:12","statements":[{"condition":{"id":1907,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"7879:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1929,"nodeType":"Block","src":"8235:58:12","statements":[{"expression":{"arguments":[{"id":1925,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"8257:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1926,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"8269:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1924,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8249:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1928,"nodeType":"ExpressionStatement","src":"8249:33:12"}]},"id":1930,"nodeType":"IfStatement","src":"7875:418:12","trueBody":{"id":1923,"nodeType":"Block","src":"7888:341:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1908,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"7906:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1920,"nodeType":"IfStatement","src":"7902:286:12","trueBody":{"id":1919,"nodeType":"Block","src":"7930:258:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1914,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"8132:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1913,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"8121:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"ExpressionStatement","src":"8113:60:12"}]}},{"expression":{"id":1921,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"8208:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1906,"id":1922,"nodeType":"Return","src":"8201:17:12"}]}}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"7389:277:12","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1932,"src":"7716:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1932,"src":"7740:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1897,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1932,"src":"7762:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1899,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1932,"src":"7795:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1901,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:12"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1932,"src":"7851:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1904,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:12"},"scope":1977,"src":"7671:628:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1955,"nodeType":"Block","src":"8680:135:12","statements":[{"condition":{"id":1944,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"8694:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1953,"nodeType":"Block","src":"8751:58:12","statements":[{"expression":{"arguments":[{"id":1949,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"8773:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1950,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"8785:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1948,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8765:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"8765:33:12"}]},"id":1954,"nodeType":"IfStatement","src":"8690:119:12","trueBody":{"id":1947,"nodeType":"Block","src":"8703:42:12","statements":[{"expression":{"id":1945,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"8724:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1943,"id":1946,"nodeType":"Return","src":"8717:17:12"}]}}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"8305:210:12","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1956,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nodeType":"FunctionDefinition","parameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1956,"src":"8555:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1934,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1956,"src":"8577:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1956,"src":"8610:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1938,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:12"},"returnParameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1956,"src":"8666:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1941,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:12"},"scope":1977,"src":"8520:295:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1975,"nodeType":"Block","src":"8904:457:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1963,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"8980:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1973,"nodeType":"Block","src":"9310:45:12","statements":[{"expression":{"arguments":[{"id":1970,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"9331:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1969,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1972,"nodeType":"ExpressionStatement","src":"9324:20:12"}]},"id":1974,"nodeType":"IfStatement","src":"8976:379:12","trueBody":{"id":1968,"nodeType":"Block","src":"9003:301:12","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:12","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:12","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:12"},"nodeType":"YulFunctionCall","src":"9202:17:12"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:12","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:12"},"nodeType":"YulFunctionCall","src":"9243:19:12"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:12"},"nodeType":"YulFunctionCall","src":"9236:44:12"},"nodeType":"YulExpressionStatement","src":"9236:44:12"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1958,"isOffset":false,"isSlot":false,"src":"9208:10:12","valueSize":1},{"declaration":1958,"isOffset":false,"isSlot":false,"src":"9251:10:12","valueSize":1}],"id":1967,"nodeType":"InlineAssembly","src":"9152:142:12"}]}}]},"id":1976,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1976,"src":"8838:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1957,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1976,"src":"8863:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1959,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:12"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[],"src":"8904:0:12"},"scope":1977,"src":"8821:540:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1978,"src":"194:9169:12"}],"src":"101:9263:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1999]},"id":2000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1979,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:13"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"111:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1999,"linearizedBaseContracts":[1999],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":1988,"nodeType":"Block","src":"702:34:13","statements":[{"expression":{"expression":{"id":1985,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1984,"id":1987,"nodeType":"Return","src":"712:17:13"}]},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"659:2:13"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1989,"src":"693:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1982,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:13"},"scope":1999,"src":"640:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1997,"nodeType":"Block","src":"809:32:13","statements":[{"expression":{"expression":{"id":1994,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1993,"id":1996,"nodeType":"Return","src":"819:15:13"}]},"id":1998,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[],"src":"759:2:13"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1998,"src":"793:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:13"},"scope":1999,"src":"742:99:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2000,"src":"608:235:13"}],"src":"86:758:13"},"id":13},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2073]},"id":2074,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2001,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"112:311:14","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2073,"linearizedBaseContracts":[2073],"name":"Counters","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":2005,"members":[{"constant":false,"id":2004,"mutability":"mutable","name":"_value","nodeType":"VariableDeclaration","scope":2005,"src":"786:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nodeType":"StructDefinition","scope":2073,"src":"447:374:14","visibility":"public"},{"body":{"id":2016,"nodeType":"Block","src":"901:38:14","statements":[{"expression":{"expression":{"id":2013,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"918:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"918:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2012,"id":2015,"nodeType":"Return","src":"911:21:14"}]},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"current","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"counter","nodeType":"VariableDeclaration","scope":2017,"src":"844:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2007,"nodeType":"UserDefinedTypeName","pathNode":{"id":2006,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"844:7:14"},"referencedDeclaration":2005,"src":"844:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:14"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2017,"src":"892:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:14"},"scope":2073,"src":"827:112:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"998:70:14","statements":[{"id":2029,"nodeType":"UncheckedBlock","src":"1008:54:14","statements":[{"expression":{"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2023,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"1032:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"1032:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2028,"nodeType":"ExpressionStatement","src":"1032:19:14"}]}]},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"counter","nodeType":"VariableDeclaration","scope":2031,"src":"964:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2019,"nodeType":"UserDefinedTypeName","pathNode":{"id":2018,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"964:7:14"},"referencedDeclaration":2005,"src":"964:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:14"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[],"src":"998:0:14"},"scope":2073,"src":"945:123:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2058,"nodeType":"Block","src":"1127:176:14","statements":[{"assignments":[2038],"declarations":[{"constant":false,"id":2038,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2058,"src":"1137:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2041,"initialValue":{"expression":{"id":2039,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"1153:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"1153:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"1185:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2048,"nodeType":"ExpressionStatement","src":"1177:49:14"},{"id":2057,"nodeType":"UncheckedBlock","src":"1236:61:14","statements":[{"expression":{"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2049,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"1260:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"1260:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"1277:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2056,"nodeType":"ExpressionStatement","src":"1260:26:14"}]}]},"id":2059,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"counter","nodeType":"VariableDeclaration","scope":2059,"src":"1093:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2033,"nodeType":"UserDefinedTypeName","pathNode":{"id":2032,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"1093:7:14"},"referencedDeclaration":2005,"src":"1093:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:14"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[],"src":"1127:0:14"},"scope":2073,"src":"1074:229:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2071,"nodeType":"Block","src":"1358:35:14","statements":[{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2065,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"1368:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2004,"src":"1368:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ExpressionStatement","src":"1368:18:14"}]},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"counter","nodeType":"VariableDeclaration","scope":2072,"src":"1324:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2061,"nodeType":"UserDefinedTypeName","pathNode":{"id":2060,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"1324:7:14"},"referencedDeclaration":2005,"src":"1324:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:14"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[],"src":"1358:0:14"},"scope":2073,"src":"1309:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2074,"src":"424:971:14"}],"src":"87:1309:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3204],"SignedMath":[3621],"Strings":[2302]},"id":2303,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2075,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2076,"nodeType":"ImportDirective","scope":2303,"sourceUnit":3205,"src":"126:25:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2077,"nodeType":"ImportDirective","scope":2303,"sourceUnit":3622,"src":"152:31:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2078,"nodeType":"StructuredDocumentation","src":"185:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2302,"linearizedBaseContracts":[2302],"name":"Strings","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2081,"mutability":"constant","name":"_SYMBOLS","nodeType":"VariableDeclaration","scope":2302,"src":"242:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2079,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2084,"mutability":"constant","name":"_ADDRESS_LENGTH","nodeType":"VariableDeclaration","scope":2302,"src":"302:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2082,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2131,"nodeType":"Block","src":"518:625:15","statements":[{"id":2130,"nodeType":"UncheckedBlock","src":"528:609:15","statements":[{"assignments":[2093],"declarations":[{"constant":false,"id":2093,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":2130,"src":"552:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2100,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"580:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2094,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"569:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3204_$","typeString":"type(library Math)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3041,"src":"569:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:15"},{"assignments":[2102],"declarations":[{"constant":false,"id":2102,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":2130,"src":"604:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2101,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2107,"initialValue":{"arguments":[{"id":2105,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"638:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2103,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:15"},{"assignments":[2109],"declarations":[{"constant":false,"id":2109,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":2130,"src":"659:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2110,"nodeType":"VariableDeclarationStatement","src":"659:11:15"},{"AST":{"nodeType":"YulBlock","src":"740:67:15","statements":[{"nodeType":"YulAssignment","src":"758:35:15","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:15","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:15"},"nodeType":"YulFunctionCall","src":"777:15:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:15"},"nodeType":"YulFunctionCall","src":"765:28:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:15"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2102,"isOffset":false,"isSlot":false,"src":"769:6:15","valueSize":1},{"declaration":2093,"isOffset":false,"isSlot":false,"src":"785:6:15","valueSize":1},{"declaration":2109,"isOffset":false,"isSlot":false,"src":"758:3:15","valueSize":1}],"id":2111,"nodeType":"InlineAssembly","src":"731:76:15"},{"body":{"id":2126,"nodeType":"Block","src":"833:267:15","statements":[{"expression":{"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:15","subExpression":{"id":2113,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"851:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2115,"nodeType":"ExpressionStatement","src":"851:5:15"},{"AST":{"nodeType":"YulBlock","src":"934:84:15","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:15"},"nodeType":"YulFunctionCall","src":"974:14:15"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:15"},"nodeType":"YulFunctionCall","src":"969:30:15"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:15"},"nodeType":"YulFunctionCall","src":"956:44:15"},"nodeType":"YulExpressionStatement","src":"956:44:15"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2081,"isOffset":false,"isSlot":false,"src":"990:8:15","valueSize":1},{"declaration":2109,"isOffset":false,"isSlot":false,"src":"964:3:15","valueSize":1},{"declaration":2087,"isOffset":false,"isSlot":false,"src":"978:5:15","valueSize":1}],"id":2116,"nodeType":"InlineAssembly","src":"925:93:15"},{"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"1035:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2120,"nodeType":"ExpressionStatement","src":"1035:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"1068:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2125,"nodeType":"IfStatement","src":"1064:21:15","trueBody":{"id":2124,"nodeType":"Break","src":"1080:5:15"}}]},"condition":{"hexValue":"74727565","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2127,"nodeType":"WhileStatement","src":"820:280:15"},{"expression":{"id":2128,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"1120:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2091,"id":2129,"nodeType":"Return","src":"1113:13:15"}]}]},"documentation":{"id":2085,"nodeType":"StructuredDocumentation","src":"352:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2132,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2132,"src":"465:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:15"},"returnParameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2132,"src":"503:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2089,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:15"},"scope":2302,"src":"447:696:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2159,"nodeType":"Block","src":"1313:103:15","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1354:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:15","trueExpression":{"hexValue":"2d","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1400:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2151,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"1385:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3621_$","typeString":"type(library SignedMath)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3620,"src":"1385:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2150,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2132,2160],"referencedDeclaration":2132,"src":"1376:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2142,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2140,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:15","typeDescriptions":{}}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2139,"id":2158,"nodeType":"Return","src":"1323:86:15"}]},"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"1149:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nodeType":"FunctionDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2160,"src":"1261:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2134,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:15"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2160,"src":"1298:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2137,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:15"},"scope":2302,"src":"1243:173:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"1595:100:15","statements":[{"id":2178,"nodeType":"UncheckedBlock","src":"1605:84:15","statements":[{"expression":{"arguments":[{"id":2169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"1648:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"1667:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2170,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"1655:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3204_$","typeString":"type(library Math)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"1655:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2168,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2180,2256,2276],"referencedDeclaration":2256,"src":"1636:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2167,"id":2177,"nodeType":"Return","src":"1629:49:15"}]}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"1422:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2180,"src":"1542:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:15"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2180,"src":"1580:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2165,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:15"},"scope":2302,"src":"1521:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2255,"nodeType":"Block","src":"1908:347:15","statements":[{"assignments":[2191],"declarations":[{"constant":false,"id":2191,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":2255,"src":"1918:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2190,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2200,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2195,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"1954:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2192,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:15"},{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2201,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"1975:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2203,"indexExpression":{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2206,"nodeType":"ExpressionStatement","src":"1975:15:15"},{"expression":{"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2207,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2000:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2209,"indexExpression":{"hexValue":"31","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2212,"nodeType":"ExpressionStatement","src":"2000:15:15"},{"body":{"id":2241,"nodeType":"Block","src":"2070:83:15","statements":[{"expression":{"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2227,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2084:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2229,"indexExpression":{"id":2228,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2091:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2230,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"2096:8:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2234,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"2105:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2236,"nodeType":"ExpressionStatement","src":"2084:33:15"},{"expression":{"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"2131:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2240,"nodeType":"ExpressionStatement","src":"2131:11:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2058:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2242,"initializationExpression":{"assignments":[2214],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2242,"src":"2030:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2220,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2216,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2046:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:15"},"loopExpression":{"expression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:15","subExpression":{"id":2224,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2067:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2226,"nodeType":"ExpressionStatement","src":"2065:3:15"},"nodeType":"ForStatement","src":"2025:128:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"2170:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"ExpressionStatement","src":"2162:55:15"},{"expression":{"arguments":[{"id":2252,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2241:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2250,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:15","typeDescriptions":{}}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2189,"id":2254,"nodeType":"Return","src":"2227:21:15"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"1701:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2256,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2256,"src":"1839:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":2256,"src":"1854:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:15"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2256,"src":"1893:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2187,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:15"},"scope":2302,"src":"1818:437:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2275,"nodeType":"Block","src":"2480:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2269,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"2525:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2267,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:15","typeDescriptions":{}}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:15","typeDescriptions":{}}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2272,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"2533:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2264,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2180,2256,2276],"referencedDeclaration":2256,"src":"2497:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2263,"id":2274,"nodeType":"Return","src":"2490:59:15"}]},"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"2261:141:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2276,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"addr","nodeType":"VariableDeclaration","scope":2276,"src":"2428:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:15"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2276,"src":"2465:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2261,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:15"},"scope":2302,"src":"2407:149:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"2711:66:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2744:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2287,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:15","typeDescriptions":{}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2286,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"2767:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2293,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:15","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2292,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2285,"id":2299,"nodeType":"Return","src":"2721:49:15"}]},"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"2562:66:15","text":" @dev Returns true if the two strings are equal."},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2301,"src":"2648:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2278,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2301,"src":"2665:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2280,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:15"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2301,"src":"2705:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2283,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:15"},"scope":2302,"src":"2633:144:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2303,"src":"220:2559:15"}],"src":"101:2679:15"},"id":15},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2326],"IERC165":[2338]},"id":2327,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2304,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2305,"nodeType":"ImportDirective","scope":2327,"sourceUnit":2339,"src":"124:23:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2307,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2338,"src":"754:7:16"},"id":2308,"nodeType":"InheritanceSpecifier","src":"754:7:16"}],"contractDependencies":[2338],"contractKind":"contract","documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"149:576:16","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2326,"linearizedBaseContracts":[2326,2338],"name":"ERC165","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2337],"body":{"id":2324,"nodeType":"Block","src":"920:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"937:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2319,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"957:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2338_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2338_$","typeString":"type(contract IERC165)"}],"id":2318,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2338","typeString":"type(contract IERC165)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2316,"id":2323,"nodeType":"Return","src":"930:47:16"}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"768:56:16","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2325,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":2313,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:16"},"parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":2325,"src":"856:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2310,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:16"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2325,"src":"914:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2314,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:16"},"scope":2326,"src":"829:155:16","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2327,"src":"726:260:16"}],"src":"99:888:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2338]},"id":2339,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2328,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"125:279:17","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2338,"linearizedBaseContracts":[2338],"name":"IERC165","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"429:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2337,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":2337,"src":"801:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2331,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:17"},"returnParameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2337,"src":"844:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2334,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:17"},"scope":2338,"src":"774:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2339,"src":"405:447:17"}],"src":"100:753:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3204]},"id":3205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2340,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:18"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"128:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3204,"linearizedBaseContracts":[3204],"name":"Math","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2345,"members":[{"id":2342,"name":"Down","nodeType":"EnumValue","src":"245:4:18"},{"id":2343,"name":"Up","nodeType":"EnumValue","src":"287:2:18"},{"id":2344,"name":"Zero","nodeType":"EnumValue","src":"318:4:18"}],"name":"Rounding","nodeType":"EnumDefinition","src":"221:122:18"},{"body":{"id":2362,"nodeType":"Block","src":"480:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"497:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2356,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"501:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"509:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:18","trueExpression":{"id":2358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"505:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2354,"id":2361,"nodeType":"Return","src":"490:20:18"}]},"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"349:59:18","text":" @dev Returns the largest of two numbers."},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2363,"src":"426:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2350,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2363,"src":"437:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:18"},"returnParameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2363,"src":"471:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:18"},"scope":3204,"src":"413:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2380,"nodeType":"Block","src":"655:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"672:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"676:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"684:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:18","trueExpression":{"id":2376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"680:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2372,"id":2379,"nodeType":"Return","src":"665:20:18"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"523:60:18","text":" @dev Returns the smallest of two numbers."},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2381,"src":"601:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2368,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2381,"src":"612:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:18"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2381,"src":"646:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:18"},"scope":3204,"src":"588:104:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2403,"nodeType":"Block","src":"876:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"931:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"935:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"941:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"945:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2390,"id":2402,"nodeType":"Return","src":"923:28:18"}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"698:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2404,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2404,"src":"822:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2404,"src":"833:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:18"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2404,"src":"867:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:18"},"scope":3204,"src":"805:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"1228:123:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2414,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"1330:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2422,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1339:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:18","trueExpression":{"hexValue":"30","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2413,"id":2427,"nodeType":"Return","src":"1309:35:18"}]},"documentation":{"id":2405,"nodeType":"StructuredDocumentation","src":"964:188:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2429,"src":"1174:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2429,"src":"1185:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:18"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2429,"src":"1219:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:18"},"scope":3204,"src":"1157:194:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2551,"nodeType":"Block","src":"1765:4115:18","statements":[{"id":2550,"nodeType":"UncheckedBlock","src":"1775:4099:18","statements":[{"assignments":[2442],"declarations":[{"constant":false,"id":2442,"mutability":"mutable","name":"prod0","nodeType":"VariableDeclaration","scope":2550,"src":"2096:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2443,"nodeType":"VariableDeclarationStatement","src":"2096:13:18"},{"assignments":[2445],"declarations":[{"constant":false,"id":2445,"mutability":"mutable","name":"prod1","nodeType":"VariableDeclaration","scope":2550,"src":"2168:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2446,"nodeType":"VariableDeclarationStatement","src":"2168:13:18"},{"AST":{"nodeType":"YulBlock","src":"2248:157:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:18"},"nodeType":"YulFunctionCall","src":"2289:6:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:18"},"nodeType":"YulFunctionCall","src":"2276:20:18"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:18","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:18"},"nodeType":"YulFunctionCall","src":"2322:9:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:18"}]},{"nodeType":"YulAssignment","src":"2348:43:18","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:18"},"nodeType":"YulFunctionCall","src":"2361:14:18"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:18"},"nodeType":"YulFunctionCall","src":"2377:13:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:18"},"nodeType":"YulFunctionCall","src":"2357:34:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2442,"isOffset":false,"isSlot":false,"src":"2313:5:18","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"2369:5:18","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"2384:5:18","valueSize":1},{"declaration":2445,"isOffset":false,"isSlot":false,"src":"2348:5:18","valueSize":1},{"declaration":2432,"isOffset":false,"isSlot":false,"src":"2283:1:18","valueSize":1},{"declaration":2432,"isOffset":false,"isSlot":false,"src":"2326:1:18","valueSize":1},{"declaration":2434,"isOffset":false,"isSlot":false,"src":"2286:1:18","valueSize":1},{"declaration":2434,"isOffset":false,"isSlot":false,"src":"2329:1:18","valueSize":1}],"id":2447,"nodeType":"InlineAssembly","src":"2239:166:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2448,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"2486:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2456,"nodeType":"IfStatement","src":"2482:368:18","trueBody":{"id":2455,"nodeType":"Block","src":"2498:352:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2451,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"2816:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2452,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"2824:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2440,"id":2454,"nodeType":"Return","src":"2809:26:18"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"2960:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2459,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"2974:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2463,"nodeType":"ExpressionStatement","src":"2952:53:18"},{"assignments":[2465],"declarations":[{"constant":false,"id":2465,"mutability":"mutable","name":"remainder","nodeType":"VariableDeclaration","scope":2550,"src":"3261:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2466,"nodeType":"VariableDeclarationStatement","src":"3261:17:18"},{"AST":{"nodeType":"YulBlock","src":"3301:291:18","statements":[{"nodeType":"YulAssignment","src":"3370:38:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:18"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:18"},"nodeType":"YulFunctionCall","src":"3383:25:18"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:18"}]},{"nodeType":"YulAssignment","src":"3490:41:18","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:18"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:18"},"nodeType":"YulFunctionCall","src":"3510:20:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:18"},"nodeType":"YulFunctionCall","src":"3499:32:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:18"}]},{"nodeType":"YulAssignment","src":"3548:30:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:18"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:18"},"nodeType":"YulFunctionCall","src":"3557:21:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2436,"isOffset":false,"isSlot":false,"src":"3396:11:18","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"3524:5:18","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"3548:5:18","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"3561:5:18","valueSize":1},{"declaration":2445,"isOffset":false,"isSlot":false,"src":"3490:5:18","valueSize":1},{"declaration":2445,"isOffset":false,"isSlot":false,"src":"3503:5:18","valueSize":1},{"declaration":2465,"isOffset":false,"isSlot":false,"src":"3370:9:18","valueSize":1},{"declaration":2465,"isOffset":false,"isSlot":false,"src":"3513:9:18","valueSize":1},{"declaration":2465,"isOffset":false,"isSlot":false,"src":"3568:9:18","valueSize":1},{"declaration":2432,"isOffset":false,"isSlot":false,"src":"3390:1:18","valueSize":1},{"declaration":2434,"isOffset":false,"isSlot":false,"src":"3393:1:18","valueSize":1}],"id":2467,"nodeType":"InlineAssembly","src":"3292:300:18"},{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"twos","nodeType":"VariableDeclaration","scope":2550,"src":"3899:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2477,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"3914:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:18","subExpression":{"id":2471,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"3930:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:18"},{"AST":{"nodeType":"YulBlock","src":"3969:362:18","statements":[{"nodeType":"YulAssignment","src":"4034:37:18","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:18"},"nodeType":"YulFunctionCall","src":"4049:22:18"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:18"}]},{"nodeType":"YulAssignment","src":"4138:25:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:18"},"nodeType":"YulFunctionCall","src":"4147:16:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:18"}]},{"nodeType":"YulAssignment","src":"4278:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:18","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:18"},"nodeType":"YulFunctionCall","src":"4294:12:18"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:18"},"nodeType":"YulFunctionCall","src":"4290:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:18"},"nodeType":"YulFunctionCall","src":"4286:31:18"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2436,"isOffset":false,"isSlot":false,"src":"4034:11:18","valueSize":1},{"declaration":2436,"isOffset":false,"isSlot":false,"src":"4053:11:18","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"4138:5:18","valueSize":1},{"declaration":2442,"isOffset":false,"isSlot":false,"src":"4151:5:18","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"4066:4:18","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"4158:4:18","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"4278:4:18","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"4301:4:18","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"4308:4:18","valueSize":1}],"id":2478,"nodeType":"InlineAssembly","src":"3960:371:18"},{"expression":{"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2479,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"4397:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"4406:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2481,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4414:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2484,"nodeType":"ExpressionStatement","src":"4397:21:18"},{"assignments":[2486],"declarations":[{"constant":false,"id":2486,"mutability":"mutable","name":"inverse","nodeType":"VariableDeclaration","scope":2550,"src":"4736:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2493,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2488,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"4759:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:18"},{"expression":{"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2494,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"4992:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2496,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5007:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2497,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5021:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2501,"nodeType":"ExpressionStatement","src":"4992:36:18"},{"expression":{"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2502,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2504,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5076:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2505,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5090:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2509,"nodeType":"ExpressionStatement","src":"5061:36:18"},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2510,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5131:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2512,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5146:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2513,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5160:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2517,"nodeType":"ExpressionStatement","src":"5131:36:18"},{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2518,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5201:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5216:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2521,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2525,"nodeType":"ExpressionStatement","src":"5201:36:18"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2526,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5286:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2529,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5300:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2533,"nodeType":"ExpressionStatement","src":"5271:36:18"},{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5342:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"5357:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2537,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5371:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2541,"nodeType":"ExpressionStatement","src":"5342:36:18"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"5812:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2543,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"5821:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2544,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5829:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"5812:24:18"},{"expression":{"id":2548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"5857:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2440,"id":2549,"nodeType":"Return","src":"5850:13:18"}]}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"1357:305:18","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2552,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2552,"src":"1683:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2552,"src":"1694:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":2552,"src":"1705:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:18"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2552,"src":"1749:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:18"},"scope":3204,"src":"1667:4213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2595,"nodeType":"Block","src":"6122:189:18","statements":[{"assignments":[2568],"declarations":[{"constant":false,"id":2568,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2595,"src":"6132:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2574,"initialValue":{"arguments":[{"id":2570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"6156:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2571,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"6159:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2572,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"6162:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2569,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2552,2596],"referencedDeclaration":2552,"src":"6149:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"6188:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2576,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"6200:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2345_$","typeString":"type(enum Math.Rounding)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"6200:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"src":"6188:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2580,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"6222:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2581,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"6225:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2582,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2559,"src":"6228:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2579,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2592,"nodeType":"IfStatement","src":"6184:98:18","trueBody":{"id":2591,"nodeType":"Block","src":"6246:36:18","statements":[{"expression":{"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"6260:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2590,"nodeType":"ExpressionStatement","src":"6260:11:18"}]}},{"expression":{"id":2593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"6298:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2566,"id":2594,"nodeType":"Return","src":"6291:13:18"}]},"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"5886:121:18","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2596,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2596,"src":"6028:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2596,"src":"6039:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":2596,"src":"6050:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2596,"src":"6071:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"typeName":{"id":2561,"nodeType":"UserDefinedTypeName","pathNode":{"id":2560,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2345,"src":"6071:8:18"},"referencedDeclaration":2345,"src":"6071:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:18"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2596,"src":"6113:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:18"},"scope":3204,"src":"6012:299:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2707,"nodeType":"Block","src":"6587:1585:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"6601:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2610,"nodeType":"IfStatement","src":"6597:45:18","trueBody":{"id":2609,"nodeType":"Block","src":"6609:33:18","statements":[{"expression":{"hexValue":"30","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2603,"id":2608,"nodeType":"Return","src":"6623:8:18"}]}},{"assignments":[2612],"declarations":[{"constant":false,"id":2612,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2707,"src":"7321:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2621,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2615,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7349:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2614,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2876,2912],"referencedDeclaration":2876,"src":"7344:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:18"},{"id":2706,"nodeType":"UncheckedBlock","src":"7758:408:18","statements":[{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7782:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7792:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7801:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7805:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ExpressionStatement","src":"7782:35:18"},{"expression":{"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7831:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7841:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7850:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2636,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7854:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2643,"nodeType":"ExpressionStatement","src":"7831:35:18"},{"expression":{"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7880:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7890:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7899:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7903:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2654,"nodeType":"ExpressionStatement","src":"7880:35:18"},{"expression":{"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7929:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7939:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7948:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7952:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2665,"nodeType":"ExpressionStatement","src":"7929:35:18"},{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7978:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"7988:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7997:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8001:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"nodeType":"ExpressionStatement","src":"7978:35:18"},{"expression":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8027:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8037:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"8046:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8050:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2687,"nodeType":"ExpressionStatement","src":"8027:35:18"},{"expression":{"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8076:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8086:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"8095:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8099:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ExpressionStatement","src":"8076:35:18"},{"expression":{"arguments":[{"id":2700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8136:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"8144:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8148:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2699,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"8132:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2603,"id":2705,"nodeType":"Return","src":"8125:30:18"}]}]},"documentation":{"id":2597,"nodeType":"StructuredDocumentation","src":"6317:208:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2708,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2708,"src":"6544:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:18"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2708,"src":"6578:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:18"},"scope":3204,"src":"6530:1642:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2743,"nodeType":"Block","src":"8348:161:18","statements":[{"id":2742,"nodeType":"UncheckedBlock","src":"8358:145:18","statements":[{"assignments":[2720],"declarations":[{"constant":false,"id":2720,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2742,"src":"8382:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2724,"initialValue":{"arguments":[{"id":2722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"8404:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2721,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2708,2744],"referencedDeclaration":2708,"src":"8399:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"8427:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"8437:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2727,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"8449:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2345_$","typeString":"type(enum Math.Rounding)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"8449:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"src":"8437:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"8464:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"8473:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"8482:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:18","trueExpression":{"hexValue":"31","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2718,"id":2741,"nodeType":"Return","src":"8420:72:18"}]}]},"documentation":{"id":2709,"nodeType":"StructuredDocumentation","src":"8178:89:18","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2744,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2744,"src":"8286:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2744,"src":"8297:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"typeName":{"id":2713,"nodeType":"UserDefinedTypeName","pathNode":{"id":2712,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2345,"src":"8297:8:18"},"referencedDeclaration":2345,"src":"8297:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:18"},"returnParameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2744,"src":"8339:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:18"},"scope":3204,"src":"8272:237:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2875,"nodeType":"Block","src":"8694:922:18","statements":[{"assignments":[2753],"declarations":[{"constant":false,"id":2753,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2875,"src":"8704:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2755,"initialValue":{"hexValue":"30","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:18"},{"id":2872,"nodeType":"UncheckedBlock","src":"8732:855:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"8760:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2770,"nodeType":"IfStatement","src":"8756:99:18","trueBody":{"id":2769,"nodeType":"Block","src":"8778:77:18","statements":[{"expression":{"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"8796:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2764,"nodeType":"ExpressionStatement","src":"8796:13:18"},{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"8827:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"8827:13:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"8872:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2785,"nodeType":"IfStatement","src":"8868:96:18","trueBody":{"id":2784,"nodeType":"Block","src":"8889:75:18","statements":[{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"8907:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ExpressionStatement","src":"8907:12:18"},{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"8937:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2783,"nodeType":"ExpressionStatement","src":"8937:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"8981:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2800,"nodeType":"IfStatement","src":"8977:96:18","trueBody":{"id":2799,"nodeType":"Block","src":"8998:75:18","statements":[{"expression":{"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9016:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2794,"nodeType":"ExpressionStatement","src":"9016:12:18"},{"expression":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9046:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2798,"nodeType":"ExpressionStatement","src":"9046:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9090:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2815,"nodeType":"IfStatement","src":"9086:96:18","trueBody":{"id":2814,"nodeType":"Block","src":"9107:75:18","statements":[{"expression":{"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9125:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2809,"nodeType":"ExpressionStatement","src":"9125:12:18"},{"expression":{"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9155:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2813,"nodeType":"ExpressionStatement","src":"9155:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9199:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2830,"nodeType":"IfStatement","src":"9195:93:18","trueBody":{"id":2829,"nodeType":"Block","src":"9215:73:18","statements":[{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9233:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"9233:11:18"},{"expression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9262:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2828,"nodeType":"ExpressionStatement","src":"9262:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9305:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2845,"nodeType":"IfStatement","src":"9301:93:18","trueBody":{"id":2844,"nodeType":"Block","src":"9321:73:18","statements":[{"expression":{"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9339:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2839,"nodeType":"ExpressionStatement","src":"9339:11:18"},{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2840,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9368:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2843,"nodeType":"ExpressionStatement","src":"9368:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9411:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2860,"nodeType":"IfStatement","src":"9407:93:18","trueBody":{"id":2859,"nodeType":"Block","src":"9427:73:18","statements":[{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9445:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2854,"nodeType":"ExpressionStatement","src":"9445:11:18"},{"expression":{"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9474:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2858,"nodeType":"ExpressionStatement","src":"9474:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"9517:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2871,"nodeType":"IfStatement","src":"9513:64:18","trueBody":{"id":2870,"nodeType":"Block","src":"9533:44:18","statements":[{"expression":{"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9551:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2869,"nodeType":"ExpressionStatement","src":"9551:11:18"}]}}]},{"expression":{"id":2873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"9603:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2751,"id":2874,"nodeType":"Return","src":"9596:13:18"}]},"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"8515:113:18","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2876,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2876,"src":"8647:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:18"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2876,"src":"8685:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:18"},"scope":3204,"src":"8633:983:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2911,"nodeType":"Block","src":"9849:165:18","statements":[{"id":2910,"nodeType":"UncheckedBlock","src":"9859:149:18","statements":[{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2910,"src":"9883:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2892,"initialValue":{"arguments":[{"id":2890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"9905:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2889,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2876,2912],"referencedDeclaration":2876,"src":"9900:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"9932:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"9942:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2895,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"9954:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2345_$","typeString":"type(enum Math.Rounding)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"9954:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"src":"9942:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"9974:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"9983:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:18","trueExpression":{"hexValue":"31","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2886,"id":2909,"nodeType":"Return","src":"9925:72:18"}]}]},"documentation":{"id":2877,"nodeType":"StructuredDocumentation","src":"9622:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2912,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2912,"src":"9783:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2912,"src":"9798:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"typeName":{"id":2881,"nodeType":"UserDefinedTypeName","pathNode":{"id":2880,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2345,"src":"9798:8:18"},"referencedDeclaration":2345,"src":"9798:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:18"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2912,"src":"9840:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:18"},"scope":3204,"src":"9769:245:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3040,"nodeType":"Block","src":"10201:854:18","statements":[{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3040,"src":"10211:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2923,"initialValue":{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:18"},{"id":3037,"nodeType":"UncheckedBlock","src":"10239:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10267:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2940,"nodeType":"IfStatement","src":"10263:103:18","trueBody":{"id":2939,"nodeType":"Block","src":"10286:80:18","statements":[{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10304:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2934,"nodeType":"ExpressionStatement","src":"10304:17:18"},{"expression":{"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"10339:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2938,"nodeType":"ExpressionStatement","src":"10339:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10383:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2957,"nodeType":"IfStatement","src":"10379:103:18","trueBody":{"id":2956,"nodeType":"Block","src":"10402:80:18","statements":[{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10420:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2951,"nodeType":"ExpressionStatement","src":"10420:17:18"},{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"10455:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"nodeType":"ExpressionStatement","src":"10455:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10499:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"IfStatement","src":"10495:103:18","trueBody":{"id":2973,"nodeType":"Block","src":"10518:80:18","statements":[{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10536:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"nodeType":"ExpressionStatement","src":"10536:17:18"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"10571:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"10571:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10615:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2991,"nodeType":"IfStatement","src":"10611:100:18","trueBody":{"id":2990,"nodeType":"Block","src":"10633:78:18","statements":[{"expression":{"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10651:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2985,"nodeType":"ExpressionStatement","src":"10651:16:18"},{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"10685:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2989,"nodeType":"ExpressionStatement","src":"10685:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10728:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3008,"nodeType":"IfStatement","src":"10724:100:18","trueBody":{"id":3007,"nodeType":"Block","src":"10746:78:18","statements":[{"expression":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10764:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3002,"nodeType":"ExpressionStatement","src":"10764:16:18"},{"expression":{"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"10798:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3006,"nodeType":"ExpressionStatement","src":"10798:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10841:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"IfStatement","src":"10837:100:18","trueBody":{"id":3024,"nodeType":"Block","src":"10859:78:18","statements":[{"expression":{"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10877:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3019,"nodeType":"ExpressionStatement","src":"10877:16:18"},{"expression":{"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"10911:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3023,"nodeType":"ExpressionStatement","src":"10911:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"10954:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3036,"nodeType":"IfStatement","src":"10950:66:18","trueBody":{"id":3035,"nodeType":"Block","src":"10972:44:18","statements":[{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"10990:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3034,"nodeType":"ExpressionStatement","src":"10990:11:18"}]}}]},{"expression":{"id":3038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"11042:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2919,"id":3039,"nodeType":"Return","src":"11035:13:18"}]},"documentation":{"id":2913,"nodeType":"StructuredDocumentation","src":"10020:114:18","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3041,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3041,"src":"10154:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:18"},"returnParameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3041,"src":"10192:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:18"},"scope":3204,"src":"10139:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3076,"nodeType":"Block","src":"11290:167:18","statements":[{"id":3075,"nodeType":"UncheckedBlock","src":"11300:151:18","statements":[{"assignments":[3053],"declarations":[{"constant":false,"id":3053,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3075,"src":"11324:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3057,"initialValue":{"arguments":[{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"11347:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3054,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3041,3077],"referencedDeclaration":3041,"src":"11341:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"11374:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3059,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"11384:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3060,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"11396:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2345_$","typeString":"type(enum Math.Rounding)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"11396:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"src":"11384:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"11417:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"11426:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:18","trueExpression":{"hexValue":"31","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3051,"id":3074,"nodeType":"Return","src":"11367:73:18"}]}]},"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"11061:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3077,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3077,"src":"11224:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":3077,"src":"11239:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"typeName":{"id":3046,"nodeType":"UserDefinedTypeName","pathNode":{"id":3045,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2345,"src":"11239:8:18"},"referencedDeclaration":2345,"src":"11239:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:18"},"returnParameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3077,"src":"11281:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:18"},"scope":3204,"src":"11209:248:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3163,"nodeType":"Block","src":"11771:600:18","statements":[{"assignments":[3086],"declarations":[{"constant":false,"id":3086,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3163,"src":"11781:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3088,"initialValue":{"hexValue":"30","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:18"},{"id":3160,"nodeType":"UncheckedBlock","src":"11809:533:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11837:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3103,"nodeType":"IfStatement","src":"11833:98:18","trueBody":{"id":3102,"nodeType":"Block","src":"11855:76:18","statements":[{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11873:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3097,"nodeType":"ExpressionStatement","src":"11873:13:18"},{"expression":{"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"11904:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3101,"nodeType":"ExpressionStatement","src":"11904:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3118,"nodeType":"IfStatement","src":"11944:95:18","trueBody":{"id":3117,"nodeType":"Block","src":"11965:74:18","statements":[{"expression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11983:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3112,"nodeType":"ExpressionStatement","src":"11983:12:18"},{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"12013:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3116,"nodeType":"ExpressionStatement","src":"12013:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"12056:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3133,"nodeType":"IfStatement","src":"12052:95:18","trueBody":{"id":3132,"nodeType":"Block","src":"12073:74:18","statements":[{"expression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"12091:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3127,"nodeType":"ExpressionStatement","src":"12091:12:18"},{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"12121:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ExpressionStatement","src":"12121:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"12164:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"IfStatement","src":"12160:95:18","trueBody":{"id":3147,"nodeType":"Block","src":"12181:74:18","statements":[{"expression":{"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"12199:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3142,"nodeType":"ExpressionStatement","src":"12199:12:18"},{"expression":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"12229:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3146,"nodeType":"ExpressionStatement","src":"12229:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"12272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3159,"nodeType":"IfStatement","src":"12268:64:18","trueBody":{"id":3158,"nodeType":"Block","src":"12288:44:18","statements":[{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"12306:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3157,"nodeType":"ExpressionStatement","src":"12306:11:18"}]}}]},{"expression":{"id":3161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"12358:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3084,"id":3162,"nodeType":"Return","src":"12351:13:18"}]},"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"11463:240:18","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3164,"src":"11724:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:18"},"returnParameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3164,"src":"11762:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:18"},"scope":3204,"src":"11708:663:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3202,"nodeType":"Block","src":"12608:174:18","statements":[{"id":3201,"nodeType":"UncheckedBlock","src":"12618:158:18","statements":[{"assignments":[3176],"declarations":[{"constant":false,"id":3176,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3201,"src":"12642:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3175,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3180,"initialValue":{"arguments":[{"id":3178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"12666:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3177,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3164,3203],"referencedDeclaration":3164,"src":"12659:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12693:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3182,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"12703:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3183,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"12715:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2345_$","typeString":"type(enum Math.Rounding)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"12715:11:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"src":"12703:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"12736:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"12751:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:18","trueExpression":{"hexValue":"31","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3174,"id":3200,"nodeType":"Return","src":"12686:79:18"}]}]},"documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"12377:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3203,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":3203,"src":"12542:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":3203,"src":"12557:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"},"typeName":{"id":3169,"nodeType":"UserDefinedTypeName","pathNode":{"id":3168,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2345,"src":"12557:8:18"},"referencedDeclaration":2345,"src":"12557:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2345","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:18"},"returnParameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3203,"src":"12599:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:18"},"scope":3204,"src":"12526:256:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3205,"src":"202:12582:18"}],"src":"103:12682:18"},"id":18},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[3516]},"id":3517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3206,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"285:196:19","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":3516,"linearizedBaseContracts":[3516],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":3238,"nodeType":"Block","src":"717:140:19","statements":[{"id":3237,"nodeType":"UncheckedBlock","src":"727:124:19","statements":[{"assignments":[3220],"declarations":[{"constant":false,"id":3220,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":3237,"src":"751:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3224,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"763:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"767:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3225,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"786:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"790:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3232,"nodeType":"IfStatement","src":"782:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3218,"id":3231,"nodeType":"Return","src":"793:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3234,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"838:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3218,"id":3236,"nodeType":"Return","src":"824:16:19"}]}]},"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"505:131:19","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":3239,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3239,"src":"657:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3239,"src":"668:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:19"},"returnParameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3239,"src":"702:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3214,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3239,"src":"708:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:19"},"scope":3516,"src":"641:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3266,"nodeType":"Block","src":"1078:113:19","statements":[{"id":3265,"nodeType":"UncheckedBlock","src":"1088:97:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3251,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"1116:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"1120:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3258,"nodeType":"IfStatement","src":"1112:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3250,"id":3257,"nodeType":"Return","src":"1123:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"1168:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"1172:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3250,"id":3264,"nodeType":"Return","src":"1154:20:19"}]}]},"documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"863:134:19","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3267,"src":"1018:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3244,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3267,"src":"1029:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:19"},"returnParameters":{"id":3250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3267,"src":"1063:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3246,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3267,"src":"1069:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:19"},"scope":3516,"src":"1002:189:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"1415:417:19","statements":[{"id":3307,"nodeType":"UncheckedBlock","src":"1425:401:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"1683:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3286,"nodeType":"IfStatement","src":"1679:28:19","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3278,"id":3285,"nodeType":"Return","src":"1691:16:19"}},{"assignments":[3288],"declarations":[{"constant":false,"id":3288,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":3307,"src":"1721:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3292,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"1733:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3290,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"1737:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1756:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"1760:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"1765:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3302,"nodeType":"IfStatement","src":"1752:33:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3278,"id":3301,"nodeType":"Return","src":"1768:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3304,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"1813:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3278,"id":3306,"nodeType":"Return","src":"1799:16:19"}]}]},"documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"1197:137:19","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3309,"src":"1355:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3309,"src":"1366:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:19"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3309,"src":"1400:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3274,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3309,"src":"1406:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:19"},"scope":3516,"src":"1339:493:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3336,"nodeType":"Block","src":"2057:114:19","statements":[{"id":3335,"nodeType":"UncheckedBlock","src":"2067:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"2095:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3328,"nodeType":"IfStatement","src":"2091:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3320,"id":3327,"nodeType":"Return","src":"2103:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"2148:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"2152:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3320,"id":3334,"nodeType":"Return","src":"2134:20:19"}]}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"1838:138:19","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":3337,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3337,"src":"1997:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3337,"src":"2008:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:19"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3337,"src":"2042:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3316,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3337,"src":"2048:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:19"},"scope":3516,"src":"1981:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3364,"nodeType":"Block","src":"2406:114:19","statements":[{"id":3363,"nodeType":"UncheckedBlock","src":"2416:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"2444:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3356,"nodeType":"IfStatement","src":"2440:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3348,"id":3355,"nodeType":"Return","src":"2452:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"2497:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"2501:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3348,"id":3362,"nodeType":"Return","src":"2483:20:19"}]}]},"documentation":{"id":3338,"nodeType":"StructuredDocumentation","src":"2177:148:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":3365,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3365,"src":"2346:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3365,"src":"2357:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:19"},"returnParameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3365,"src":"2391:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3344,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3365,"src":"2397:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:19"},"scope":3516,"src":"2330:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3379,"nodeType":"Block","src":"2822:29:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"2839:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"2843:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3374,"id":3378,"nodeType":"Return","src":"2832:12:19"}]},"documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"2526:224:19","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":3380,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3380,"src":"2768:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3380,"src":"2779:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:19"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3380,"src":"2813:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:19"},"scope":3516,"src":"2755:96:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"3189:29:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3390,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"3206:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3391,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"3210:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3389,"id":3393,"nodeType":"Return","src":"3199:12:19"}]},"documentation":{"id":3381,"nodeType":"StructuredDocumentation","src":"2857:260:19","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3395,"src":"3135:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3395,"src":"3146:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:19"},"returnParameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3395,"src":"3180:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:19"},"scope":3516,"src":"3122:96:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"3532:29:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"3549:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"3553:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3404,"id":3408,"nodeType":"Return","src":"3542:12:19"}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"3224:236:19","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3410,"src":"3478:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3410,"src":"3489:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:19"},"returnParameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3403,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3410,"src":"3523:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:19"},"scope":3516,"src":"3465:96:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3424,"nodeType":"Block","src":"3917:29:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"3934:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3421,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"3938:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3419,"id":3423,"nodeType":"Return","src":"3927:12:19"}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"3567:278:19","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":3425,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3425,"src":"3863:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3425,"src":"3874:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:19"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3425,"src":"3908:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:19"},"scope":3516,"src":"3850:96:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3439,"nodeType":"Block","src":"4466:29:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"4483:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"4487:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3434,"id":3438,"nodeType":"Return","src":"4476:12:19"}]},"documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"3952:442:19","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3440,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3440,"src":"4412:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3440,"src":"4423:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:19"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3440,"src":"4457:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:19"},"scope":3516,"src":"4399:96:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3464,"nodeType":"Block","src":"5054:106:19","statements":[{"id":3463,"nodeType":"UncheckedBlock","src":"5064:90:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3453,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"5096:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3454,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"5101:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3456,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"5104:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3452,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5088:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3458,"nodeType":"ExpressionStatement","src":"5088:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"5138:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3460,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"5142:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3451,"id":3462,"nodeType":"Return","src":"5131:12:19"}]}]},"documentation":{"id":3441,"nodeType":"StructuredDocumentation","src":"4501:453:19","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3443,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3465,"src":"4972:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3445,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3465,"src":"4983:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3447,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3465,"src":"4994:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3446,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:19"},"returnParameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3465,"src":"5045:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:19"},"scope":3516,"src":"4959:201:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3489,"nodeType":"Block","src":"5739:105:19","statements":[{"id":3488,"nodeType":"UncheckedBlock","src":"5749:89:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"5781:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3481,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"5788:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3483,"nodeType":"ExpressionStatement","src":"5773:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"5822:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3485,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"5826:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3476,"id":3487,"nodeType":"Return","src":"5815:12:19"}]}]},"documentation":{"id":3466,"nodeType":"StructuredDocumentation","src":"5166:473:19","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3490,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3490,"src":"5657:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3490,"src":"5668:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3490,"src":"5679:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3471,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:19"},"returnParameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3475,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3490,"src":"5730:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:19"},"scope":3516,"src":"5644:200:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3514,"nodeType":"Block","src":"6585:105:19","statements":[{"id":3513,"nodeType":"UncheckedBlock","src":"6595:89:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"6627:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3506,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"6634:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6619:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3508,"nodeType":"ExpressionStatement","src":"6619:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"6668:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3510,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"6672:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3501,"id":3512,"nodeType":"Return","src":"6661:12:19"}]}]},"documentation":{"id":3491,"nodeType":"StructuredDocumentation","src":"5850:635:19","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":3515,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3515,"src":"6503:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3495,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3515,"src":"6514:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3497,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":3515,"src":"6525:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3496,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:19"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3515,"src":"6576:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:19"},"scope":3516,"src":"6490:200:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3517,"src":"482:6210:19"}],"src":"107:6586:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3621]},"id":3622,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3518,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:20"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"134:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3621,"linearizedBaseContracts":[3621],"name":"SignedMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":3536,"nodeType":"Block","src":"375:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3529,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"392:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3530,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"396:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"404:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:20","trueExpression":{"id":3532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"400:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3528,"id":3535,"nodeType":"Return","src":"385:20:20"}]},"documentation":{"id":3520,"nodeType":"StructuredDocumentation","src":"240:66:20","text":" @dev Returns the largest of two signed numbers."},"id":3537,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3537,"src":"324:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3521,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3537,"src":"334:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3523,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:20"},"returnParameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3537,"src":"367:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3526,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:20"},"scope":3621,"src":"311:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"554:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"571:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3548,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"575:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3551,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"583:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:20","trueExpression":{"id":3550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"579:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3546,"id":3553,"nodeType":"Return","src":"564:20:20"}]},"documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"418:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3540,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3555,"src":"503:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3539,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3555,"src":"513:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3541,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:20"},"returnParameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3555,"src":"546:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3544,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:20"},"scope":3621,"src":"490:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3598,"nodeType":"Block","src":"796:162:20","statements":[{"assignments":[3566],"declarations":[{"constant":false,"id":3566,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3598,"src":"858:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3565,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3579,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"870:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"874:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"881:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"885:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3580,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"910:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3585,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"930:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:20","typeDescriptions":{}}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3581,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:20","typeDescriptions":{}}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"944:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"948:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3564,"id":3597,"nodeType":"Return","src":"903:48:20"}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"597:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3599,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3599,"src":"745:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3557,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3560,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3599,"src":"755:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3559,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:20"},"returnParameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3599,"src":"788:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3562,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:20"},"scope":3621,"src":"728:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3619,"nodeType":"Block","src":"1102:158:20","statements":[{"id":3618,"nodeType":"UncheckedBlock","src":"1112:142:20","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3609,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"1227:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:20","subExpression":{"id":3613,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"1241:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:20","trueExpression":{"id":3612,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"1236:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:20","typeDescriptions":{}}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3606,"id":3617,"nodeType":"Return","src":"1212:31:20"}]}]},"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"964:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nodeType":"FunctionDefinition","parameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3620,"src":"1060:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3601,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:20"},"returnParameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3620,"src":"1093:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:20"},"scope":3621,"src":"1047:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3622,"src":"215:1047:20"}],"src":"109:1154:20"},"id":20},"contracts/OathToMeliorism.sol":{"ast":{"absolutePath":"contracts/OathToMeliorism.sol","exportedSymbols":{"Address":[1977],"Context":[1999],"Counters":[2073],"ERC165":[2326],"ERC2981":[1647],"ERC721":[1086],"ERC721Royalty":[1266],"ERC721URIStorage":[1422],"IERC165":[2338],"IERC2981":[134],"IERC4906":[156],"IERC721":[1202],"IERC721Metadata":[1449],"IERC721Receiver":[1220],"Math":[3204],"OathToMeliorism":[3708],"Ownable":[112],"SafeMath":[3516],"SignedMath":[3621],"Strings":[2302]},"id":3709,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3623,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3624,"nodeType":"ImportDirective","scope":3709,"sourceUnit":1087,"src":"60:57:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":3625,"nodeType":"ImportDirective","scope":3709,"sourceUnit":1203,"src":"119:58:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":3626,"nodeType":"ImportDirective","scope":3709,"sourceUnit":1221,"src":"179:66:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":3627,"nodeType":"ImportDirective","scope":3709,"sourceUnit":1450,"src":"247:77:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":3628,"nodeType":"ImportDirective","scope":3709,"sourceUnit":1423,"src":"326:78:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol","id":3629,"nodeType":"ImportDirective","scope":3709,"sourceUnit":1267,"src":"406:75:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":3630,"nodeType":"ImportDirective","scope":3709,"sourceUnit":2074,"src":"483:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":3631,"nodeType":"ImportDirective","scope":3709,"sourceUnit":3517,"src":"537:57:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3632,"nodeType":"ImportDirective","scope":3709,"sourceUnit":113,"src":"596:52:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3633,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":1422,"src":"680:16:21"},"id":3634,"nodeType":"InheritanceSpecifier","src":"680:16:21"}],"contractDependencies":[156,1086,1202,1422,1449,1999,2326,2338],"contractKind":"contract","fullyImplemented":true,"id":3708,"linearizedBaseContracts":[3708,1422,1086,1449,156,1202,2326,2338,1999],"name":"OathToMeliorism","nodeType":"ContractDefinition","nodes":[{"id":3638,"libraryName":{"id":3635,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":2073,"src":"710:8:21"},"nodeType":"UsingForDirective","src":"704:36:21","typeName":{"id":3637,"nodeType":"UserDefinedTypeName","pathNode":{"id":3636,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"723:16:21"},"referencedDeclaration":2005,"src":"723:16:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":3641,"mutability":"mutable","name":"currentTokenId","nodeType":"VariableDeclaration","scope":3708,"src":"746:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage","typeString":"struct Counters.Counter"},"typeName":{"id":3640,"nodeType":"UserDefinedTypeName","pathNode":{"id":3639,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"746:16:21"},"referencedDeclaration":2005,"src":"746:16:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"functionSelector":"b00a2997","id":3643,"mutability":"mutable","name":"collectionInfoURI","nodeType":"VariableDeclaration","scope":3708,"src":"861:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3642,"name":"string","nodeType":"ElementaryTypeName","src":"861:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":3654,"nodeType":"Block","src":"954:180:21","statements":[{"expression":{"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3650,"name":"collectionInfoURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"995:17:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"68747470733a2f2f6e667473746f726167652e6c696e6b2f697066732f62616679626569626e686c68713669377833797865367a3472357a6d796d6d747577676278736262707735613732743572766167703578686367612f4f617468546f4d656c696f7269736d2e6a736f6e","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1015:111:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_913483aef4eee764389de0b10e56792ff014821a4ddb7e1702d2bc658dfc21ba","typeString":"literal_string \"https://nftstorage.link/ipfs/bafybeibnhlhq6i7x3yxe6z4r5zmymmtuwgbxsbbpw5a72t5rvagp5xhcga/OathToMeliorism.json\""},"value":"https://nftstorage.link/ipfs/bafybeibnhlhq6i7x3yxe6z4r5zmymmtuwgbxsbbpw5a72t5rvagp5xhcga/OathToMeliorism.json"},"src":"995:131:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3653,"nodeType":"ExpressionStatement","src":"995:131:21"}]},"id":3655,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4f617468546f4d656c696f7269736d","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"926:17:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_eba4a669ac11eae375f4bc871166f3befc57dad2a5a40ea48c4bce9b581a111a","typeString":"literal_string \"OathToMeliorism\""},"value":"OathToMeliorism"},{"hexValue":"4e4f46554e","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"945:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d85574d05cd12f7057c96b91b203550d03ff3cdb8877671f917970f8a7dea65a","typeString":"literal_string \"NOFUN\""},"value":"NOFUN"}],"id":3648,"modifierName":{"id":3645,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1086,"src":"919:6:21"},"nodeType":"ModifierInvocation","src":"919:34:21"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3644,"nodeType":"ParameterList","parameters":[],"src":"916:2:21"},"returnParameters":{"id":3649,"nodeType":"ParameterList","parameters":[],"src":"954:0:21"},"scope":3708,"src":"905:229:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3687,"nodeType":"Block","src":"1238:1002:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3664,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"1249:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage","typeString":"struct Counters.Counter storage ref"}},"id":3666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2031,"src":"1249:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2005_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2005_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1249:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3668,"nodeType":"ExpressionStatement","src":"1249:26:21"},{"assignments":[3670],"declarations":[{"constant":false,"id":3670,"mutability":"mutable","name":"newItemId","nodeType":"VariableDeclaration","scope":3687,"src":"1286:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3674,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3671,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"1306:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2005_storage","typeString":"struct Counters.Counter storage ref"}},"id":3672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"1306:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2005_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2005_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1306:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1286:44:21"},{"expression":{"arguments":[{"id":3676,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"1351:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3677,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"1362:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3675,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[654,683],"referencedDeclaration":654,"src":"1341:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1341:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3679,"nodeType":"ExpressionStatement","src":"1341:31:21"},{"expression":{"arguments":[{"id":3681,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"1396:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3682,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"1407:8:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3680,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"1383:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1383:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3684,"nodeType":"ExpressionStatement","src":"1383:33:21"},{"expression":{"id":3685,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"2223:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3663,"id":3686,"nodeType":"Return","src":"2216:16:21"}]},"functionSelector":"d0def521","id":3688,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3688,"src":"1160:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3656,"name":"address","nodeType":"ElementaryTypeName","src":"1160:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"tokenURI","nodeType":"VariableDeclaration","scope":3688,"src":"1179:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3658,"name":"string","nodeType":"ElementaryTypeName","src":"1179:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1159:43:21"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3688,"src":"1229:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:9:21"},"scope":3708,"src":"1146:1094:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3695,"nodeType":"Block","src":"2307:43:21","statements":[{"expression":{"id":3693,"name":"collectionInfoURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"2325:17:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3692,"id":3694,"nodeType":"Return","src":"2318:24:21"}]},"functionSelector":"e8a3d485","id":3696,"implemented":true,"kind":"function","modifiers":[],"name":"contractURI","nodeType":"FunctionDefinition","parameters":{"id":3689,"nodeType":"ParameterList","parameters":[],"src":"2268:2:21"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3696,"src":"2292:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3690,"name":"string","nodeType":"ElementaryTypeName","src":"2292:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2291:15:21"},"scope":3708,"src":"2248:102:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3706,"nodeType":"Block","src":"2811:57:21","statements":[{"expression":{"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3702,"name":"collectionInfoURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"2822:17:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3703,"name":"_collectionInfoURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"2842:18:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2822:38:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3705,"nodeType":"ExpressionStatement","src":"2822:38:21"}]},"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"2689:51:21","text":"@dev Sets the URI for the collection info JSON."},"functionSelector":"938e3d7b","id":3707,"implemented":true,"kind":"function","modifiers":[],"name":"setContractURI","nodeType":"FunctionDefinition","parameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"_collectionInfoURI","nodeType":"VariableDeclaration","scope":3707,"src":"2770:32:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3698,"name":"string","nodeType":"ElementaryTypeName","src":"2770:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2769:34:21"},"returnParameters":{"id":3701,"nodeType":"ParameterList","parameters":[],"src":"2811:0:21"},"scope":3708,"src":"2746:122:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3709,"src":"652:2598:21"}],"src":"33:3217:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3266:22","statements":[{"body":{"nodeType":"YulBlock","src":"102:259:22","statements":[{"nodeType":"YulAssignment","src":"112:75:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:22"},"nodeType":"YulFunctionCall","src":"137:49:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:22"},"nodeType":"YulFunctionCall","src":"121:66:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:22"},"nodeType":"YulFunctionCall","src":"196:21:22"},"nodeType":"YulExpressionStatement","src":"196:21:22"},{"nodeType":"YulVariableDeclaration","src":"226:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:22"},"nodeType":"YulFunctionCall","src":"237:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"300:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"303:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"293:6:22"},"nodeType":"YulFunctionCall","src":"293:12:22"},"nodeType":"YulExpressionStatement","src":"293:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:22"},"nodeType":"YulFunctionCall","src":"268:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:22"},"nodeType":"YulFunctionCall","src":"265:25:22"},"nodeType":"YulIf","src":"262:2:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"338:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"343:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"348:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"316:21:22"},"nodeType":"YulFunctionCall","src":"316:39:22"},"nodeType":"YulExpressionStatement","src":"316:39:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:22","type":""}],"src":"7:354:22"},{"body":{"nodeType":"YulBlock","src":"454:215:22","statements":[{"body":{"nodeType":"YulBlock","src":"503:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:22"},"nodeType":"YulFunctionCall","src":"505:12:22"},"nodeType":"YulExpressionStatement","src":"505:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"482:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"490:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"478:3:22"},"nodeType":"YulFunctionCall","src":"478:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"497:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:22"},"nodeType":"YulFunctionCall","src":"474:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"467:6:22"},"nodeType":"YulFunctionCall","src":"467:35:22"},"nodeType":"YulIf","src":"464:2:22"},{"nodeType":"YulVariableDeclaration","src":"528:27:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"548:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"542:5:22"},"nodeType":"YulFunctionCall","src":"542:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"532:6:22","type":""}]},{"nodeType":"YulAssignment","src":"564:99:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"644:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"632:3:22"},"nodeType":"YulFunctionCall","src":"632:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"651:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"659:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"573:58:22"},"nodeType":"YulFunctionCall","src":"573:90:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"564:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"432:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"440:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"448:5:22","type":""}],"src":"381:288:22"},{"body":{"nodeType":"YulBlock","src":"789:538:22","statements":[{"body":{"nodeType":"YulBlock","src":"835:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"844:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"847:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"837:6:22"},"nodeType":"YulFunctionCall","src":"837:12:22"},"nodeType":"YulExpressionStatement","src":"837:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"810:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"806:3:22"},"nodeType":"YulFunctionCall","src":"806:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"831:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"802:3:22"},"nodeType":"YulFunctionCall","src":"802:32:22"},"nodeType":"YulIf","src":"799:2:22"},{"nodeType":"YulBlock","src":"861:224:22","statements":[{"nodeType":"YulVariableDeclaration","src":"876:38:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"900:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"911:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"896:3:22"},"nodeType":"YulFunctionCall","src":"896:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"890:5:22"},"nodeType":"YulFunctionCall","src":"890:24:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"880:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"961:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"970:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"973:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"963:6:22"},"nodeType":"YulFunctionCall","src":"963:12:22"},"nodeType":"YulExpressionStatement","src":"963:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"933:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"941:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"930:2:22"},"nodeType":"YulFunctionCall","src":"930:30:22"},"nodeType":"YulIf","src":"927:2:22"},{"nodeType":"YulAssignment","src":"991:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1047:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1058:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1043:3:22"},"nodeType":"YulFunctionCall","src":"1043:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1067:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1001:41:22"},"nodeType":"YulFunctionCall","src":"1001:74:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"991:6:22"}]}]},{"nodeType":"YulBlock","src":"1095:225:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1110:39:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1134:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1145:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1130:3:22"},"nodeType":"YulFunctionCall","src":"1130:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1124:5:22"},"nodeType":"YulFunctionCall","src":"1124:25:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1114:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1196:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1205:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1208:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1198:6:22"},"nodeType":"YulFunctionCall","src":"1198:12:22"},"nodeType":"YulExpressionStatement","src":"1198:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1168:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1176:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1165:2:22"},"nodeType":"YulFunctionCall","src":"1165:30:22"},"nodeType":"YulIf","src":"1162:2:22"},{"nodeType":"YulAssignment","src":"1226:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1282:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1293:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1278:3:22"},"nodeType":"YulFunctionCall","src":"1278:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1302:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1236:41:22"},"nodeType":"YulFunctionCall","src":"1236:74:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1226:6:22"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"751:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"762:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"774:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"782:6:22","type":""}],"src":"675:652:22"},{"body":{"nodeType":"YulBlock","src":"1374:88:22","statements":[{"nodeType":"YulAssignment","src":"1384:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1394:18:22"},"nodeType":"YulFunctionCall","src":"1394:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1384:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1443:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"1451:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1423:19:22"},"nodeType":"YulFunctionCall","src":"1423:33:22"},"nodeType":"YulExpressionStatement","src":"1423:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1367:6:22","type":""}],"src":"1333:129:22"},{"body":{"nodeType":"YulBlock","src":"1508:35:22","statements":[{"nodeType":"YulAssignment","src":"1518:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1534:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1528:5:22"},"nodeType":"YulFunctionCall","src":"1528:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1518:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1501:6:22","type":""}],"src":"1468:75:22"},{"body":{"nodeType":"YulBlock","src":"1616:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"1721:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1723:16:22"},"nodeType":"YulFunctionCall","src":"1723:18:22"},"nodeType":"YulExpressionStatement","src":"1723:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1693:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1701:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1690:2:22"},"nodeType":"YulFunctionCall","src":"1690:30:22"},"nodeType":"YulIf","src":"1687:2:22"},{"nodeType":"YulAssignment","src":"1753:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1783:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1761:21:22"},"nodeType":"YulFunctionCall","src":"1761:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1753:4:22"}]},{"nodeType":"YulAssignment","src":"1827:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1839:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"1845:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:22"},"nodeType":"YulFunctionCall","src":"1835:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1827:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1600:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1611:4:22","type":""}],"src":"1549:308:22"},{"body":{"nodeType":"YulBlock","src":"1912:258:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1922:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1931:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1926:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1991:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2016:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"2021:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:22"},"nodeType":"YulFunctionCall","src":"2012:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2035:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"2040:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2031:3:22"},"nodeType":"YulFunctionCall","src":"2031:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2025:5:22"},"nodeType":"YulFunctionCall","src":"2025:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2005:6:22"},"nodeType":"YulFunctionCall","src":"2005:39:22"},"nodeType":"YulExpressionStatement","src":"2005:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1952:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"1955:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1949:2:22"},"nodeType":"YulFunctionCall","src":"1949:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1963:19:22","statements":[{"nodeType":"YulAssignment","src":"1965:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1974:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:22"},"nodeType":"YulFunctionCall","src":"1970:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1965:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1945:3:22","statements":[]},"src":"1941:113:22"},{"body":{"nodeType":"YulBlock","src":"2088:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2138:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"2143:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2134:3:22"},"nodeType":"YulFunctionCall","src":"2134:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"2152:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2127:6:22"},"nodeType":"YulFunctionCall","src":"2127:27:22"},"nodeType":"YulExpressionStatement","src":"2127:27:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2069:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"2072:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2066:2:22"},"nodeType":"YulFunctionCall","src":"2066:13:22"},"nodeType":"YulIf","src":"2063:2:22"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1894:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1899:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1904:6:22","type":""}],"src":"1863:307:22"},{"body":{"nodeType":"YulBlock","src":"2227:269:22","statements":[{"nodeType":"YulAssignment","src":"2237:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2251:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"2257:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2247:3:22"},"nodeType":"YulFunctionCall","src":"2247:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2237:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2268:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2298:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2294:3:22"},"nodeType":"YulFunctionCall","src":"2294:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2272:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2345:51:22","statements":[{"nodeType":"YulAssignment","src":"2359:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2373:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2381:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2369:3:22"},"nodeType":"YulFunctionCall","src":"2369:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2359:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2325:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2318:6:22"},"nodeType":"YulFunctionCall","src":"2318:26:22"},"nodeType":"YulIf","src":"2315:2:22"},{"body":{"nodeType":"YulBlock","src":"2448:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2462:16:22"},"nodeType":"YulFunctionCall","src":"2462:18:22"},"nodeType":"YulExpressionStatement","src":"2462:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2412:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2435:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2443:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2432:2:22"},"nodeType":"YulFunctionCall","src":"2432:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2409:2:22"},"nodeType":"YulFunctionCall","src":"2409:38:22"},"nodeType":"YulIf","src":"2406:2:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2211:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2220:6:22","type":""}],"src":"2176:320:22"},{"body":{"nodeType":"YulBlock","src":"2545:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2555:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2577:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2607:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2585:21:22"},"nodeType":"YulFunctionCall","src":"2585:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2573:3:22"},"nodeType":"YulFunctionCall","src":"2573:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2559:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2724:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2726:16:22"},"nodeType":"YulFunctionCall","src":"2726:18:22"},"nodeType":"YulExpressionStatement","src":"2726:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2667:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"2679:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2664:2:22"},"nodeType":"YulFunctionCall","src":"2664:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2703:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2715:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2700:2:22"},"nodeType":"YulFunctionCall","src":"2700:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2661:2:22"},"nodeType":"YulFunctionCall","src":"2661:62:22"},"nodeType":"YulIf","src":"2658:2:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2762:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2766:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2755:6:22"},"nodeType":"YulFunctionCall","src":"2755:22:22"},"nodeType":"YulExpressionStatement","src":"2755:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2531:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"2539:4:22","type":""}],"src":"2502:281:22"},{"body":{"nodeType":"YulBlock","src":"2817:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2837:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:22"},"nodeType":"YulFunctionCall","src":"2827:88:22"},"nodeType":"YulExpressionStatement","src":"2827:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2931:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2934:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2924:6:22"},"nodeType":"YulFunctionCall","src":"2924:15:22"},"nodeType":"YulExpressionStatement","src":"2924:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2955:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2958:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2948:6:22"},"nodeType":"YulFunctionCall","src":"2948:15:22"},"nodeType":"YulExpressionStatement","src":"2948:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2789:180:22"},{"body":{"nodeType":"YulBlock","src":"3003:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3013:6:22"},"nodeType":"YulFunctionCall","src":"3013:88:22"},"nodeType":"YulExpressionStatement","src":"3013:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3117:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3120:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3110:6:22"},"nodeType":"YulFunctionCall","src":"3110:15:22"},"nodeType":"YulExpressionStatement","src":"3110:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3141:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3144:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3134:6:22"},"nodeType":"YulFunctionCall","src":"3134:15:22"},"nodeType":"YulExpressionStatement","src":"3134:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2975:180:22"},{"body":{"nodeType":"YulBlock","src":"3209:54:22","statements":[{"nodeType":"YulAssignment","src":"3219:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"3244:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:22"},"nodeType":"YulFunctionCall","src":"3233:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3249:3:22"},"nodeType":"YulFunctionCall","src":"3249:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3229:3:22"},"nodeType":"YulFunctionCall","src":"3229:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3219:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3192:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3202:6:22","type":""}],"src":"3161:102:22"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200258c3803806200258c833981810160405281019062000037919062000193565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61220680620003866000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e9919061184f565b6102bc565b6040516100fb9190611b60565b60405180910390f35b61010c61039e565b6040516101199190611b7b565b60405180910390f35b61013c600480360381019061013791906118a1565b610430565b6040516101499190611af9565b60405180910390f35b61016c60048036038101906101679190611813565b610476565b005b6101886004803603810190610183919061170d565b61058e565b005b6101a4600480360381019061019f919061170d565b6105ee565b005b6101c060048036038101906101bb91906118a1565b61060e565b6040516101cd9190611af9565b60405180910390f35b6101f060048036038101906101eb91906116a8565b610695565b6040516101fd9190611cbd565b60405180910390f35b61020e61074d565b60405161021b9190611b7b565b60405180910390f35b61023e600480360381019061023991906117d7565b6107df565b005b61025a6004803603810190610255919061175c565b6107f5565b005b610276600480360381019061027191906118a1565b610857565b6040516102839190611b7b565b60405180910390f35b6102a660048036038101906102a191906116d1565b6108bf565b6040516102b39190611b60565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611e27565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611e27565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c7d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611c9d565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b9d565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611c5d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611c3d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611e27565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611e27565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611b9d565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611ad5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c681611199565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c5d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611bdd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611bfd565b60405180910390fd5b610c5183838360016111da565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611bdd565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016111e0565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611c1d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611b60565b60405180910390a3505050565b61100d848484610b5e565b611019848484846111e6565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611bbd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016110848461137d565b01905060008167ffffffffffffffff8111156110c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110fb5781602001600182028036833780820191505090505b509050600082602001820190505b60011561118e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611178577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156111895761118e565b611109565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166111bb83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006112078473ffffffffffffffffffffffffffffffffffffffff166115b4565b15611370578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611230610a08565b8786866040518563ffffffff1660e01b81526004016112529493929190611b14565b602060405180830381600087803b15801561126c57600080fd5b505af192505050801561129d57506040513d601f19601f8201168201806040525081019061129a9190611878565b60015b611320573d80600081146112cd576040519150601f19603f3d011682016040523d82523d6000602084013e6112d2565b606091505b50600081511415611318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130f90611bbd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611375565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611401577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816113f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611464576d04ee2d6d415b85acef8100000000838161145a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc1000083106114b957662386f26fc1000083816114af577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e1008310611508576305f5e10083816114fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b6127108310611553576127108381611549577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b6064831061159c5760648381611592577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a83106115ab576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115ea6115e584611cfd565b611cd8565b90508281526020810184848401111561160257600080fd5b61160d848285611de5565b509392505050565b60008135905061162481612174565b92915050565b6000813590506116398161218b565b92915050565b60008135905061164e816121a2565b92915050565b600081519050611663816121a2565b92915050565b600082601f83011261167a57600080fd5b813561168a8482602086016115d7565b91505092915050565b6000813590506116a2816121b9565b92915050565b6000602082840312156116ba57600080fd5b60006116c884828501611615565b91505092915050565b600080604083850312156116e457600080fd5b60006116f285828601611615565b925050602061170385828601611615565b9150509250929050565b60008060006060848603121561172257600080fd5b600061173086828701611615565b935050602061174186828701611615565b925050604061175286828701611693565b9150509250925092565b6000806000806080858703121561177257600080fd5b600061178087828801611615565b945050602061179187828801611615565b93505060406117a287828801611693565b925050606085013567ffffffffffffffff8111156117bf57600080fd5b6117cb87828801611669565b91505092959194509250565b600080604083850312156117ea57600080fd5b60006117f885828601611615565b92505060206118098582860161162a565b9150509250929050565b6000806040838503121561182657600080fd5b600061183485828601611615565b925050602061184585828601611693565b9150509250929050565b60006020828403121561186157600080fd5b600061186f8482850161163f565b91505092915050565b60006020828403121561188a57600080fd5b600061189884828501611654565b91505092915050565b6000602082840312156118b357600080fd5b60006118c184828501611693565b91505092915050565b6118d381611d71565b82525050565b6118e281611d83565b82525050565b60006118f382611d2e565b6118fd8185611d44565b935061190d818560208601611df4565b61191681611ee8565b840191505092915050565b600061192c82611d39565b6119368185611d55565b9350611946818560208601611df4565b61194f81611ee8565b840191505092915050565b600061196582611d39565b61196f8185611d66565b935061197f818560208601611df4565b80840191505092915050565b6000611998602d83611d55565b91506119a382611ef9565b604082019050919050565b60006119bb603283611d55565b91506119c682611f48565b604082019050919050565b60006119de602583611d55565b91506119e982611f97565b604082019050919050565b6000611a01602483611d55565b9150611a0c82611fe6565b604082019050919050565b6000611a24601983611d55565b9150611a2f82612035565b602082019050919050565b6000611a47602983611d55565b9150611a528261205e565b604082019050919050565b6000611a6a601883611d55565b9150611a75826120ad565b602082019050919050565b6000611a8d602183611d55565b9150611a98826120d6565b604082019050919050565b6000611ab0603d83611d55565b9150611abb82612125565b604082019050919050565b611acf81611ddb565b82525050565b6000611ae1828561195a565b9150611aed828461195a565b91508190509392505050565b6000602082019050611b0e60008301846118ca565b92915050565b6000608082019050611b2960008301876118ca565b611b3660208301866118ca565b611b436040830185611ac6565b8181036060830152611b5581846118e8565b905095945050505050565b6000602082019050611b7560008301846118d9565b92915050565b60006020820190508181036000830152611b958184611921565b905092915050565b60006020820190508181036000830152611bb68161198b565b9050919050565b60006020820190508181036000830152611bd6816119ae565b9050919050565b60006020820190508181036000830152611bf6816119d1565b9050919050565b60006020820190508181036000830152611c16816119f4565b9050919050565b60006020820190508181036000830152611c3681611a17565b9050919050565b60006020820190508181036000830152611c5681611a3a565b9050919050565b60006020820190508181036000830152611c7681611a5d565b9050919050565b60006020820190508181036000830152611c9681611a80565b9050919050565b60006020820190508181036000830152611cb681611aa3565b9050919050565b6000602082019050611cd26000830184611ac6565b92915050565b6000611ce2611cf3565b9050611cee8282611e59565b919050565b6000604051905090565b600067ffffffffffffffff821115611d1857611d17611eb9565b5b611d2182611ee8565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d7c82611dbb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611e12578082015181840152602081019050611df7565b83811115611e21576000848401525b50505050565b60006002820490506001821680611e3f57607f821691505b60208210811415611e5357611e52611e8a565b5b50919050565b611e6282611ee8565b810181811067ffffffffffffffff82111715611e8157611e80611eb9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61217d81611d71565b811461218857600080fd5b50565b61219481611d83565b811461219f57600080fd5b50565b6121ab81611d8f565b81146121b657600080fd5b50565b6121c281611ddb565b81146121cd57600080fd5b5056fea2646970667358221220998cf24b301a41d471bd72d75d9c32206af7dbe60a04b7ad13a9d50b8f3af7e564736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x258C CODESIZE SUB DUP1 PUSH3 0x258C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x193 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x376 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x29B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x22F JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x265 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D0 DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FC DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x212 PUSH3 0x225 JUMP JUMPDEST SWAP1 POP PUSH3 0x220 DUP3 DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x336 JUMP JUMPDEST JUMPDEST PUSH3 0x258 DUP3 PUSH3 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x268 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x295 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CB JUMPI PUSH3 0x2CA PUSH3 0x307 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DC DUP3 PUSH3 0x365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2FE JUMPI PUSH3 0x2FD PUSH3 0x336 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2206 DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11DA JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x137D JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x118E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1178 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1189 JUMPI PUSH2 0x118E JUMP JUMPDEST PUSH2 0x1109 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BB DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15B4 JUMP JUMPDEST ISZERO PUSH2 0x1370 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1230 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x129D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1320 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130F SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1401 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x13F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1464 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x145A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x14B9 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x14AF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1508 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14FE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1553 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1549 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x159C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1592 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x15AB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EA PUSH2 0x15E5 DUP5 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x1CD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160D DUP5 DUP3 DUP6 PUSH2 0x1DE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1624 DUP2 PUSH2 0x2174 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x218B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164E DUP2 PUSH2 0x21A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1663 DUP2 PUSH2 0x21A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x168A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A2 DUP2 PUSH2 0x21B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16C8 DUP5 DUP3 DUP6 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1730 DUP7 DUP3 DUP8 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1741 DUP7 DUP3 DUP8 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1752 DUP7 DUP3 DUP8 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1780 DUP8 DUP3 DUP9 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1791 DUP8 DUP3 DUP9 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17A2 DUP8 DUP3 DUP9 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CB DUP8 DUP3 DUP9 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1809 DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1834 DUP6 DUP3 DUP7 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1845 DUP6 DUP3 DUP7 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x186F DUP5 DUP3 DUP6 ADD PUSH2 0x163F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1898 DUP5 DUP3 DUP6 ADD PUSH2 0x1654 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18C1 DUP5 DUP3 DUP6 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D3 DUP2 PUSH2 0x1D71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18E2 DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP3 PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x18FD DUP2 DUP6 PUSH2 0x1D44 JUMP JUMPDEST SWAP4 POP PUSH2 0x190D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF4 JUMP JUMPDEST PUSH2 0x1916 DUP2 PUSH2 0x1EE8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192C DUP3 PUSH2 0x1D39 JUMP JUMPDEST PUSH2 0x1936 DUP2 DUP6 PUSH2 0x1D55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1946 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF4 JUMP JUMPDEST PUSH2 0x194F DUP2 PUSH2 0x1EE8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1965 DUP3 PUSH2 0x1D39 JUMP JUMPDEST PUSH2 0x196F DUP2 DUP6 PUSH2 0x1D66 JUMP JUMPDEST SWAP4 POP PUSH2 0x197F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1998 PUSH1 0x2D DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A3 DUP3 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BB PUSH1 0x32 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C6 DUP3 PUSH2 0x1F48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DE PUSH1 0x25 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A01 PUSH1 0x24 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0C DUP3 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A24 PUSH1 0x19 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2F DUP3 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A47 PUSH1 0x29 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A52 DUP3 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH1 0x18 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A75 DUP3 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8D PUSH1 0x21 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A98 DUP3 PUSH2 0x20D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB0 PUSH1 0x3D DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACF DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE1 DUP3 DUP6 PUSH2 0x195A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AED DUP3 DUP5 PUSH2 0x195A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B29 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x1B36 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x1B43 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AC6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B55 DUP2 DUP5 PUSH2 0x18E8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B95 DUP2 DUP5 PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD6 DUP2 PUSH2 0x19AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x19D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1A5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE2 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CEE DUP3 DUP3 PUSH2 0x1E59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D18 JUMPI PUSH2 0x1D17 PUSH2 0x1EB9 JUMP JUMPDEST JUMPDEST PUSH2 0x1D21 DUP3 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7C DUP3 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E12 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E21 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E3F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x1E8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E62 DUP3 PUSH2 0x1EE8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E81 JUMPI PUSH2 0x1E80 PUSH2 0x1EB9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x217D DUP2 PUSH2 0x1D71 JUMP JUMPDEST DUP2 EQ PUSH2 0x2188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2194 DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP2 EQ PUSH2 0x219F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21AB DUP2 PUSH2 0x1D8F JUMP JUMPDEST DUP2 EQ PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21C2 DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP2 EQ PUSH2 0x21CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 DUP13 CALLCODE 0x4B ADDRESS BYTE COINBASE 0xD4 PUSH18 0xBD72D75D9C32206AF7DBE60A04B7AD13A9D5 SIGNEXTEND DUP16 GASPRICE 0xF7 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"628:16377:5:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16377;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:22:-;;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;;;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;628:16377:5:-;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:21685:22","statements":[{"body":{"nodeType":"YulBlock","src":"90:260:22","statements":[{"nodeType":"YulAssignment","src":"100:74:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:22"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:22"},"nodeType":"YulFunctionCall","src":"125:48:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:22"},"nodeType":"YulFunctionCall","src":"109:65:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:22"},"nodeType":"YulFunctionCall","src":"183:21:22"},"nodeType":"YulExpressionStatement","src":"183:21:22"},{"nodeType":"YulVariableDeclaration","src":"213:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:22"},"nodeType":"YulFunctionCall","src":"224:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"290:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"280:6:22"},"nodeType":"YulFunctionCall","src":"280:12:22"},"nodeType":"YulExpressionStatement","src":"280:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:22"},"nodeType":"YulFunctionCall","src":"255:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:22"},"nodeType":"YulFunctionCall","src":"252:25:22"},"nodeType":"YulIf","src":"249:2:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"327:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"332:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"337:6:22"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"303:23:22"},"nodeType":"YulFunctionCall","src":"303:41:22"},"nodeType":"YulExpressionStatement","src":"303:41:22"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:22","type":""}],"src":"7:343:22"},{"body":{"nodeType":"YulBlock","src":"408:87:22","statements":[{"nodeType":"YulAssignment","src":"418:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"440:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"427:12:22"},"nodeType":"YulFunctionCall","src":"427:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"418:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"456:26:22"},"nodeType":"YulFunctionCall","src":"456:33:22"},"nodeType":"YulExpressionStatement","src":"456:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"386:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"394:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"402:5:22","type":""}],"src":"356:139:22"},{"body":{"nodeType":"YulBlock","src":"550:84:22","statements":[{"nodeType":"YulAssignment","src":"560:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"582:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"569:12:22"},"nodeType":"YulFunctionCall","src":"569:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"560:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"622:5:22"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"598:23:22"},"nodeType":"YulFunctionCall","src":"598:30:22"},"nodeType":"YulExpressionStatement","src":"598:30:22"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"528:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"536:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"544:5:22","type":""}],"src":"501:133:22"},{"body":{"nodeType":"YulBlock","src":"691:86:22","statements":[{"nodeType":"YulAssignment","src":"701:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"723:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"710:12:22"},"nodeType":"YulFunctionCall","src":"710:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"701:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"765:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"739:25:22"},"nodeType":"YulFunctionCall","src":"739:32:22"},"nodeType":"YulExpressionStatement","src":"739:32:22"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"669:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"677:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"685:5:22","type":""}],"src":"640:137:22"},{"body":{"nodeType":"YulBlock","src":"845:79:22","statements":[{"nodeType":"YulAssignment","src":"855:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"870:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"864:5:22"},"nodeType":"YulFunctionCall","src":"864:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"855:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"912:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"886:25:22"},"nodeType":"YulFunctionCall","src":"886:32:22"},"nodeType":"YulExpressionStatement","src":"886:32:22"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"823:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"831:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"839:5:22","type":""}],"src":"783:141:22"},{"body":{"nodeType":"YulBlock","src":"1004:210:22","statements":[{"body":{"nodeType":"YulBlock","src":"1053:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1062:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1065:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1055:6:22"},"nodeType":"YulFunctionCall","src":"1055:12:22"},"nodeType":"YulExpressionStatement","src":"1055:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1032:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1040:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1028:3:22"},"nodeType":"YulFunctionCall","src":"1028:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"1047:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1024:3:22"},"nodeType":"YulFunctionCall","src":"1024:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1017:6:22"},"nodeType":"YulFunctionCall","src":"1017:35:22"},"nodeType":"YulIf","src":"1014:2:22"},{"nodeType":"YulVariableDeclaration","src":"1078:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1105:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1092:12:22"},"nodeType":"YulFunctionCall","src":"1092:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1082:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1121:87:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1181:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1189:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1177:3:22"},"nodeType":"YulFunctionCall","src":"1177:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"1196:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"1204:3:22"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1130:46:22"},"nodeType":"YulFunctionCall","src":"1130:78:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1121:5:22"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"982:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"990:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"998:5:22","type":""}],"src":"943:271:22"},{"body":{"nodeType":"YulBlock","src":"1272:87:22","statements":[{"nodeType":"YulAssignment","src":"1282:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1304:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1291:12:22"},"nodeType":"YulFunctionCall","src":"1291:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1282:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1347:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1320:26:22"},"nodeType":"YulFunctionCall","src":"1320:33:22"},"nodeType":"YulExpressionStatement","src":"1320:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1250:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1258:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1266:5:22","type":""}],"src":"1220:139:22"},{"body":{"nodeType":"YulBlock","src":"1431:196:22","statements":[{"body":{"nodeType":"YulBlock","src":"1477:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1486:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1489:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1479:6:22"},"nodeType":"YulFunctionCall","src":"1479:12:22"},"nodeType":"YulExpressionStatement","src":"1479:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1452:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1461:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1448:3:22"},"nodeType":"YulFunctionCall","src":"1448:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1473:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1444:3:22"},"nodeType":"YulFunctionCall","src":"1444:32:22"},"nodeType":"YulIf","src":"1441:2:22"},{"nodeType":"YulBlock","src":"1503:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1518:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1532:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1522:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1547:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1593:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1578:3:22"},"nodeType":"YulFunctionCall","src":"1578:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1602:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1557:20:22"},"nodeType":"YulFunctionCall","src":"1557:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1547:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1401:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1412:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1424:6:22","type":""}],"src":"1365:262:22"},{"body":{"nodeType":"YulBlock","src":"1716:324:22","statements":[{"body":{"nodeType":"YulBlock","src":"1762:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1771:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1774:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1764:6:22"},"nodeType":"YulFunctionCall","src":"1764:12:22"},"nodeType":"YulExpressionStatement","src":"1764:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1737:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1746:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1733:3:22"},"nodeType":"YulFunctionCall","src":"1733:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1758:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1729:3:22"},"nodeType":"YulFunctionCall","src":"1729:32:22"},"nodeType":"YulIf","src":"1726:2:22"},{"nodeType":"YulBlock","src":"1788:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1803:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1817:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1807:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1832:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1867:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1878:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:22"},"nodeType":"YulFunctionCall","src":"1863:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1887:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1842:20:22"},"nodeType":"YulFunctionCall","src":"1842:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1832:6:22"}]}]},{"nodeType":"YulBlock","src":"1915:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1930:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1944:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1934:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1960:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1995:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2006:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1991:3:22"},"nodeType":"YulFunctionCall","src":"1991:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2015:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1970:20:22"},"nodeType":"YulFunctionCall","src":"1970:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1960:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1678:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1689:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1701:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1709:6:22","type":""}],"src":"1633:407:22"},{"body":{"nodeType":"YulBlock","src":"2146:452:22","statements":[{"body":{"nodeType":"YulBlock","src":"2192:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2201:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2204:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2194:6:22"},"nodeType":"YulFunctionCall","src":"2194:12:22"},"nodeType":"YulExpressionStatement","src":"2194:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2167:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2176:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2163:3:22"},"nodeType":"YulFunctionCall","src":"2163:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2188:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2159:3:22"},"nodeType":"YulFunctionCall","src":"2159:32:22"},"nodeType":"YulIf","src":"2156:2:22"},{"nodeType":"YulBlock","src":"2218:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2233:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2247:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2237:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2262:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2297:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2308:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2293:3:22"},"nodeType":"YulFunctionCall","src":"2293:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2317:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2272:20:22"},"nodeType":"YulFunctionCall","src":"2272:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2262:6:22"}]}]},{"nodeType":"YulBlock","src":"2345:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2360:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2374:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2364:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2390:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2425:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2436:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2421:3:22"},"nodeType":"YulFunctionCall","src":"2421:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2445:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2400:20:22"},"nodeType":"YulFunctionCall","src":"2400:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2390:6:22"}]}]},{"nodeType":"YulBlock","src":"2473:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2488:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2502:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2492:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2518:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2553:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2564:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:22"},"nodeType":"YulFunctionCall","src":"2549:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2573:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2528:20:22"},"nodeType":"YulFunctionCall","src":"2528:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2518:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2100:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2111:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2123:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2131:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2139:6:22","type":""}],"src":"2046:552:22"},{"body":{"nodeType":"YulBlock","src":"2730:683:22","statements":[{"body":{"nodeType":"YulBlock","src":"2777:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2786:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2789:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2779:6:22"},"nodeType":"YulFunctionCall","src":"2779:12:22"},"nodeType":"YulExpressionStatement","src":"2779:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2751:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2747:3:22"},"nodeType":"YulFunctionCall","src":"2747:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2772:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2743:3:22"},"nodeType":"YulFunctionCall","src":"2743:33:22"},"nodeType":"YulIf","src":"2740:2:22"},{"nodeType":"YulBlock","src":"2803:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2818:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2832:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2822:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2847:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2882:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2893:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2878:3:22"},"nodeType":"YulFunctionCall","src":"2878:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2902:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2857:20:22"},"nodeType":"YulFunctionCall","src":"2857:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2847:6:22"}]}]},{"nodeType":"YulBlock","src":"2930:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2959:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2975:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3010:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3021:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3006:3:22"},"nodeType":"YulFunctionCall","src":"3006:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3030:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2985:20:22"},"nodeType":"YulFunctionCall","src":"2985:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2975:6:22"}]}]},{"nodeType":"YulBlock","src":"3058:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3073:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3087:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3077:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3103:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3138:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3149:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3134:3:22"},"nodeType":"YulFunctionCall","src":"3134:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3158:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3113:20:22"},"nodeType":"YulFunctionCall","src":"3113:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3103:6:22"}]}]},{"nodeType":"YulBlock","src":"3186:220:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3201:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:22"},"nodeType":"YulFunctionCall","src":"3228:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3215:12:22"},"nodeType":"YulFunctionCall","src":"3215:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3205:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3294:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3303:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3306:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3296:6:22"},"nodeType":"YulFunctionCall","src":"3296:12:22"},"nodeType":"YulExpressionStatement","src":"3296:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3266:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3274:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3263:2:22"},"nodeType":"YulFunctionCall","src":"3263:30:22"},"nodeType":"YulIf","src":"3260:2:22"},{"nodeType":"YulAssignment","src":"3324:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3368:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3379:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3364:3:22"},"nodeType":"YulFunctionCall","src":"3364:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3334:29:22"},"nodeType":"YulFunctionCall","src":"3334:62:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3324:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2676:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2687:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2699:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2707:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2715:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2723:6:22","type":""}],"src":"2604:809:22"},{"body":{"nodeType":"YulBlock","src":"3499:321:22","statements":[{"body":{"nodeType":"YulBlock","src":"3545:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3554:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3547:6:22"},"nodeType":"YulFunctionCall","src":"3547:12:22"},"nodeType":"YulExpressionStatement","src":"3547:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3529:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3516:3:22"},"nodeType":"YulFunctionCall","src":"3516:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3541:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3512:3:22"},"nodeType":"YulFunctionCall","src":"3512:32:22"},"nodeType":"YulIf","src":"3509:2:22"},{"nodeType":"YulBlock","src":"3571:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3586:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3600:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3590:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3615:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3650:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3661:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3646:3:22"},"nodeType":"YulFunctionCall","src":"3646:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3670:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3625:20:22"},"nodeType":"YulFunctionCall","src":"3625:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3615:6:22"}]}]},{"nodeType":"YulBlock","src":"3698:115:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3713:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3727:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3717:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3743:60:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3775:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3786:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3771:3:22"},"nodeType":"YulFunctionCall","src":"3771:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3795:7:22"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"3753:17:22"},"nodeType":"YulFunctionCall","src":"3753:50:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3743:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3461:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3472:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3484:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3492:6:22","type":""}],"src":"3419:401:22"},{"body":{"nodeType":"YulBlock","src":"3909:324:22","statements":[{"body":{"nodeType":"YulBlock","src":"3955:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3964:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3967:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3957:6:22"},"nodeType":"YulFunctionCall","src":"3957:12:22"},"nodeType":"YulExpressionStatement","src":"3957:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3930:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3939:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3926:3:22"},"nodeType":"YulFunctionCall","src":"3926:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3951:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3922:3:22"},"nodeType":"YulFunctionCall","src":"3922:32:22"},"nodeType":"YulIf","src":"3919:2:22"},{"nodeType":"YulBlock","src":"3981:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3996:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4010:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4000:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4025:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4071:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4056:3:22"},"nodeType":"YulFunctionCall","src":"4056:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4080:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4035:20:22"},"nodeType":"YulFunctionCall","src":"4035:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4025:6:22"}]}]},{"nodeType":"YulBlock","src":"4108:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4123:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4137:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4127:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4153:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4188:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4199:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4184:3:22"},"nodeType":"YulFunctionCall","src":"4184:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4208:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4163:20:22"},"nodeType":"YulFunctionCall","src":"4163:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4153:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3871:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3882:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3894:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3902:6:22","type":""}],"src":"3826:407:22"},{"body":{"nodeType":"YulBlock","src":"4304:195:22","statements":[{"body":{"nodeType":"YulBlock","src":"4350:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4359:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4362:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4352:6:22"},"nodeType":"YulFunctionCall","src":"4352:12:22"},"nodeType":"YulExpressionStatement","src":"4352:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4325:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4334:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4321:3:22"},"nodeType":"YulFunctionCall","src":"4321:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4317:3:22"},"nodeType":"YulFunctionCall","src":"4317:32:22"},"nodeType":"YulIf","src":"4314:2:22"},{"nodeType":"YulBlock","src":"4376:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4391:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4405:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4395:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4420:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4454:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4465:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4450:3:22"},"nodeType":"YulFunctionCall","src":"4450:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4474:7:22"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"4430:19:22"},"nodeType":"YulFunctionCall","src":"4430:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4420:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4274:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4285:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4297:6:22","type":""}],"src":"4239:260:22"},{"body":{"nodeType":"YulBlock","src":"4581:206:22","statements":[{"body":{"nodeType":"YulBlock","src":"4627:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4636:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4639:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4629:6:22"},"nodeType":"YulFunctionCall","src":"4629:12:22"},"nodeType":"YulExpressionStatement","src":"4629:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4602:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4611:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4598:3:22"},"nodeType":"YulFunctionCall","src":"4598:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4623:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4594:3:22"},"nodeType":"YulFunctionCall","src":"4594:32:22"},"nodeType":"YulIf","src":"4591:2:22"},{"nodeType":"YulBlock","src":"4653:127:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4668:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4682:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4672:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4697:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4742:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4753:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4738:3:22"},"nodeType":"YulFunctionCall","src":"4738:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4762:7:22"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"4707:30:22"},"nodeType":"YulFunctionCall","src":"4707:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4697:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4551:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4562:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4574:6:22","type":""}],"src":"4505:282:22"},{"body":{"nodeType":"YulBlock","src":"4859:196:22","statements":[{"body":{"nodeType":"YulBlock","src":"4905:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4914:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4917:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4907:6:22"},"nodeType":"YulFunctionCall","src":"4907:12:22"},"nodeType":"YulExpressionStatement","src":"4907:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4880:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4889:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4876:3:22"},"nodeType":"YulFunctionCall","src":"4876:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4901:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4872:3:22"},"nodeType":"YulFunctionCall","src":"4872:32:22"},"nodeType":"YulIf","src":"4869:2:22"},{"nodeType":"YulBlock","src":"4931:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4946:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4960:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4950:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4975:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5010:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5021:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5006:3:22"},"nodeType":"YulFunctionCall","src":"5006:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5030:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4985:20:22"},"nodeType":"YulFunctionCall","src":"4985:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4975:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4829:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4840:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4852:6:22","type":""}],"src":"4793:262:22"},{"body":{"nodeType":"YulBlock","src":"5126:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5143:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5166:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5148:17:22"},"nodeType":"YulFunctionCall","src":"5148:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5136:6:22"},"nodeType":"YulFunctionCall","src":"5136:37:22"},"nodeType":"YulExpressionStatement","src":"5136:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5114:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5121:3:22","type":""}],"src":"5061:118:22"},{"body":{"nodeType":"YulBlock","src":"5244:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5261:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5281:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5266:14:22"},"nodeType":"YulFunctionCall","src":"5266:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5254:6:22"},"nodeType":"YulFunctionCall","src":"5254:34:22"},"nodeType":"YulExpressionStatement","src":"5254:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5232:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5239:3:22","type":""}],"src":"5185:109:22"},{"body":{"nodeType":"YulBlock","src":"5390:270:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5400:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5446:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5414:31:22"},"nodeType":"YulFunctionCall","src":"5414:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5404:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5461:77:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5526:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5531:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5468:57:22"},"nodeType":"YulFunctionCall","src":"5468:70:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5461:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"5580:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5569:3:22"},"nodeType":"YulFunctionCall","src":"5569:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"5587:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5592:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5547:21:22"},"nodeType":"YulFunctionCall","src":"5547:52:22"},"nodeType":"YulExpressionStatement","src":"5547:52:22"},{"nodeType":"YulAssignment","src":"5608:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5619:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5646:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5624:21:22"},"nodeType":"YulFunctionCall","src":"5624:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5615:3:22"},"nodeType":"YulFunctionCall","src":"5615:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5608:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5371:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5378:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5386:3:22","type":""}],"src":"5300:360:22"},{"body":{"nodeType":"YulBlock","src":"5758:272:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5768:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5815:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5782:32:22"},"nodeType":"YulFunctionCall","src":"5782:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5772:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5830:78:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5896:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5901:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5837:58:22"},"nodeType":"YulFunctionCall","src":"5837:71:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5830:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5943:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"5950:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5939:3:22"},"nodeType":"YulFunctionCall","src":"5939:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"5957:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"5962:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5917:21:22"},"nodeType":"YulFunctionCall","src":"5917:52:22"},"nodeType":"YulExpressionStatement","src":"5917:52:22"},{"nodeType":"YulAssignment","src":"5978:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5989:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6016:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5994:21:22"},"nodeType":"YulFunctionCall","src":"5994:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5985:3:22"},"nodeType":"YulFunctionCall","src":"5985:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5978:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5739:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5746:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5754:3:22","type":""}],"src":"5666:364:22"},{"body":{"nodeType":"YulBlock","src":"6146:267:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6156:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6203:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6170:32:22"},"nodeType":"YulFunctionCall","src":"6170:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6160:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6218:96:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6302:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6307:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6225:76:22"},"nodeType":"YulFunctionCall","src":"6225:89:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6218:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6349:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"6356:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6345:3:22"},"nodeType":"YulFunctionCall","src":"6345:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"6363:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6368:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6323:21:22"},"nodeType":"YulFunctionCall","src":"6323:52:22"},"nodeType":"YulExpressionStatement","src":"6323:52:22"},{"nodeType":"YulAssignment","src":"6384:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6395:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6400:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6391:3:22"},"nodeType":"YulFunctionCall","src":"6391:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6384:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6127:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6134:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6142:3:22","type":""}],"src":"6036:377:22"},{"body":{"nodeType":"YulBlock","src":"6565:220:22","statements":[{"nodeType":"YulAssignment","src":"6575:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6641:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"6646:2:22","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6582:58:22"},"nodeType":"YulFunctionCall","src":"6582:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6575:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6747:3:22"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"6658:88:22"},"nodeType":"YulFunctionCall","src":"6658:93:22"},"nodeType":"YulExpressionStatement","src":"6658:93:22"},{"nodeType":"YulAssignment","src":"6760:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6771:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"6776:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6767:3:22"},"nodeType":"YulFunctionCall","src":"6767:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6760:3:22"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6553:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6561:3:22","type":""}],"src":"6419:366:22"},{"body":{"nodeType":"YulBlock","src":"6937:220:22","statements":[{"nodeType":"YulAssignment","src":"6947:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7013:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7018:2:22","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6954:58:22"},"nodeType":"YulFunctionCall","src":"6954:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6947:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7119:3:22"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7030:88:22"},"nodeType":"YulFunctionCall","src":"7030:93:22"},"nodeType":"YulExpressionStatement","src":"7030:93:22"},{"nodeType":"YulAssignment","src":"7132:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7143:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7148:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7139:3:22"},"nodeType":"YulFunctionCall","src":"7139:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7132:3:22"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6925:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6933:3:22","type":""}],"src":"6791:366:22"},{"body":{"nodeType":"YulBlock","src":"7309:220:22","statements":[{"nodeType":"YulAssignment","src":"7319:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7385:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7390:2:22","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7326:58:22"},"nodeType":"YulFunctionCall","src":"7326:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7319:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7491:3:22"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"7402:88:22"},"nodeType":"YulFunctionCall","src":"7402:93:22"},"nodeType":"YulExpressionStatement","src":"7402:93:22"},{"nodeType":"YulAssignment","src":"7504:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7515:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7520:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7511:3:22"},"nodeType":"YulFunctionCall","src":"7511:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7504:3:22"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7297:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7305:3:22","type":""}],"src":"7163:366:22"},{"body":{"nodeType":"YulBlock","src":"7681:220:22","statements":[{"nodeType":"YulAssignment","src":"7691:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7757:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7762:2:22","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7698:58:22"},"nodeType":"YulFunctionCall","src":"7698:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7691:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7863:3:22"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"7774:88:22"},"nodeType":"YulFunctionCall","src":"7774:93:22"},"nodeType":"YulExpressionStatement","src":"7774:93:22"},{"nodeType":"YulAssignment","src":"7876:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7887:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"7892:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7883:3:22"},"nodeType":"YulFunctionCall","src":"7883:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7876:3:22"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7669:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7677:3:22","type":""}],"src":"7535:366:22"},{"body":{"nodeType":"YulBlock","src":"8053:220:22","statements":[{"nodeType":"YulAssignment","src":"8063:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8129:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8134:2:22","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8070:58:22"},"nodeType":"YulFunctionCall","src":"8070:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8063:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8235:3:22"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"8146:88:22"},"nodeType":"YulFunctionCall","src":"8146:93:22"},"nodeType":"YulExpressionStatement","src":"8146:93:22"},{"nodeType":"YulAssignment","src":"8248:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8259:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8264:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8255:3:22"},"nodeType":"YulFunctionCall","src":"8255:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8248:3:22"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8041:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8049:3:22","type":""}],"src":"7907:366:22"},{"body":{"nodeType":"YulBlock","src":"8425:220:22","statements":[{"nodeType":"YulAssignment","src":"8435:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8501:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8506:2:22","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8442:58:22"},"nodeType":"YulFunctionCall","src":"8442:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8435:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8607:3:22"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"8518:88:22"},"nodeType":"YulFunctionCall","src":"8518:93:22"},"nodeType":"YulExpressionStatement","src":"8518:93:22"},{"nodeType":"YulAssignment","src":"8620:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8631:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8636:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8627:3:22"},"nodeType":"YulFunctionCall","src":"8627:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8620:3:22"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8413:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8421:3:22","type":""}],"src":"8279:366:22"},{"body":{"nodeType":"YulBlock","src":"8797:220:22","statements":[{"nodeType":"YulAssignment","src":"8807:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8873:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8878:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8814:58:22"},"nodeType":"YulFunctionCall","src":"8814:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8807:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8979:3:22"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"8890:88:22"},"nodeType":"YulFunctionCall","src":"8890:93:22"},"nodeType":"YulExpressionStatement","src":"8890:93:22"},{"nodeType":"YulAssignment","src":"8992:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9003:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9008:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:22"},"nodeType":"YulFunctionCall","src":"8999:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8992:3:22"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8785:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8793:3:22","type":""}],"src":"8651:366:22"},{"body":{"nodeType":"YulBlock","src":"9169:220:22","statements":[{"nodeType":"YulAssignment","src":"9179:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9245:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9250:2:22","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9186:58:22"},"nodeType":"YulFunctionCall","src":"9186:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9179:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9351:3:22"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"9262:88:22"},"nodeType":"YulFunctionCall","src":"9262:93:22"},"nodeType":"YulExpressionStatement","src":"9262:93:22"},{"nodeType":"YulAssignment","src":"9364:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9375:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9380:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9371:3:22"},"nodeType":"YulFunctionCall","src":"9371:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9364:3:22"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9157:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9165:3:22","type":""}],"src":"9023:366:22"},{"body":{"nodeType":"YulBlock","src":"9541:220:22","statements":[{"nodeType":"YulAssignment","src":"9551:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9617:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9622:2:22","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9558:58:22"},"nodeType":"YulFunctionCall","src":"9558:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9551:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9723:3:22"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"9634:88:22"},"nodeType":"YulFunctionCall","src":"9634:93:22"},"nodeType":"YulExpressionStatement","src":"9634:93:22"},{"nodeType":"YulAssignment","src":"9736:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9747:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9752:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9743:3:22"},"nodeType":"YulFunctionCall","src":"9743:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9736:3:22"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9529:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9537:3:22","type":""}],"src":"9395:366:22"},{"body":{"nodeType":"YulBlock","src":"9832:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9849:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9872:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9854:17:22"},"nodeType":"YulFunctionCall","src":"9854:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9842:6:22"},"nodeType":"YulFunctionCall","src":"9842:37:22"},"nodeType":"YulExpressionStatement","src":"9842:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9820:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9827:3:22","type":""}],"src":"9767:118:22"},{"body":{"nodeType":"YulBlock","src":"10075:251:22","statements":[{"nodeType":"YulAssignment","src":"10086:102:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10175:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"10184:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10093:81:22"},"nodeType":"YulFunctionCall","src":"10093:95:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10086:3:22"}]},{"nodeType":"YulAssignment","src":"10198:102:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10287:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"10296:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10205:81:22"},"nodeType":"YulFunctionCall","src":"10205:95:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10198:3:22"}]},{"nodeType":"YulAssignment","src":"10310:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"10317:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10310:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10046:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10052:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10060:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10071:3:22","type":""}],"src":"9891:435:22"},{"body":{"nodeType":"YulBlock","src":"10430:124:22","statements":[{"nodeType":"YulAssignment","src":"10440:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10452:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10463:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10448:3:22"},"nodeType":"YulFunctionCall","src":"10448:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10440:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10520:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10533:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10544:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10529:3:22"},"nodeType":"YulFunctionCall","src":"10529:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10476:43:22"},"nodeType":"YulFunctionCall","src":"10476:71:22"},"nodeType":"YulExpressionStatement","src":"10476:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10402:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10414:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10425:4:22","type":""}],"src":"10332:222:22"},{"body":{"nodeType":"YulBlock","src":"10760:440:22","statements":[{"nodeType":"YulAssignment","src":"10770:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10782:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10793:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10778:3:22"},"nodeType":"YulFunctionCall","src":"10778:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10770:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10851:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10864:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10875:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10860:3:22"},"nodeType":"YulFunctionCall","src":"10860:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10807:43:22"},"nodeType":"YulFunctionCall","src":"10807:71:22"},"nodeType":"YulExpressionStatement","src":"10807:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10932:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10945:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10956:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10941:3:22"},"nodeType":"YulFunctionCall","src":"10941:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10888:43:22"},"nodeType":"YulFunctionCall","src":"10888:72:22"},"nodeType":"YulExpressionStatement","src":"10888:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11014:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11027:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11038:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11023:3:22"},"nodeType":"YulFunctionCall","src":"11023:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10970:43:22"},"nodeType":"YulFunctionCall","src":"10970:72:22"},"nodeType":"YulExpressionStatement","src":"10970:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11063:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11074:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11059:3:22"},"nodeType":"YulFunctionCall","src":"11059:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11083:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11089:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11079:3:22"},"nodeType":"YulFunctionCall","src":"11079:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11052:6:22"},"nodeType":"YulFunctionCall","src":"11052:48:22"},"nodeType":"YulExpressionStatement","src":"11052:48:22"},{"nodeType":"YulAssignment","src":"11109:84:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11179:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"11188:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11117:61:22"},"nodeType":"YulFunctionCall","src":"11117:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11109:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10708:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10720:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10728:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10736:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10744:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10755:4:22","type":""}],"src":"10560:640:22"},{"body":{"nodeType":"YulBlock","src":"11298:118:22","statements":[{"nodeType":"YulAssignment","src":"11308:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11320:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11331:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11316:3:22"},"nodeType":"YulFunctionCall","src":"11316:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11308:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11382:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11395:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11406:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11391:3:22"},"nodeType":"YulFunctionCall","src":"11391:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11344:37:22"},"nodeType":"YulFunctionCall","src":"11344:65:22"},"nodeType":"YulExpressionStatement","src":"11344:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11270:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11282:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11293:4:22","type":""}],"src":"11206:210:22"},{"body":{"nodeType":"YulBlock","src":"11540:195:22","statements":[{"nodeType":"YulAssignment","src":"11550:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11562:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11573:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11558:3:22"},"nodeType":"YulFunctionCall","src":"11558:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11550:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11597:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11608:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11593:3:22"},"nodeType":"YulFunctionCall","src":"11593:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11616:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11622:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11612:3:22"},"nodeType":"YulFunctionCall","src":"11612:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11586:6:22"},"nodeType":"YulFunctionCall","src":"11586:47:22"},"nodeType":"YulExpressionStatement","src":"11586:47:22"},{"nodeType":"YulAssignment","src":"11642:86:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11714:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"11723:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11650:63:22"},"nodeType":"YulFunctionCall","src":"11650:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11642:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11512:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11524:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11535:4:22","type":""}],"src":"11422:313:22"},{"body":{"nodeType":"YulBlock","src":"11912:248:22","statements":[{"nodeType":"YulAssignment","src":"11922:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11934:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11945:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11930:3:22"},"nodeType":"YulFunctionCall","src":"11930:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11922:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11969:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11980:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11965:3:22"},"nodeType":"YulFunctionCall","src":"11965:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11988:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11994:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11984:3:22"},"nodeType":"YulFunctionCall","src":"11984:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11958:6:22"},"nodeType":"YulFunctionCall","src":"11958:47:22"},"nodeType":"YulExpressionStatement","src":"11958:47:22"},{"nodeType":"YulAssignment","src":"12014:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12148:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12022:124:22"},"nodeType":"YulFunctionCall","src":"12022:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12014:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11892:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11907:4:22","type":""}],"src":"11741:419:22"},{"body":{"nodeType":"YulBlock","src":"12337:248:22","statements":[{"nodeType":"YulAssignment","src":"12347:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12359:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12370:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12355:3:22"},"nodeType":"YulFunctionCall","src":"12355:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12347:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12394:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12405:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12390:3:22"},"nodeType":"YulFunctionCall","src":"12390:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12413:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"12419:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12409:3:22"},"nodeType":"YulFunctionCall","src":"12409:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12383:6:22"},"nodeType":"YulFunctionCall","src":"12383:47:22"},"nodeType":"YulExpressionStatement","src":"12383:47:22"},{"nodeType":"YulAssignment","src":"12439:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12573:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12447:124:22"},"nodeType":"YulFunctionCall","src":"12447:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12439:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12317:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12332:4:22","type":""}],"src":"12166:419:22"},{"body":{"nodeType":"YulBlock","src":"12762:248:22","statements":[{"nodeType":"YulAssignment","src":"12772:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12784:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12795:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12780:3:22"},"nodeType":"YulFunctionCall","src":"12780:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12772:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12819:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12830:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12815:3:22"},"nodeType":"YulFunctionCall","src":"12815:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12838:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"12844:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12834:3:22"},"nodeType":"YulFunctionCall","src":"12834:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12808:6:22"},"nodeType":"YulFunctionCall","src":"12808:47:22"},"nodeType":"YulExpressionStatement","src":"12808:47:22"},{"nodeType":"YulAssignment","src":"12864:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12998:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12872:124:22"},"nodeType":"YulFunctionCall","src":"12872:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12864:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12742:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12757:4:22","type":""}],"src":"12591:419:22"},{"body":{"nodeType":"YulBlock","src":"13187:248:22","statements":[{"nodeType":"YulAssignment","src":"13197:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13209:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13220:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13205:3:22"},"nodeType":"YulFunctionCall","src":"13205:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13197:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13244:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13255:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13240:3:22"},"nodeType":"YulFunctionCall","src":"13240:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13263:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"13269:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13259:3:22"},"nodeType":"YulFunctionCall","src":"13259:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13233:6:22"},"nodeType":"YulFunctionCall","src":"13233:47:22"},"nodeType":"YulExpressionStatement","src":"13233:47:22"},{"nodeType":"YulAssignment","src":"13289:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13423:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13297:124:22"},"nodeType":"YulFunctionCall","src":"13297:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13289:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13167:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13182:4:22","type":""}],"src":"13016:419:22"},{"body":{"nodeType":"YulBlock","src":"13612:248:22","statements":[{"nodeType":"YulAssignment","src":"13622:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13634:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13645:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13630:3:22"},"nodeType":"YulFunctionCall","src":"13630:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13622:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13669:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13680:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13665:3:22"},"nodeType":"YulFunctionCall","src":"13665:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13688:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"13694:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13684:3:22"},"nodeType":"YulFunctionCall","src":"13684:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13658:6:22"},"nodeType":"YulFunctionCall","src":"13658:47:22"},"nodeType":"YulExpressionStatement","src":"13658:47:22"},{"nodeType":"YulAssignment","src":"13714:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13848:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13722:124:22"},"nodeType":"YulFunctionCall","src":"13722:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13714:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13592:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13607:4:22","type":""}],"src":"13441:419:22"},{"body":{"nodeType":"YulBlock","src":"14037:248:22","statements":[{"nodeType":"YulAssignment","src":"14047:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14059:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14070:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14055:3:22"},"nodeType":"YulFunctionCall","src":"14055:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14047:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14094:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14105:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14090:3:22"},"nodeType":"YulFunctionCall","src":"14090:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14113:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14119:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14109:3:22"},"nodeType":"YulFunctionCall","src":"14109:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14083:6:22"},"nodeType":"YulFunctionCall","src":"14083:47:22"},"nodeType":"YulExpressionStatement","src":"14083:47:22"},{"nodeType":"YulAssignment","src":"14139:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14273:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14147:124:22"},"nodeType":"YulFunctionCall","src":"14147:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14139:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14017:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14032:4:22","type":""}],"src":"13866:419:22"},{"body":{"nodeType":"YulBlock","src":"14462:248:22","statements":[{"nodeType":"YulAssignment","src":"14472:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14484:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14495:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14480:3:22"},"nodeType":"YulFunctionCall","src":"14480:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14472:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14519:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14530:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14515:3:22"},"nodeType":"YulFunctionCall","src":"14515:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14538:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14544:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14534:3:22"},"nodeType":"YulFunctionCall","src":"14534:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14508:6:22"},"nodeType":"YulFunctionCall","src":"14508:47:22"},"nodeType":"YulExpressionStatement","src":"14508:47:22"},{"nodeType":"YulAssignment","src":"14564:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14698:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14572:124:22"},"nodeType":"YulFunctionCall","src":"14572:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14564:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14442:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14457:4:22","type":""}],"src":"14291:419:22"},{"body":{"nodeType":"YulBlock","src":"14887:248:22","statements":[{"nodeType":"YulAssignment","src":"14897:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14909:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14920:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14905:3:22"},"nodeType":"YulFunctionCall","src":"14905:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14897:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14944:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14955:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14940:3:22"},"nodeType":"YulFunctionCall","src":"14940:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14963:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14969:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14959:3:22"},"nodeType":"YulFunctionCall","src":"14959:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14933:6:22"},"nodeType":"YulFunctionCall","src":"14933:47:22"},"nodeType":"YulExpressionStatement","src":"14933:47:22"},{"nodeType":"YulAssignment","src":"14989:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15123:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14997:124:22"},"nodeType":"YulFunctionCall","src":"14997:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14989:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14867:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14882:4:22","type":""}],"src":"14716:419:22"},{"body":{"nodeType":"YulBlock","src":"15312:248:22","statements":[{"nodeType":"YulAssignment","src":"15322:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15334:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15345:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15330:3:22"},"nodeType":"YulFunctionCall","src":"15330:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15322:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15369:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15380:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15365:3:22"},"nodeType":"YulFunctionCall","src":"15365:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15388:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"15394:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15384:3:22"},"nodeType":"YulFunctionCall","src":"15384:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15358:6:22"},"nodeType":"YulFunctionCall","src":"15358:47:22"},"nodeType":"YulExpressionStatement","src":"15358:47:22"},{"nodeType":"YulAssignment","src":"15414:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15548:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15422:124:22"},"nodeType":"YulFunctionCall","src":"15422:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15414:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15292:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15307:4:22","type":""}],"src":"15141:419:22"},{"body":{"nodeType":"YulBlock","src":"15664:124:22","statements":[{"nodeType":"YulAssignment","src":"15674:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15686:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15697:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:22"},"nodeType":"YulFunctionCall","src":"15682:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15674:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15754:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15767:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15778:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15763:3:22"},"nodeType":"YulFunctionCall","src":"15763:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15710:43:22"},"nodeType":"YulFunctionCall","src":"15710:71:22"},"nodeType":"YulExpressionStatement","src":"15710:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15636:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15648:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15659:4:22","type":""}],"src":"15566:222:22"},{"body":{"nodeType":"YulBlock","src":"15835:88:22","statements":[{"nodeType":"YulAssignment","src":"15845:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"15855:18:22"},"nodeType":"YulFunctionCall","src":"15855:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15845:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15904:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"15912:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"15884:19:22"},"nodeType":"YulFunctionCall","src":"15884:33:22"},"nodeType":"YulExpressionStatement","src":"15884:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"15819:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15828:6:22","type":""}],"src":"15794:129:22"},{"body":{"nodeType":"YulBlock","src":"15969:35:22","statements":[{"nodeType":"YulAssignment","src":"15979:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15995:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15989:5:22"},"nodeType":"YulFunctionCall","src":"15989:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15979:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15962:6:22","type":""}],"src":"15929:75:22"},{"body":{"nodeType":"YulBlock","src":"16076:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"16181:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16183:16:22"},"nodeType":"YulFunctionCall","src":"16183:18:22"},"nodeType":"YulExpressionStatement","src":"16183:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16153:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"16161:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16150:2:22"},"nodeType":"YulFunctionCall","src":"16150:30:22"},"nodeType":"YulIf","src":"16147:2:22"},{"nodeType":"YulAssignment","src":"16213:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16243:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16221:21:22"},"nodeType":"YulFunctionCall","src":"16221:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16213:4:22"}]},{"nodeType":"YulAssignment","src":"16287:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16299:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"16305:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16295:3:22"},"nodeType":"YulFunctionCall","src":"16295:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16287:4:22"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16060:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16071:4:22","type":""}],"src":"16010:307:22"},{"body":{"nodeType":"YulBlock","src":"16381:40:22","statements":[{"nodeType":"YulAssignment","src":"16392:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16408:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16402:5:22"},"nodeType":"YulFunctionCall","src":"16402:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16392:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16364:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16374:6:22","type":""}],"src":"16323:98:22"},{"body":{"nodeType":"YulBlock","src":"16486:40:22","statements":[{"nodeType":"YulAssignment","src":"16497:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16513:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16507:5:22"},"nodeType":"YulFunctionCall","src":"16507:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16497:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16469:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16479:6:22","type":""}],"src":"16427:99:22"},{"body":{"nodeType":"YulBlock","src":"16627:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16644:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"16649:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16637:6:22"},"nodeType":"YulFunctionCall","src":"16637:19:22"},"nodeType":"YulExpressionStatement","src":"16637:19:22"},{"nodeType":"YulAssignment","src":"16665:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16684:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"16689:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16680:3:22"},"nodeType":"YulFunctionCall","src":"16680:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16665:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16599:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"16604:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16615:11:22","type":""}],"src":"16532:168:22"},{"body":{"nodeType":"YulBlock","src":"16802:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16819:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"16824:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16812:6:22"},"nodeType":"YulFunctionCall","src":"16812:19:22"},"nodeType":"YulExpressionStatement","src":"16812:19:22"},{"nodeType":"YulAssignment","src":"16840:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16859:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"16864:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16855:3:22"},"nodeType":"YulFunctionCall","src":"16855:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16840:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16774:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"16779:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16790:11:22","type":""}],"src":"16706:169:22"},{"body":{"nodeType":"YulBlock","src":"16995:34:22","statements":[{"nodeType":"YulAssignment","src":"17005:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"17020:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17005:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16967:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"16972:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16983:11:22","type":""}],"src":"16881:148:22"},{"body":{"nodeType":"YulBlock","src":"17080:51:22","statements":[{"nodeType":"YulAssignment","src":"17090:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17119:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17101:17:22"},"nodeType":"YulFunctionCall","src":"17101:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17090:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17062:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17072:7:22","type":""}],"src":"17035:96:22"},{"body":{"nodeType":"YulBlock","src":"17179:48:22","statements":[{"nodeType":"YulAssignment","src":"17189:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17214:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17207:6:22"},"nodeType":"YulFunctionCall","src":"17207:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17200:6:22"},"nodeType":"YulFunctionCall","src":"17200:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17189:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17161:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17171:7:22","type":""}],"src":"17137:90:22"},{"body":{"nodeType":"YulBlock","src":"17277:105:22","statements":[{"nodeType":"YulAssignment","src":"17287:89:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17302:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"17309:66:22","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17298:3:22"},"nodeType":"YulFunctionCall","src":"17298:78:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17287:7:22"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17259:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17269:7:22","type":""}],"src":"17233:149:22"},{"body":{"nodeType":"YulBlock","src":"17433:81:22","statements":[{"nodeType":"YulAssignment","src":"17443:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17458:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"17465:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17454:3:22"},"nodeType":"YulFunctionCall","src":"17454:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17443:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17415:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17425:7:22","type":""}],"src":"17388:126:22"},{"body":{"nodeType":"YulBlock","src":"17565:32:22","statements":[{"nodeType":"YulAssignment","src":"17575:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"17586:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17575:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17547:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17557:7:22","type":""}],"src":"17520:77:22"},{"body":{"nodeType":"YulBlock","src":"17654:103:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17677:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"17682:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"17687:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17664:12:22"},"nodeType":"YulFunctionCall","src":"17664:30:22"},"nodeType":"YulExpressionStatement","src":"17664:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17735:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"17740:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17731:3:22"},"nodeType":"YulFunctionCall","src":"17731:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"17749:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17724:6:22"},"nodeType":"YulFunctionCall","src":"17724:27:22"},"nodeType":"YulExpressionStatement","src":"17724:27:22"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17636:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17641:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"17646:6:22","type":""}],"src":"17603:154:22"},{"body":{"nodeType":"YulBlock","src":"17812:258:22","statements":[{"nodeType":"YulVariableDeclaration","src":"17822:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"17831:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17826:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"17891:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17916:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"17921:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17912:3:22"},"nodeType":"YulFunctionCall","src":"17912:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17935:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"17940:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17931:3:22"},"nodeType":"YulFunctionCall","src":"17931:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17925:5:22"},"nodeType":"YulFunctionCall","src":"17925:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17905:6:22"},"nodeType":"YulFunctionCall","src":"17905:39:22"},"nodeType":"YulExpressionStatement","src":"17905:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17852:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"17855:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17849:2:22"},"nodeType":"YulFunctionCall","src":"17849:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17863:19:22","statements":[{"nodeType":"YulAssignment","src":"17865:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17874:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"17877:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17870:3:22"},"nodeType":"YulFunctionCall","src":"17870:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17865:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"17845:3:22","statements":[]},"src":"17841:113:22"},{"body":{"nodeType":"YulBlock","src":"17988:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18038:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"18043:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18034:3:22"},"nodeType":"YulFunctionCall","src":"18034:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"18052:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18027:6:22"},"nodeType":"YulFunctionCall","src":"18027:27:22"},"nodeType":"YulExpressionStatement","src":"18027:27:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17969:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"17972:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17966:2:22"},"nodeType":"YulFunctionCall","src":"17966:13:22"},"nodeType":"YulIf","src":"17963:2:22"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17794:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17799:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"17804:6:22","type":""}],"src":"17763:307:22"},{"body":{"nodeType":"YulBlock","src":"18127:269:22","statements":[{"nodeType":"YulAssignment","src":"18137:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18151:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"18157:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18147:3:22"},"nodeType":"YulFunctionCall","src":"18147:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18137:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"18168:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18198:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"18204:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18194:3:22"},"nodeType":"YulFunctionCall","src":"18194:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18172:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"18245:51:22","statements":[{"nodeType":"YulAssignment","src":"18259:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18273:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"18281:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18269:3:22"},"nodeType":"YulFunctionCall","src":"18269:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18259:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18225:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18218:6:22"},"nodeType":"YulFunctionCall","src":"18218:26:22"},"nodeType":"YulIf","src":"18215:2:22"},{"body":{"nodeType":"YulBlock","src":"18348:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"18362:16:22"},"nodeType":"YulFunctionCall","src":"18362:18:22"},"nodeType":"YulExpressionStatement","src":"18362:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18312:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18335:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"18343:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18332:2:22"},"nodeType":"YulFunctionCall","src":"18332:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18309:2:22"},"nodeType":"YulFunctionCall","src":"18309:38:22"},"nodeType":"YulIf","src":"18306:2:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18111:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18120:6:22","type":""}],"src":"18076:320:22"},{"body":{"nodeType":"YulBlock","src":"18445:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"18455:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18477:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18507:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18485:21:22"},"nodeType":"YulFunctionCall","src":"18485:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18473:3:22"},"nodeType":"YulFunctionCall","src":"18473:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"18459:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"18624:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18626:16:22"},"nodeType":"YulFunctionCall","src":"18626:18:22"},"nodeType":"YulExpressionStatement","src":"18626:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18567:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"18579:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18564:2:22"},"nodeType":"YulFunctionCall","src":"18564:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18603:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"18615:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18600:2:22"},"nodeType":"YulFunctionCall","src":"18600:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18561:2:22"},"nodeType":"YulFunctionCall","src":"18561:62:22"},"nodeType":"YulIf","src":"18558:2:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18662:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"18666:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18655:6:22"},"nodeType":"YulFunctionCall","src":"18655:22:22"},"nodeType":"YulExpressionStatement","src":"18655:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18431:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"18439:4:22","type":""}],"src":"18402:281:22"},{"body":{"nodeType":"YulBlock","src":"18717:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18734:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18737:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18727:6:22"},"nodeType":"YulFunctionCall","src":"18727:88:22"},"nodeType":"YulExpressionStatement","src":"18727:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18831:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18834:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18824:6:22"},"nodeType":"YulFunctionCall","src":"18824:15:22"},"nodeType":"YulExpressionStatement","src":"18824:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18855:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18858:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18848:6:22"},"nodeType":"YulFunctionCall","src":"18848:15:22"},"nodeType":"YulExpressionStatement","src":"18848:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"18689:180:22"},{"body":{"nodeType":"YulBlock","src":"18903:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18920:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18923:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18913:6:22"},"nodeType":"YulFunctionCall","src":"18913:88:22"},"nodeType":"YulExpressionStatement","src":"18913:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19017:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19020:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19010:6:22"},"nodeType":"YulFunctionCall","src":"19010:15:22"},"nodeType":"YulExpressionStatement","src":"19010:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19041:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19044:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19034:6:22"},"nodeType":"YulFunctionCall","src":"19034:15:22"},"nodeType":"YulExpressionStatement","src":"19034:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"18875:180:22"},{"body":{"nodeType":"YulBlock","src":"19109:54:22","statements":[{"nodeType":"YulAssignment","src":"19119:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19137:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"19144:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19133:3:22"},"nodeType":"YulFunctionCall","src":"19133:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19153:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19149:3:22"},"nodeType":"YulFunctionCall","src":"19149:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19129:3:22"},"nodeType":"YulFunctionCall","src":"19129:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19119:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19092:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"19102:6:22","type":""}],"src":"19061:102:22"},{"body":{"nodeType":"YulBlock","src":"19275:126:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19297:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19305:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19293:3:22"},"nodeType":"YulFunctionCall","src":"19293:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"19309:34:22","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19286:6:22"},"nodeType":"YulFunctionCall","src":"19286:58:22"},"nodeType":"YulExpressionStatement","src":"19286:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19365:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19373:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19361:3:22"},"nodeType":"YulFunctionCall","src":"19361:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"19378:15:22","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19354:6:22"},"nodeType":"YulFunctionCall","src":"19354:40:22"},"nodeType":"YulExpressionStatement","src":"19354:40:22"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19267:6:22","type":""}],"src":"19169:232:22"},{"body":{"nodeType":"YulBlock","src":"19513:131:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19535:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19543:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19531:3:22"},"nodeType":"YulFunctionCall","src":"19531:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"19547:34:22","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19524:6:22"},"nodeType":"YulFunctionCall","src":"19524:58:22"},"nodeType":"YulExpressionStatement","src":"19524:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19603:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19611:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19599:3:22"},"nodeType":"YulFunctionCall","src":"19599:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"19616:20:22","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19592:6:22"},"nodeType":"YulFunctionCall","src":"19592:45:22"},"nodeType":"YulExpressionStatement","src":"19592:45:22"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19505:6:22","type":""}],"src":"19407:237:22"},{"body":{"nodeType":"YulBlock","src":"19756:118:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19778:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19786:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19774:3:22"},"nodeType":"YulFunctionCall","src":"19774:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"19790:34:22","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19767:6:22"},"nodeType":"YulFunctionCall","src":"19767:58:22"},"nodeType":"YulExpressionStatement","src":"19767:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19846:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19854:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19842:3:22"},"nodeType":"YulFunctionCall","src":"19842:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"19859:7:22","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19835:6:22"},"nodeType":"YulFunctionCall","src":"19835:32:22"},"nodeType":"YulExpressionStatement","src":"19835:32:22"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19748:6:22","type":""}],"src":"19650:224:22"},{"body":{"nodeType":"YulBlock","src":"19986:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20008:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20016:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20004:3:22"},"nodeType":"YulFunctionCall","src":"20004:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"20020:34:22","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19997:6:22"},"nodeType":"YulFunctionCall","src":"19997:58:22"},"nodeType":"YulExpressionStatement","src":"19997:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20076:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20084:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20072:3:22"},"nodeType":"YulFunctionCall","src":"20072:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"20089:6:22","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20065:6:22"},"nodeType":"YulFunctionCall","src":"20065:31:22"},"nodeType":"YulExpressionStatement","src":"20065:31:22"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19978:6:22","type":""}],"src":"19880:223:22"},{"body":{"nodeType":"YulBlock","src":"20215:69:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20237:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20245:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20233:3:22"},"nodeType":"YulFunctionCall","src":"20233:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"20249:27:22","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20226:6:22"},"nodeType":"YulFunctionCall","src":"20226:51:22"},"nodeType":"YulExpressionStatement","src":"20226:51:22"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20207:6:22","type":""}],"src":"20109:175:22"},{"body":{"nodeType":"YulBlock","src":"20396:122:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20418:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20426:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20414:3:22"},"nodeType":"YulFunctionCall","src":"20414:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"20430:34:22","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20407:6:22"},"nodeType":"YulFunctionCall","src":"20407:58:22"},"nodeType":"YulExpressionStatement","src":"20407:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20486:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20494:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20482:3:22"},"nodeType":"YulFunctionCall","src":"20482:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"20499:11:22","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20475:6:22"},"nodeType":"YulFunctionCall","src":"20475:36:22"},"nodeType":"YulExpressionStatement","src":"20475:36:22"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20388:6:22","type":""}],"src":"20290:228:22"},{"body":{"nodeType":"YulBlock","src":"20630:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20652:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20660:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20648:3:22"},"nodeType":"YulFunctionCall","src":"20648:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"20664:26:22","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20641:6:22"},"nodeType":"YulFunctionCall","src":"20641:50:22"},"nodeType":"YulExpressionStatement","src":"20641:50:22"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20622:6:22","type":""}],"src":"20524:174:22"},{"body":{"nodeType":"YulBlock","src":"20810:114:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20832:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20840:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20828:3:22"},"nodeType":"YulFunctionCall","src":"20828:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"20844:34:22","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20821:6:22"},"nodeType":"YulFunctionCall","src":"20821:58:22"},"nodeType":"YulExpressionStatement","src":"20821:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20900:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20908:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20896:3:22"},"nodeType":"YulFunctionCall","src":"20896:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"20913:3:22","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20889:6:22"},"nodeType":"YulFunctionCall","src":"20889:28:22"},"nodeType":"YulExpressionStatement","src":"20889:28:22"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20802:6:22","type":""}],"src":"20704:220:22"},{"body":{"nodeType":"YulBlock","src":"21036:142:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21058:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21066:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21054:3:22"},"nodeType":"YulFunctionCall","src":"21054:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"21070:34:22","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21047:6:22"},"nodeType":"YulFunctionCall","src":"21047:58:22"},"nodeType":"YulExpressionStatement","src":"21047:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21126:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"21134:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21122:3:22"},"nodeType":"YulFunctionCall","src":"21122:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"21139:31:22","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21115:6:22"},"nodeType":"YulFunctionCall","src":"21115:56:22"},"nodeType":"YulExpressionStatement","src":"21115:56:22"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21028:6:22","type":""}],"src":"20930:248:22"},{"body":{"nodeType":"YulBlock","src":"21227:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"21284:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21293:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21296:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21286:6:22"},"nodeType":"YulFunctionCall","src":"21286:12:22"},"nodeType":"YulExpressionStatement","src":"21286:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21250:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21275:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"21257:17:22"},"nodeType":"YulFunctionCall","src":"21257:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21247:2:22"},"nodeType":"YulFunctionCall","src":"21247:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21240:6:22"},"nodeType":"YulFunctionCall","src":"21240:43:22"},"nodeType":"YulIf","src":"21237:2:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21220:5:22","type":""}],"src":"21184:122:22"},{"body":{"nodeType":"YulBlock","src":"21352:76:22","statements":[{"body":{"nodeType":"YulBlock","src":"21406:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21415:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21418:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21408:6:22"},"nodeType":"YulFunctionCall","src":"21408:12:22"},"nodeType":"YulExpressionStatement","src":"21408:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21375:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21397:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"21382:14:22"},"nodeType":"YulFunctionCall","src":"21382:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21372:2:22"},"nodeType":"YulFunctionCall","src":"21372:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21365:6:22"},"nodeType":"YulFunctionCall","src":"21365:40:22"},"nodeType":"YulIf","src":"21362:2:22"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21345:5:22","type":""}],"src":"21312:116:22"},{"body":{"nodeType":"YulBlock","src":"21476:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"21532:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21541:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21544:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21534:6:22"},"nodeType":"YulFunctionCall","src":"21534:12:22"},"nodeType":"YulExpressionStatement","src":"21534:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21499:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21523:5:22"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"21506:16:22"},"nodeType":"YulFunctionCall","src":"21506:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21496:2:22"},"nodeType":"YulFunctionCall","src":"21496:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21489:6:22"},"nodeType":"YulFunctionCall","src":"21489:42:22"},"nodeType":"YulIf","src":"21486:2:22"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21469:5:22","type":""}],"src":"21434:120:22"},{"body":{"nodeType":"YulBlock","src":"21603:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"21660:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21669:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21672:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21662:6:22"},"nodeType":"YulFunctionCall","src":"21662:12:22"},"nodeType":"YulExpressionStatement","src":"21662:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21626:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21651:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21633:17:22"},"nodeType":"YulFunctionCall","src":"21633:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21623:2:22"},"nodeType":"YulFunctionCall","src":"21623:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21616:6:22"},"nodeType":"YulFunctionCall","src":"21616:43:22"},"nodeType":"YulIf","src":"21613:2:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21596:5:22","type":""}],"src":"21560:122:22"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e9919061184f565b6102bc565b6040516100fb9190611b60565b60405180910390f35b61010c61039e565b6040516101199190611b7b565b60405180910390f35b61013c600480360381019061013791906118a1565b610430565b6040516101499190611af9565b60405180910390f35b61016c60048036038101906101679190611813565b610476565b005b6101886004803603810190610183919061170d565b61058e565b005b6101a4600480360381019061019f919061170d565b6105ee565b005b6101c060048036038101906101bb91906118a1565b61060e565b6040516101cd9190611af9565b60405180910390f35b6101f060048036038101906101eb91906116a8565b610695565b6040516101fd9190611cbd565b60405180910390f35b61020e61074d565b60405161021b9190611b7b565b60405180910390f35b61023e600480360381019061023991906117d7565b6107df565b005b61025a6004803603810190610255919061175c565b6107f5565b005b610276600480360381019061027191906118a1565b610857565b6040516102839190611b7b565b60405180910390f35b6102a660048036038101906102a191906116d1565b6108bf565b6040516102b39190611b60565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611e27565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611e27565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c7d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611c9d565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b9d565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611c5d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611c3d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611e27565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611e27565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611b9d565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611ad5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c681611199565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611c5d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611bdd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611bfd565b60405180910390fd5b610c5183838360016111da565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611bdd565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016111e0565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611c1d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611b60565b60405180910390a3505050565b61100d848484610b5e565b611019848484846111e6565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611bbd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600060016110848461137d565b01905060008167ffffffffffffffff8111156110c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110fb5781602001600182028036833780820191505090505b509050600082602001820190505b60011561118e578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611178577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156111895761118e565b611109565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166111bb83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006112078473ffffffffffffffffffffffffffffffffffffffff166115b4565b15611370578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611230610a08565b8786866040518563ffffffff1660e01b81526004016112529493929190611b14565b602060405180830381600087803b15801561126c57600080fd5b505af192505050801561129d57506040513d601f19601f8201168201806040525081019061129a9190611878565b60015b611320573d80600081146112cd576040519150601f19603f3d011682016040523d82523d6000602084013e6112d2565b606091505b50600081511415611318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130f90611bbd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611375565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611401577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816113f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611464576d04ee2d6d415b85acef8100000000838161145a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc1000083106114b957662386f26fc1000083816114af577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e1008310611508576305f5e10083816114fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b6127108310611553576127108381611549577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b6064831061159c5760648381611592577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a83106115ab576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006115ea6115e584611cfd565b611cd8565b90508281526020810184848401111561160257600080fd5b61160d848285611de5565b509392505050565b60008135905061162481612174565b92915050565b6000813590506116398161218b565b92915050565b60008135905061164e816121a2565b92915050565b600081519050611663816121a2565b92915050565b600082601f83011261167a57600080fd5b813561168a8482602086016115d7565b91505092915050565b6000813590506116a2816121b9565b92915050565b6000602082840312156116ba57600080fd5b60006116c884828501611615565b91505092915050565b600080604083850312156116e457600080fd5b60006116f285828601611615565b925050602061170385828601611615565b9150509250929050565b60008060006060848603121561172257600080fd5b600061173086828701611615565b935050602061174186828701611615565b925050604061175286828701611693565b9150509250925092565b6000806000806080858703121561177257600080fd5b600061178087828801611615565b945050602061179187828801611615565b93505060406117a287828801611693565b925050606085013567ffffffffffffffff8111156117bf57600080fd5b6117cb87828801611669565b91505092959194509250565b600080604083850312156117ea57600080fd5b60006117f885828601611615565b92505060206118098582860161162a565b9150509250929050565b6000806040838503121561182657600080fd5b600061183485828601611615565b925050602061184585828601611693565b9150509250929050565b60006020828403121561186157600080fd5b600061186f8482850161163f565b91505092915050565b60006020828403121561188a57600080fd5b600061189884828501611654565b91505092915050565b6000602082840312156118b357600080fd5b60006118c184828501611693565b91505092915050565b6118d381611d71565b82525050565b6118e281611d83565b82525050565b60006118f382611d2e565b6118fd8185611d44565b935061190d818560208601611df4565b61191681611ee8565b840191505092915050565b600061192c82611d39565b6119368185611d55565b9350611946818560208601611df4565b61194f81611ee8565b840191505092915050565b600061196582611d39565b61196f8185611d66565b935061197f818560208601611df4565b80840191505092915050565b6000611998602d83611d55565b91506119a382611ef9565b604082019050919050565b60006119bb603283611d55565b91506119c682611f48565b604082019050919050565b60006119de602583611d55565b91506119e982611f97565b604082019050919050565b6000611a01602483611d55565b9150611a0c82611fe6565b604082019050919050565b6000611a24601983611d55565b9150611a2f82612035565b602082019050919050565b6000611a47602983611d55565b9150611a528261205e565b604082019050919050565b6000611a6a601883611d55565b9150611a75826120ad565b602082019050919050565b6000611a8d602183611d55565b9150611a98826120d6565b604082019050919050565b6000611ab0603d83611d55565b9150611abb82612125565b604082019050919050565b611acf81611ddb565b82525050565b6000611ae1828561195a565b9150611aed828461195a565b91508190509392505050565b6000602082019050611b0e60008301846118ca565b92915050565b6000608082019050611b2960008301876118ca565b611b3660208301866118ca565b611b436040830185611ac6565b8181036060830152611b5581846118e8565b905095945050505050565b6000602082019050611b7560008301846118d9565b92915050565b60006020820190508181036000830152611b958184611921565b905092915050565b60006020820190508181036000830152611bb68161198b565b9050919050565b60006020820190508181036000830152611bd6816119ae565b9050919050565b60006020820190508181036000830152611bf6816119d1565b9050919050565b60006020820190508181036000830152611c16816119f4565b9050919050565b60006020820190508181036000830152611c3681611a17565b9050919050565b60006020820190508181036000830152611c5681611a3a565b9050919050565b60006020820190508181036000830152611c7681611a5d565b9050919050565b60006020820190508181036000830152611c9681611a80565b9050919050565b60006020820190508181036000830152611cb681611aa3565b9050919050565b6000602082019050611cd26000830184611ac6565b92915050565b6000611ce2611cf3565b9050611cee8282611e59565b919050565b6000604051905090565b600067ffffffffffffffff821115611d1857611d17611eb9565b5b611d2182611ee8565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611d7c82611dbb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611e12578082015181840152602081019050611df7565b83811115611e21576000848401525b50505050565b60006002820490506001821680611e3f57607f821691505b60208210811415611e5357611e52611e8a565b5b50919050565b611e6282611ee8565b810181811067ffffffffffffffff82111715611e8157611e80611eb9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b61217d81611d71565b811461218857600080fd5b50565b61219481611d83565b811461219f57600080fd5b50565b6121ab81611d8f565b81146121b657600080fd5b50565b6121c281611ddb565b81146121cd57600080fd5b5056fea2646970667358221220998cf24b301a41d471bd72d75d9c32206af7dbe60a04b7ad13a9d50b8f3af7e564736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1C3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11DA JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11E6 JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x137D JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x118E JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1178 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1189 JUMPI PUSH2 0x118E JUMP JUMPDEST PUSH2 0x1109 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11BB DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15B4 JUMP JUMPDEST ISZERO PUSH2 0x1370 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1230 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1252 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x129D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129A SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1320 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130F SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1375 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1401 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x13F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1464 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x145A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x14B9 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x14AF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1508 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x14FE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1553 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1549 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x159C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1592 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x15AB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EA PUSH2 0x15E5 DUP5 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x1CD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160D DUP5 DUP3 DUP6 PUSH2 0x1DE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1624 DUP2 PUSH2 0x2174 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x218B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164E DUP2 PUSH2 0x21A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1663 DUP2 PUSH2 0x21A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x168A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A2 DUP2 PUSH2 0x21B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16C8 DUP5 DUP3 DUP6 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1703 DUP6 DUP3 DUP7 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1730 DUP7 DUP3 DUP8 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1741 DUP7 DUP3 DUP8 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1752 DUP7 DUP3 DUP8 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1780 DUP8 DUP3 DUP9 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1791 DUP8 DUP3 DUP9 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x17A2 DUP8 DUP3 DUP9 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17CB DUP8 DUP3 DUP9 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17F8 DUP6 DUP3 DUP7 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1809 DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1834 DUP6 DUP3 DUP7 ADD PUSH2 0x1615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1845 DUP6 DUP3 DUP7 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x186F DUP5 DUP3 DUP6 ADD PUSH2 0x163F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1898 DUP5 DUP3 DUP6 ADD PUSH2 0x1654 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18C1 DUP5 DUP3 DUP6 ADD PUSH2 0x1693 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D3 DUP2 PUSH2 0x1D71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18E2 DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP3 PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x18FD DUP2 DUP6 PUSH2 0x1D44 JUMP JUMPDEST SWAP4 POP PUSH2 0x190D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF4 JUMP JUMPDEST PUSH2 0x1916 DUP2 PUSH2 0x1EE8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192C DUP3 PUSH2 0x1D39 JUMP JUMPDEST PUSH2 0x1936 DUP2 DUP6 PUSH2 0x1D55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1946 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF4 JUMP JUMPDEST PUSH2 0x194F DUP2 PUSH2 0x1EE8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1965 DUP3 PUSH2 0x1D39 JUMP JUMPDEST PUSH2 0x196F DUP2 DUP6 PUSH2 0x1D66 JUMP JUMPDEST SWAP4 POP PUSH2 0x197F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1998 PUSH1 0x2D DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A3 DUP3 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BB PUSH1 0x32 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C6 DUP3 PUSH2 0x1F48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DE PUSH1 0x25 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP3 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A01 PUSH1 0x24 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A0C DUP3 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A24 PUSH1 0x19 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2F DUP3 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A47 PUSH1 0x29 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A52 DUP3 PUSH2 0x205E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH1 0x18 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A75 DUP3 PUSH2 0x20AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8D PUSH1 0x21 DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A98 DUP3 PUSH2 0x20D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB0 PUSH1 0x3D DUP4 PUSH2 0x1D55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACF DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE1 DUP3 DUP6 PUSH2 0x195A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AED DUP3 DUP5 PUSH2 0x195A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B29 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x1B36 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18CA JUMP JUMPDEST PUSH2 0x1B43 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AC6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1B55 DUP2 DUP5 PUSH2 0x18E8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B95 DUP2 DUP5 PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BD6 DUP2 PUSH2 0x19AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x19D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C16 DUP2 PUSH2 0x19F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C36 DUP2 PUSH2 0x1A17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C56 DUP2 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1A5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C96 DUP2 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CB6 DUP2 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE2 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CEE DUP3 DUP3 PUSH2 0x1E59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D18 JUMPI PUSH2 0x1D17 PUSH2 0x1EB9 JUMP JUMPDEST JUMPDEST PUSH2 0x1D21 DUP3 PUSH2 0x1EE8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7C DUP3 PUSH2 0x1DBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E12 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E21 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E3F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x1E8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E62 DUP3 PUSH2 0x1EE8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E81 JUMPI PUSH2 0x1E80 PUSH2 0x1EB9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x217D DUP2 PUSH2 0x1D71 JUMP JUMPDEST DUP2 EQ PUSH2 0x2188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2194 DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP2 EQ PUSH2 0x219F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21AB DUP2 PUSH2 0x1D8F JUMP JUMPDEST DUP2 EQ PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21C2 DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP2 EQ PUSH2 0x21CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 DUP13 CALLCODE 0x4B ADDRESS BYTE COINBASE 0xD4 PUSH18 0xBD72D75D9C32206AF7DBE60A04B7AD13A9D5 SIGNEXTEND DUP16 GASPRICE 0xF7 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"628:16377:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3468:406;;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:16:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:5:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:13:-;693:7;719:10;712:17;;640:96;:::o;12572:171:5:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;447:696:15:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;;;;;;;;;;;;1077:1;1068:5;:10;1064:21;;;1080:5;;1064:21;820:280;;;1120:6;1113:13;;;;;447:696;;;:::o;7120:126:5:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;10139:916:18:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;;;;;;;;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;;;;;;;;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;;;;;;;;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;;;;;;;;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;;;;;;;;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;;;;;;;;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;1412:320:12:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:343:22:-;;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:139::-;;440:6;427:20;418:29;;456:33;483:5;456:33;:::i;:::-;408:87;;;;:::o;501:133::-;;582:6;569:20;560:29;;598:30;622:5;598:30;:::i;:::-;550:84;;;;:::o;640:137::-;;723:6;710:20;701:29;;739:32;765:5;739:32;:::i;:::-;691:86;;;;:::o;783:141::-;;870:6;864:13;855:22;;886:32;912:5;886:32;:::i;:::-;845:79;;;;:::o;943:271::-;;1047:3;1040:4;1032:6;1028:17;1024:27;1014:2;;1065:1;1062;1055:12;1014:2;1105:6;1092:20;1130:78;1204:3;1196:6;1189:4;1181:6;1177:17;1130:78;:::i;:::-;1121:87;;1004:210;;;;;:::o;1220:139::-;;1304:6;1291:20;1282:29;;1320:33;1347:5;1320:33;:::i;:::-;1272:87;;;;:::o;1365:262::-;;1473:2;1461:9;1452:7;1448:23;1444:32;1441:2;;;1489:1;1486;1479:12;1441:2;1532:1;1557:53;1602:7;1593:6;1582:9;1578:22;1557:53;:::i;:::-;1547:63;;1503:117;1431:196;;;;:::o;1633:407::-;;;1758:2;1746:9;1737:7;1733:23;1729:32;1726:2;;;1774:1;1771;1764:12;1726:2;1817:1;1842:53;1887:7;1878:6;1867:9;1863:22;1842:53;:::i;:::-;1832:63;;1788:117;1944:2;1970:53;2015:7;2006:6;1995:9;1991:22;1970:53;:::i;:::-;1960:63;;1915:118;1716:324;;;;;:::o;2046:552::-;;;;2188:2;2176:9;2167:7;2163:23;2159:32;2156:2;;;2204:1;2201;2194:12;2156:2;2247:1;2272:53;2317:7;2308:6;2297:9;2293:22;2272:53;:::i;:::-;2262:63;;2218:117;2374:2;2400:53;2445:7;2436:6;2425:9;2421:22;2400:53;:::i;:::-;2390:63;;2345:118;2502:2;2528:53;2573:7;2564:6;2553:9;2549:22;2528:53;:::i;:::-;2518:63;;2473:118;2146:452;;;;;:::o;2604:809::-;;;;;2772:3;2760:9;2751:7;2747:23;2743:33;2740:2;;;2789:1;2786;2779:12;2740:2;2832:1;2857:53;2902:7;2893:6;2882:9;2878:22;2857:53;:::i;:::-;2847:63;;2803:117;2959:2;2985:53;3030:7;3021:6;3010:9;3006:22;2985:53;:::i;:::-;2975:63;;2930:118;3087:2;3113:53;3158:7;3149:6;3138:9;3134:22;3113:53;:::i;:::-;3103:63;;3058:118;3243:2;3232:9;3228:18;3215:32;3274:18;3266:6;3263:30;3260:2;;;3306:1;3303;3296:12;3260:2;3334:62;3388:7;3379:6;3368:9;3364:22;3334:62;:::i;:::-;3324:72;;3186:220;2730:683;;;;;;;:::o;3419:401::-;;;3541:2;3529:9;3520:7;3516:23;3512:32;3509:2;;;3557:1;3554;3547:12;3509:2;3600:1;3625:53;3670:7;3661:6;3650:9;3646:22;3625:53;:::i;:::-;3615:63;;3571:117;3727:2;3753:50;3795:7;3786:6;3775:9;3771:22;3753:50;:::i;:::-;3743:60;;3698:115;3499:321;;;;;:::o;3826:407::-;;;3951:2;3939:9;3930:7;3926:23;3922:32;3919:2;;;3967:1;3964;3957:12;3919:2;4010:1;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;:::i;:::-;4025:63;;3981:117;4137:2;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4108:118;3909:324;;;;;:::o;4239:260::-;;4346:2;4334:9;4325:7;4321:23;4317:32;4314:2;;;4362:1;4359;4352:12;4314:2;4405:1;4430:52;4474:7;4465:6;4454:9;4450:22;4430:52;:::i;:::-;4420:62;;4376:116;4304:195;;;;:::o;4505:282::-;;4623:2;4611:9;4602:7;4598:23;4594:32;4591:2;;;4639:1;4636;4629:12;4591:2;4682:1;4707:63;4762:7;4753:6;4742:9;4738:22;4707:63;:::i;:::-;4697:73;;4653:127;4581:206;;;;:::o;4793:262::-;;4901:2;4889:9;4880:7;4876:23;4872:32;4869:2;;;4917:1;4914;4907:12;4869:2;4960:1;4985:53;5030:7;5021:6;5010:9;5006:22;4985:53;:::i;:::-;4975:63;;4931:117;4859:196;;;;:::o;5061:118::-;5148:24;5166:5;5148:24;:::i;:::-;5143:3;5136:37;5126:53;;:::o;5185:109::-;5266:21;5281:5;5266:21;:::i;:::-;5261:3;5254:34;5244:50;;:::o;5300:360::-;;5414:38;5446:5;5414:38;:::i;:::-;5468:70;5531:6;5526:3;5468:70;:::i;:::-;5461:77;;5547:52;5592:6;5587:3;5580:4;5573:5;5569:16;5547:52;:::i;:::-;5624:29;5646:6;5624:29;:::i;:::-;5619:3;5615:39;5608:46;;5390:270;;;;;:::o;5666:364::-;;5782:39;5815:5;5782:39;:::i;:::-;5837:71;5901:6;5896:3;5837:71;:::i;:::-;5830:78;;5917:52;5962:6;5957:3;5950:4;5943:5;5939:16;5917:52;:::i;:::-;5994:29;6016:6;5994:29;:::i;:::-;5989:3;5985:39;5978:46;;5758:272;;;;;:::o;6036:377::-;;6170:39;6203:5;6170:39;:::i;:::-;6225:89;6307:6;6302:3;6225:89;:::i;:::-;6218:96;;6323:52;6368:6;6363:3;6356:4;6349:5;6345:16;6323:52;:::i;:::-;6400:6;6395:3;6391:16;6384:23;;6146:267;;;;;:::o;6419:366::-;;6582:67;6646:2;6641:3;6582:67;:::i;:::-;6575:74;;6658:93;6747:3;6658:93;:::i;:::-;6776:2;6771:3;6767:12;6760:19;;6565:220;;;:::o;6791:366::-;;6954:67;7018:2;7013:3;6954:67;:::i;:::-;6947:74;;7030:93;7119:3;7030:93;:::i;:::-;7148:2;7143:3;7139:12;7132:19;;6937:220;;;:::o;7163:366::-;;7326:67;7390:2;7385:3;7326:67;:::i;:::-;7319:74;;7402:93;7491:3;7402:93;:::i;:::-;7520:2;7515:3;7511:12;7504:19;;7309:220;;;:::o;7535:366::-;;7698:67;7762:2;7757:3;7698:67;:::i;:::-;7691:74;;7774:93;7863:3;7774:93;:::i;:::-;7892:2;7887:3;7883:12;7876:19;;7681:220;;;:::o;7907:366::-;;8070:67;8134:2;8129:3;8070:67;:::i;:::-;8063:74;;8146:93;8235:3;8146:93;:::i;:::-;8264:2;8259:3;8255:12;8248:19;;8053:220;;;:::o;8279:366::-;;8442:67;8506:2;8501:3;8442:67;:::i;:::-;8435:74;;8518:93;8607:3;8518:93;:::i;:::-;8636:2;8631:3;8627:12;8620:19;;8425:220;;;:::o;8651:366::-;;8814:67;8878:2;8873:3;8814:67;:::i;:::-;8807:74;;8890:93;8979:3;8890:93;:::i;:::-;9008:2;9003:3;8999:12;8992:19;;8797:220;;;:::o;9023:366::-;;9186:67;9250:2;9245:3;9186:67;:::i;:::-;9179:74;;9262:93;9351:3;9262:93;:::i;:::-;9380:2;9375:3;9371:12;9364:19;;9169:220;;;:::o;9395:366::-;;9558:67;9622:2;9617:3;9558:67;:::i;:::-;9551:74;;9634:93;9723:3;9634:93;:::i;:::-;9752:2;9747:3;9743:12;9736:19;;9541:220;;;:::o;9767:118::-;9854:24;9872:5;9854:24;:::i;:::-;9849:3;9842:37;9832:53;;:::o;9891:435::-;;10093:95;10184:3;10175:6;10093:95;:::i;:::-;10086:102;;10205:95;10296:3;10287:6;10205:95;:::i;:::-;10198:102;;10317:3;10310:10;;10075:251;;;;;:::o;10332:222::-;;10463:2;10452:9;10448:18;10440:26;;10476:71;10544:1;10533:9;10529:17;10520:6;10476:71;:::i;:::-;10430:124;;;;:::o;10560:640::-;;10793:3;10782:9;10778:19;10770:27;;10807:71;10875:1;10864:9;10860:17;10851:6;10807:71;:::i;:::-;10888:72;10956:2;10945:9;10941:18;10932:6;10888:72;:::i;:::-;10970;11038:2;11027:9;11023:18;11014:6;10970:72;:::i;:::-;11089:9;11083:4;11079:20;11074:2;11063:9;11059:18;11052:48;11117:76;11188:4;11179:6;11117:76;:::i;:::-;11109:84;;10760:440;;;;;;;:::o;11206:210::-;;11331:2;11320:9;11316:18;11308:26;;11344:65;11406:1;11395:9;11391:17;11382:6;11344:65;:::i;:::-;11298:118;;;;:::o;11422:313::-;;11573:2;11562:9;11558:18;11550:26;;11622:9;11616:4;11612:20;11608:1;11597:9;11593:17;11586:47;11650:78;11723:4;11714:6;11650:78;:::i;:::-;11642:86;;11540:195;;;;:::o;11741:419::-;;11945:2;11934:9;11930:18;11922:26;;11994:9;11988:4;11984:20;11980:1;11969:9;11965:17;11958:47;12022:131;12148:4;12022:131;:::i;:::-;12014:139;;11912:248;;;:::o;12166:419::-;;12370:2;12359:9;12355:18;12347:26;;12419:9;12413:4;12409:20;12405:1;12394:9;12390:17;12383:47;12447:131;12573:4;12447:131;:::i;:::-;12439:139;;12337:248;;;:::o;12591:419::-;;12795:2;12784:9;12780:18;12772:26;;12844:9;12838:4;12834:20;12830:1;12819:9;12815:17;12808:47;12872:131;12998:4;12872:131;:::i;:::-;12864:139;;12762:248;;;:::o;13016:419::-;;13220:2;13209:9;13205:18;13197:26;;13269:9;13263:4;13259:20;13255:1;13244:9;13240:17;13233:47;13297:131;13423:4;13297:131;:::i;:::-;13289:139;;13187:248;;;:::o;13441:419::-;;13645:2;13634:9;13630:18;13622:26;;13694:9;13688:4;13684:20;13680:1;13669:9;13665:17;13658:47;13722:131;13848:4;13722:131;:::i;:::-;13714:139;;13612:248;;;:::o;13866:419::-;;14070:2;14059:9;14055:18;14047:26;;14119:9;14113:4;14109:20;14105:1;14094:9;14090:17;14083:47;14147:131;14273:4;14147:131;:::i;:::-;14139:139;;14037:248;;;:::o;14291:419::-;;14495:2;14484:9;14480:18;14472:26;;14544:9;14538:4;14534:20;14530:1;14519:9;14515:17;14508:47;14572:131;14698:4;14572:131;:::i;:::-;14564:139;;14462:248;;;:::o;14716:419::-;;14920:2;14909:9;14905:18;14897:26;;14969:9;14963:4;14959:20;14955:1;14944:9;14940:17;14933:47;14997:131;15123:4;14997:131;:::i;:::-;14989:139;;14887:248;;;:::o;15141:419::-;;15345:2;15334:9;15330:18;15322:26;;15394:9;15388:4;15384:20;15380:1;15369:9;15365:17;15358:47;15422:131;15548:4;15422:131;:::i;:::-;15414:139;;15312:248;;;:::o;15566:222::-;;15697:2;15686:9;15682:18;15674:26;;15710:71;15778:1;15767:9;15763:17;15754:6;15710:71;:::i;:::-;15664:124;;;;:::o;15794:129::-;;15855:20;;:::i;:::-;15845:30;;15884:33;15912:4;15904:6;15884:33;:::i;:::-;15835:88;;;:::o;15929:75::-;;15995:2;15989:9;15979:19;;15969:35;:::o;16010:307::-;;16161:18;16153:6;16150:30;16147:2;;;16183:18;;:::i;:::-;16147:2;16221:29;16243:6;16221:29;:::i;:::-;16213:37;;16305:4;16299;16295:15;16287:23;;16076:241;;;:::o;16323:98::-;;16408:5;16402:12;16392:22;;16381:40;;;:::o;16427:99::-;;16513:5;16507:12;16497:22;;16486:40;;;:::o;16532:168::-;;16649:6;16644:3;16637:19;16689:4;16684:3;16680:14;16665:29;;16627:73;;;;:::o;16706:169::-;;16824:6;16819:3;16812:19;16864:4;16859:3;16855:14;16840:29;;16802:73;;;;:::o;16881:148::-;;17020:3;17005:18;;16995:34;;;;:::o;17035:96::-;;17101:24;17119:5;17101:24;:::i;:::-;17090:35;;17080:51;;;:::o;17137:90::-;;17214:5;17207:13;17200:21;17189:32;;17179:48;;;:::o;17233:149::-;;17309:66;17302:5;17298:78;17287:89;;17277:105;;;:::o;17388:126::-;;17465:42;17458:5;17454:54;17443:65;;17433:81;;;:::o;17520:77::-;;17586:5;17575:16;;17565:32;;;:::o;17603:154::-;17687:6;17682:3;17677;17664:30;17749:1;17740:6;17735:3;17731:16;17724:27;17654:103;;;:::o;17763:307::-;17831:1;17841:113;17855:6;17852:1;17849:13;17841:113;;;17940:1;17935:3;17931:11;17925:18;17921:1;17916:3;17912:11;17905:39;17877:2;17874:1;17870:10;17865:15;;17841:113;;;17972:6;17969:1;17966:13;17963:2;;;18052:1;18043:6;18038:3;18034:16;18027:27;17963:2;17812:258;;;;:::o;18076:320::-;;18157:1;18151:4;18147:12;18137:22;;18204:1;18198:4;18194:12;18225:18;18215:2;;18281:4;18273:6;18269:17;18259:27;;18215:2;18343;18335:6;18332:14;18312:18;18309:38;18306:2;;;18362:18;;:::i;:::-;18306:2;18127:269;;;;:::o;18402:281::-;18485:27;18507:4;18485:27;:::i;:::-;18477:6;18473:40;18615:6;18603:10;18600:22;18579:18;18567:10;18564:34;18561:62;18558:2;;;18626:18;;:::i;:::-;18558:2;18666:10;18662:2;18655:22;18445:238;;;:::o;18689:180::-;18737:77;18734:1;18727:88;18834:4;18831:1;18824:15;18858:4;18855:1;18848:15;18875:180;18923:77;18920:1;18913:88;19020:4;19017:1;19010:15;19044:4;19041:1;19034:15;19061:102;;19153:2;19149:7;19144:2;19137:5;19133:14;19129:28;19119:38;;19109:54;;;:::o;19169:232::-;19309:34;19305:1;19297:6;19293:14;19286:58;19378:15;19373:2;19365:6;19361:15;19354:40;19275:126;:::o;19407:237::-;19547:34;19543:1;19535:6;19531:14;19524:58;19616:20;19611:2;19603:6;19599:15;19592:45;19513:131;:::o;19650:224::-;19790:34;19786:1;19778:6;19774:14;19767:58;19859:7;19854:2;19846:6;19842:15;19835:32;19756:118;:::o;19880:223::-;20020:34;20016:1;20008:6;20004:14;19997:58;20089:6;20084:2;20076:6;20072:15;20065:31;19986:117;:::o;20109:175::-;20249:27;20245:1;20237:6;20233:14;20226:51;20215:69;:::o;20290:228::-;20430:34;20426:1;20418:6;20414:14;20407:58;20499:11;20494:2;20486:6;20482:15;20475:36;20396:122;:::o;20524:174::-;20664:26;20660:1;20652:6;20648:14;20641:50;20630:68;:::o;20704:220::-;20844:34;20840:1;20832:6;20828:14;20821:58;20913:3;20908:2;20900:6;20896:15;20889:28;20810:114;:::o;20930:248::-;21070:34;21066:1;21058:6;21054:14;21047:58;21139:31;21134:2;21126:6;21122:15;21115:56;21036:142;:::o;21184:122::-;21257:24;21275:5;21257:24;:::i;:::-;21250:5;21247:35;21237:2;;21296:1;21293;21286:12;21237:2;21227:79;:::o;21312:116::-;21382:21;21397:5;21382:21;:::i;:::-;21375:5;21372:32;21362:2;;21418:1;21415;21408:12;21362:2;21352:76;:::o;21434:120::-;21506:23;21523:5;21506:23;:::i;:::-;21499:5;21496:34;21486:2;;21544:1;21541;21534:12;21486:2;21476:78;:::o;21560:122::-;21633:24;21651:5;21633:24;:::i;:::-;21626:5;21623:35;21613:2;;21672:1;21669;21662:12;21613:2;21603:79;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol":{"ERC721Royalty":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","royaltyInfo(uint256,uint256)":"2a55205a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC721 with the ERC2981 NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {ERC2981-_setDefaultRoyalty}, and/or individually for specific token ids via {ERC2981-_setTokenRoyalty}. The latter takes precedence over the first. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol\":\"ERC721Royalty\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol\":{\"keccak256\":\"0x93d24eea4e6ddbed53ef161567ae62bfd0c3aebb7b48f37e4dbeb7a937108866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2ed35e16e296fcc3d2311d584e5006ddc188d7d76198e8e750193750b65f9c4\",\"dweb:/ipfs/QmYzLcEgZ4TSBJNPBxhq9BdLQC89w3zyWH88rw3DBy4MxY\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/common/ERC2981.sol":{"ERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220558dfaa51125d8a941b857b034ef1e2b86cd2e1c27c6c4e8fee230424e4dfcdf64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE DUP14 STATICCALL 0xA5 GT 0x25 0xD8 0xA9 COINBASE 0xB8 JUMPI 0xB0 CALLVALUE 0xEF 0x1E 0x2B DUP7 0xCD 0x2E SHR 0x27 0xC6 0xC4 0xE8 INVALID 0xE2 ADDRESS TIMESTAMP 0x4E 0x4D 0xFC 0xDF PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"194:9169:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220558dfaa51125d8a941b857b034ef1e2b86cd2e1c27c6c4e8fee230424e4dfcdf64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE DUP14 STATICCALL 0xA5 GT 0x25 0xD8 0xA9 COINBASE 0xB8 JUMPI 0xB0 CALLVALUE 0xEF 0x1E 0x2B DUP7 0xCD 0x2E SHR 0x27 0xC6 0xC4 0xE8 INVALID 0xE2 ADDRESS TIMESTAMP 0x4E 0x4D 0xFC 0xDF PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"194:9169:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7ab9631425d9ad99cae1f5e6434a30d6ffcac09b211e47ed4128660ae7abc6f64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xAB SWAP7 BALANCE TIMESTAMP 0x5D SWAP11 0xD9 SWAP13 0xAE 0x1F 0x5E PUSH5 0x34A30D6FFC 0xAC MULMOD 0xB2 GT 0xE4 PUSH31 0xD4128660AE7ABC6F64736F6C63430008010033000000000000000000000000 ","sourceMap":"424:971:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f7ab9631425d9ad99cae1f5e6434a30d6ffcac09b211e47ed4128660ae7abc6f64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xAB SWAP7 BALANCE TIMESTAMP 0x5D SWAP11 0xD9 SWAP13 0xAE 0x1F 0x5E PUSH5 0x34A30D6FFC 0xAC MULMOD 0xB2 GT 0xE4 PUSH31 0xD4128660AE7ABC6F64736F6C63430008010033000000000000000000000000 ","sourceMap":"424:971:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e525e8ac7b89b924c5077eb6e4ff67347fa3ce5a8f1bb4be043fce057e92d47364736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0x25 0xE8 0xAC PUSH28 0x89B924C5077EB6E4FF67347FA3CE5A8F1BB4BE043FCE057E92D47364 PUSH20 0x6F6C634300080100330000000000000000000000 ","sourceMap":"220:2559:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e525e8ac7b89b924c5077eb6e4ff67347fa3ce5a8f1bb4be043fce057e92d47364736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0x25 0xE8 0xAC PUSH28 0x89B924C5077EB6E4FF67347FA3CE5A8F1BB4BE043FCE057E92D47364 PUSH20 0x6F6C634300080100330000000000000000000000 ","sourceMap":"220:2559:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220710afb68da34d63332ec15fefe93483f548390fa40406d957f699710a26e641264736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xAFB68DA34D63332EC15FEFE93483F548390 STATICCALL BLOCKHASH BLOCKHASH PUSH14 0x957F699710A26E641264736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ","sourceMap":"202:12582:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220710afb68da34d63332ec15fefe93483f548390fa40406d957f699710a26e641264736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xAFB68DA34D63332EC15FEFE93483F548390 STATICCALL BLOCKHASH BLOCKHASH PUSH14 0x957F699710A26E641264736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ","sourceMap":"202:12582:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203bf8a08a3248c1ef8b3719ccde04196c3451ce114b7c735c80490b8b689e1a1264736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xF8 LOG0 DUP11 ORIGIN 0x48 0xC1 0xEF DUP12 CALLDATACOPY NOT 0xCC 0xDE DIV NOT PUSH13 0x3451CE114B7C735C80490B8B68 SWAP15 BYTE SLT PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"482:6210:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203bf8a08a3248c1ef8b3719ccde04196c3451ce114b7c735c80490b8b689e1a1264736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xF8 LOG0 DUP11 ORIGIN 0x48 0xC1 0xEF DUP12 CALLDATACOPY NOT 0xCC 0xDE DIV NOT PUSH13 0x3451CE114B7C735C80490B8B68 SWAP15 BYTE SLT PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"482:6210:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9960b819024107cd94b9855c8ab5f83678a48de411a8f14d6136dc27b37182a64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SWAP7 SIGNEXTEND DUP2 SWAP1 0x24 LT PUSH29 0xD94B9855C8AB5F83678A48DE411A8F14D6136DC27B37182A64736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ","sourceMap":"215:1047:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9960b819024107cd94b9855c8ab5f83678a48de411a8f14d6136dc27b37182a64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 SWAP7 SIGNEXTEND DUP2 SWAP1 0x24 LT PUSH29 0xD94B9855C8AB5F83678A48DE411A8F14D6136DC27B37182A64736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ","sourceMap":"215:1047:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/OathToMeliorism.sol":{"OathToMeliorism":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collectionInfoURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_collectionInfoURI","type":"string"}],"name":"setContractURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:22","statements":[{"body":{"nodeType":"YulBlock","src":"58:269:22","statements":[{"nodeType":"YulAssignment","src":"68:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"82:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"88:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"78:3:22"},"nodeType":"YulFunctionCall","src":"78:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"68:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"99:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"129:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"125:3:22"},"nodeType":"YulFunctionCall","src":"125:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"103:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"176:51:22","statements":[{"nodeType":"YulAssignment","src":"190:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"204:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"212:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"200:3:22"},"nodeType":"YulFunctionCall","src":"200:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"190:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"156:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"149:6:22"},"nodeType":"YulFunctionCall","src":"149:26:22"},"nodeType":"YulIf","src":"146:2:22"},{"body":{"nodeType":"YulBlock","src":"279:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"293:16:22"},"nodeType":"YulFunctionCall","src":"293:18:22"},"nodeType":"YulExpressionStatement","src":"293:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"243:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"266:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"274:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"263:2:22"},"nodeType":"YulFunctionCall","src":"263:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"240:2:22"},"nodeType":"YulFunctionCall","src":"240:38:22"},"nodeType":"YulIf","src":"237:2:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"51:6:22","type":""}],"src":"7:320:22"},{"body":{"nodeType":"YulBlock","src":"361:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"378:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"381:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"371:6:22"},"nodeType":"YulFunctionCall","src":"371:88:22"},"nodeType":"YulExpressionStatement","src":"371:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"475:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"478:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"468:6:22"},"nodeType":"YulFunctionCall","src":"468:15:22"},"nodeType":"YulExpressionStatement","src":"468:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"499:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"492:6:22"},"nodeType":"YulFunctionCall","src":"492:15:22"},"nodeType":"YulExpressionStatement","src":"492:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"333:180:22"}]},"contents":"{\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600f81526020017f4f617468546f4d656c696f7269736d00000000000000000000000000000000008152506040518060400160405280600581526020017f4e4f46554e000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000ea565b508060019080519060200190620000af929190620000ea565b5050506040518060a00160405280606d815260200162002f23606d913960089080519060200190620000e3929190620000ea565b50620001ff565b828054620000f8906200019a565b90600052602060002090601f0160209004810192826200011c576000855562000168565b82601f106200013757805160ff191683800117855562000168565b8280016001018555821562000168579182015b82811115620001675782518255916020019190600101906200014a565b5b5090506200017791906200017b565b5090565b5b80821115620001965760008160009055506001016200017c565b5090565b60006002820490506001821680620001b357607f821691505b60208210811415620001ca57620001c9620001d0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b612d14806200020f6000396000f3fe6080604052600436106100fe5760003560e01c8063938e3d7b11610095578063b88d4fde11610064578063b88d4fde14610345578063c87b56dd1461036e578063d0def521146103ab578063e8a3d485146103db578063e985e9c514610406576100fe565b8063938e3d7b1461029d57806395d89b41146102c6578063a22cb465146102f1578063b00a29971461031a576100fe565b806323b872dd116100d157806323b872dd146101d157806342842e0e146101fa5780636352211e1461022357806370a0823114610260576100fe565b806301ffc9a71461010357806306fdde0314610140578063081812fc1461016b578063095ea7b3146101a8575b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190612181565b610443565b604051610137919061253c565b60405180910390f35b34801561014c57600080fd5b506101556104a4565b6040516101629190612557565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190612214565b610536565b60405161019f91906124d5565b60405180910390f35b3480156101b457600080fd5b506101cf60048036038101906101ca9190612145565b61057c565b005b3480156101dd57600080fd5b506101f860048036038101906101f39190611feb565b610694565b005b34801561020657600080fd5b50610221600480360381019061021c9190611feb565b6106f4565b005b34801561022f57600080fd5b5061024a60048036038101906102459190612214565b610714565b60405161025791906124d5565b60405180910390f35b34801561026c57600080fd5b5061028760048036038101906102829190611f86565b61079b565b60405161029491906126f9565b60405180910390f35b3480156102a957600080fd5b506102c460048036038101906102bf91906121d3565b610853565b005b3480156102d257600080fd5b506102db61086d565b6040516102e89190612557565b60405180910390f35b3480156102fd57600080fd5b50610318600480360381019061031391906120b5565b6108ff565b005b34801561032657600080fd5b5061032f610915565b60405161033c9190612557565b60405180910390f35b34801561035157600080fd5b5061036c6004803603810190610367919061203a565b6109a3565b005b34801561037a57600080fd5b5061039560048036038101906103909190612214565b610a05565b6040516103a29190612557565b60405180910390f35b6103c560048036038101906103c091906120f1565b610b18565b6040516103d291906126f9565b60405180910390f35b3480156103e757600080fd5b506103f0610b50565b6040516103fd9190612557565b60405180910390f35b34801561041257600080fd5b5061042d60048036038101906104289190611faf565b610be2565b60405161043a919061253c565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061049d575061049c82610c76565b5b9050919050565b6060600080546104b390612894565b80601f01602080910402602001604051908101604052809291908181526020018280546104df90612894565b801561052c5780601f106105015761010080835404028352916020019161052c565b820191906000526020600020905b81548152906001019060200180831161050f57829003601f168201915b5050505050905090565b600061054182610d58565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061058782610714565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ef906126b9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610617610da3565b73ffffffffffffffffffffffffffffffffffffffff161480610646575061064581610640610da3565b610be2565b5b610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c906126d9565b60405180910390fd5b61068f8383610dab565b505050565b6106a561069f610da3565b82610e64565b6106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90612579565b60405180910390fd5b6106ef838383610ef9565b505050565b61070f838383604051806020016040528060008152506109a3565b505050565b600080610720836111f3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078990612699565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561080c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080390612639565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8060089080519060200190610869929190611daa565b5050565b60606001805461087c90612894565b80601f01602080910402602001604051908101604052809291908181526020018280546108a890612894565b80156108f55780601f106108ca576101008083540402835291602001916108f5565b820191906000526020600020905b8154815290600101906020018083116108d857829003601f168201915b5050505050905090565b61091161090a610da3565b8383611230565b5050565b6008805461092290612894565b80601f016020809104026020016040519081016040528092919081815260200182805461094e90612894565b801561099b5780601f106109705761010080835404028352916020019161099b565b820191906000526020600020905b81548152906001019060200180831161097e57829003601f168201915b505050505081565b6109b46109ae610da3565b83610e64565b6109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea90612579565b60405180910390fd5b6109ff8484848461139d565b50505050565b6060610a1082610d58565b6000600660008481526020019081526020016000208054610a3090612894565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5c90612894565b8015610aa95780601f10610a7e57610100808354040283529160200191610aa9565b820191906000526020600020905b815481529060010190602001808311610a8c57829003601f168201915b505050505090506000610aba6113f9565b9050600081511415610ad0578192505050610b13565b600082511115610b05578082604051602001610aed9291906124b1565b60405160208183030381529060405292505050610b13565b610b0e84611410565b925050505b919050565b6000610b246007611478565b6000610b30600761148e565b9050610b3c848261149c565b610b4681846114ba565b8091505092915050565b606060088054610b5f90612894565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8b90612894565b8015610bd85780601f10610bad57610100808354040283529160200191610bd8565b820191906000526020600020905b815481529060010190602001808311610bbb57829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d4157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610d515750610d5082611565565b5b9050919050565b610d61816115cf565b610da0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9790612699565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610e1e83610714565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e7083610714565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610eb25750610eb18185610be2565b5b80610ef057508373ffffffffffffffffffffffffffffffffffffffff16610ed884610536565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610f1982610714565b73ffffffffffffffffffffffffffffffffffffffff1614610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f66906125b9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd6906125f9565b60405180910390fd5b610fec8383836001611610565b8273ffffffffffffffffffffffffffffffffffffffff1661100c82610714565b73ffffffffffffffffffffffffffffffffffffffff1614611062576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611059906125b9565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46111ee8383836001611616565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561129f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129690612619565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611390919061253c565b60405180910390a3505050565b6113a8848484610ef9565b6113b48484848461161c565b6113f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ea90612599565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606061141b82610d58565b60006114256113f9565b905060008151116114455760405180602001604052806000815250611470565b8061144f846117b3565b6040516020016114609291906124b1565b6040516020818303038152906040525b915050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6114b68282604051806020016040528060008152506118d7565b5050565b6114c3826115cf565b611502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f990612659565b60405180910390fd5b80600660008481526020019081526020016000209080519060200190611529929190611daa565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161155991906126f9565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166115f1836111f3565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b600061163d8473ffffffffffffffffffffffffffffffffffffffff16611932565b156117a6578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611666610da3565b8786866040518563ffffffff1660e01b815260040161168894939291906124f0565b602060405180830381600087803b1580156116a257600080fd5b505af19250505080156116d357506040513d601f19601f820116820180604052508101906116d091906121aa565b60015b611756573d8060008114611703576040519150601f19603f3d011682016040523d82523d6000602084013e611708565b606091505b5060008151141561174e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174590612599565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506117ab565b600190505b949350505050565b6060600060016117c284611955565b01905060008167ffffffffffffffff811115611807577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156118395781602001600182028036833780820191505090505b509050600082602001820190505b6001156118cc578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156118c7576118cc565b611847565b819350505050919050565b6118e18383611b8c565b6118ee600084848461161c565b61192d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192490612599565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119d9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a3c576d04ee2d6d415b85acef81000000008381611a32577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc100008310611a9157662386f26fc100008381611a87577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e1008310611ae0576305f5e1008381611ad6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b6127108310611b2b576127108381611b21577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b60648310611b745760648381611b6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a8310611b83576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf390612679565b60405180910390fd5b611c05816115cf565b15611c45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3c906125d9565b60405180910390fd5b611c53600083836001611610565b611c5c816115cf565b15611c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c93906125d9565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611da6600083836001611616565b5050565b828054611db690612894565b90600052602060002090601f016020900481019282611dd85760008555611e1f565b82601f10611df157805160ff1916838001178555611e1f565b82800160010185558215611e1f579182015b82811115611e1e578251825591602001919060010190611e03565b5b509050611e2c9190611e30565b5090565b5b80821115611e49576000816000905550600101611e31565b5090565b6000611e60611e5b84612739565b612714565b905082815260208101848484011115611e7857600080fd5b611e83848285612852565b509392505050565b6000611e9e611e998461276a565b612714565b905082815260208101848484011115611eb657600080fd5b611ec1848285612852565b509392505050565b600081359050611ed881612c82565b92915050565b600081359050611eed81612c99565b92915050565b600081359050611f0281612cb0565b92915050565b600081519050611f1781612cb0565b92915050565b600082601f830112611f2e57600080fd5b8135611f3e848260208601611e4d565b91505092915050565b600082601f830112611f5857600080fd5b8135611f68848260208601611e8b565b91505092915050565b600081359050611f8081612cc7565b92915050565b600060208284031215611f9857600080fd5b6000611fa684828501611ec9565b91505092915050565b60008060408385031215611fc257600080fd5b6000611fd085828601611ec9565b9250506020611fe185828601611ec9565b9150509250929050565b60008060006060848603121561200057600080fd5b600061200e86828701611ec9565b935050602061201f86828701611ec9565b925050604061203086828701611f71565b9150509250925092565b6000806000806080858703121561205057600080fd5b600061205e87828801611ec9565b945050602061206f87828801611ec9565b935050604061208087828801611f71565b925050606085013567ffffffffffffffff81111561209d57600080fd5b6120a987828801611f1d565b91505092959194509250565b600080604083850312156120c857600080fd5b60006120d685828601611ec9565b92505060206120e785828601611ede565b9150509250929050565b6000806040838503121561210457600080fd5b600061211285828601611ec9565b925050602083013567ffffffffffffffff81111561212f57600080fd5b61213b85828601611f47565b9150509250929050565b6000806040838503121561215857600080fd5b600061216685828601611ec9565b925050602061217785828601611f71565b9150509250929050565b60006020828403121561219357600080fd5b60006121a184828501611ef3565b91505092915050565b6000602082840312156121bc57600080fd5b60006121ca84828501611f08565b91505092915050565b6000602082840312156121e557600080fd5b600082013567ffffffffffffffff8111156121ff57600080fd5b61220b84828501611f47565b91505092915050565b60006020828403121561222657600080fd5b600061223484828501611f71565b91505092915050565b612246816127de565b82525050565b612255816127f0565b82525050565b60006122668261279b565b61227081856127b1565b9350612280818560208601612861565b61228981612955565b840191505092915050565b600061229f826127a6565b6122a981856127c2565b93506122b9818560208601612861565b6122c281612955565b840191505092915050565b60006122d8826127a6565b6122e281856127d3565b93506122f2818560208601612861565b80840191505092915050565b600061230b602d836127c2565b915061231682612966565b604082019050919050565b600061232e6032836127c2565b9150612339826129b5565b604082019050919050565b60006123516025836127c2565b915061235c82612a04565b604082019050919050565b6000612374601c836127c2565b915061237f82612a53565b602082019050919050565b60006123976024836127c2565b91506123a282612a7c565b604082019050919050565b60006123ba6019836127c2565b91506123c582612acb565b602082019050919050565b60006123dd6029836127c2565b91506123e882612af4565b604082019050919050565b6000612400602e836127c2565b915061240b82612b43565b604082019050919050565b60006124236020836127c2565b915061242e82612b92565b602082019050919050565b60006124466018836127c2565b915061245182612bbb565b602082019050919050565b60006124696021836127c2565b915061247482612be4565b604082019050919050565b600061248c603d836127c2565b915061249782612c33565b604082019050919050565b6124ab81612848565b82525050565b60006124bd82856122cd565b91506124c982846122cd565b91508190509392505050565b60006020820190506124ea600083018461223d565b92915050565b6000608082019050612505600083018761223d565b612512602083018661223d565b61251f60408301856124a2565b8181036060830152612531818461225b565b905095945050505050565b6000602082019050612551600083018461224c565b92915050565b600060208201905081810360008301526125718184612294565b905092915050565b60006020820190508181036000830152612592816122fe565b9050919050565b600060208201905081810360008301526125b281612321565b9050919050565b600060208201905081810360008301526125d281612344565b9050919050565b600060208201905081810360008301526125f281612367565b9050919050565b600060208201905081810360008301526126128161238a565b9050919050565b60006020820190508181036000830152612632816123ad565b9050919050565b60006020820190508181036000830152612652816123d0565b9050919050565b60006020820190508181036000830152612672816123f3565b9050919050565b6000602082019050818103600083015261269281612416565b9050919050565b600060208201905081810360008301526126b281612439565b9050919050565b600060208201905081810360008301526126d28161245c565b9050919050565b600060208201905081810360008301526126f28161247f565b9050919050565b600060208201905061270e60008301846124a2565b92915050565b600061271e61272f565b905061272a82826128c6565b919050565b6000604051905090565b600067ffffffffffffffff82111561275457612753612926565b5b61275d82612955565b9050602081019050919050565b600067ffffffffffffffff82111561278557612784612926565b5b61278e82612955565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006127e982612828565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561287f578082015181840152602081019050612864565b8381111561288e576000848401525b50505050565b600060028204905060018216806128ac57607f821691505b602082108114156128c0576128bf6128f7565b5b50919050565b6128cf82612955565b810181811067ffffffffffffffff821117156128ee576128ed612926565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b612c8b816127de565b8114612c9657600080fd5b50565b612ca2816127f0565b8114612cad57600080fd5b50565b612cb9816127fc565b8114612cc457600080fd5b50565b612cd081612848565b8114612cdb57600080fd5b5056fea264697066735822122069de91dc0fb2f41678f73be522f11358f1de9eacc216d9739220e366f3ed7c2964736f6c6343000801003368747470733a2f2f6e667473746f726167652e6c696e6b2f697066732f62616679626569626e686c68713669377833797865367a3472357a6d796d6d747577676278736262707735613732743572766167703578686367612f4f617468546f4d656c696f7269736d2e6a736f6e","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F617468546F4D656C696F7269736D0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E4F46554E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xEA JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xEA JUMP JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6D DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2F23 PUSH1 0x6D SWAP2 CODECOPY PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE3 SWAP3 SWAP2 SWAP1 PUSH3 0xEA JUMP JUMPDEST POP PUSH3 0x1FF JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xF8 SWAP1 PUSH3 0x19A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x11C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x168 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x137 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x168 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x168 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x167 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x14A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x177 SWAP2 SWAP1 PUSH3 0x17B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x196 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x17C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1B3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1CA JUMPI PUSH3 0x1C9 PUSH3 0x1D0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2D14 DUP1 PUSH3 0x20F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x938E3D7B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x406 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xB00A2997 EQ PUSH2 0x31A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x260 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1F86 JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x853 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x49D JUMPI POP PUSH2 0x49C DUP3 PUSH2 0xC76 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4B3 SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4DF SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x501 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x50F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x541 DUP3 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x587 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP1 PUSH2 0x26B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x617 PUSH2 0xDA3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x646 JUMPI POP PUSH2 0x645 DUP2 PUSH2 0x640 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68F DUP4 DUP4 PUSH2 0xDAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6A5 PUSH2 0x69F PUSH2 0xDA3 JUMP JUMPDEST DUP3 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6EF DUP4 DUP4 DUP4 PUSH2 0xEF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x70F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x720 DUP4 PUSH2 0x11F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x789 SWAP1 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x2639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x869 SWAP3 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x87C SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A8 SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x911 PUSH2 0x90A PUSH2 0xDA3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1230 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x922 SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x94E SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x99B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x970 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x9B4 PUSH2 0x9AE PUSH2 0xDA3 JUMP JUMPDEST DUP4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FF DUP5 DUP5 DUP5 DUP5 PUSH2 0x139D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA10 DUP3 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xA30 SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5C SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xABA PUSH2 0x13F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xAD0 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xB05 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAED SWAP3 SWAP2 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xB13 JUMP JUMPDEST PUSH2 0xB0E DUP5 PUSH2 0x1410 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB24 PUSH1 0x7 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB30 PUSH1 0x7 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP PUSH2 0xB3C DUP5 DUP3 PUSH2 0x149C JUMP JUMPDEST PUSH2 0xB46 DUP2 DUP5 PUSH2 0x14BA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0xB5F SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8B SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xD41 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xD51 JUMPI POP PUSH2 0xD50 DUP3 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD61 DUP2 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD97 SWAP1 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1E DUP4 PUSH2 0x714 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE70 DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEB2 JUMPI POP PUSH2 0xEB1 DUP2 DUP6 PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xEF0 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED8 DUP5 PUSH2 0x536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF19 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD6 SWAP1 PUSH2 0x25F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFEC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1610 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100C DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1062 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1059 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11EE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1616 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x129F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1296 SWAP1 PUSH2 0x2619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13A8 DUP5 DUP5 DUP5 PUSH2 0xEF9 JUMP JUMPDEST PUSH2 0x13B4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EA SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x141B DUP3 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1425 PUSH2 0x13F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1445 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1470 JUMP JUMPDEST DUP1 PUSH2 0x144F DUP5 PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1460 SWAP3 SWAP2 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18D7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14C3 DUP3 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F9 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1529 SWAP3 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1559 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15F1 DUP4 PUSH2 0x11F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1932 JUMP JUMPDEST ISZERO PUSH2 0x17A6 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1666 PUSH2 0xDA3 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1688 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16D3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16D0 SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1756 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1703 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x174E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1745 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x17C2 DUP5 PUSH2 0x1955 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1807 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1839 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x18CC JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x18B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x18C7 JUMPI PUSH2 0x18CC JUMP JUMPDEST PUSH2 0x1847 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E1 DUP4 DUP4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x18EE PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1924 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19D9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A3C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A32 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A91 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A87 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1AE0 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1AD6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B2B JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1B21 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B74 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1B6A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1B83 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF3 SWAP1 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C05 DUP2 PUSH2 0x15CF JUMP JUMPDEST ISZERO PUSH2 0x1C45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3C SWAP1 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C53 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1610 JUMP JUMPDEST PUSH2 0x1C5C DUP2 PUSH2 0x15CF JUMP JUMPDEST ISZERO PUSH2 0x1C9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C93 SWAP1 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1DA6 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1616 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1DB6 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1DD8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1E1F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1DF1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1E1F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1E1F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E1E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1E2C SWAP2 SWAP1 PUSH2 0x1E30 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E49 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1E31 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E60 PUSH2 0x1E5B DUP5 PUSH2 0x2739 JUMP JUMPDEST PUSH2 0x2714 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E83 DUP5 DUP3 DUP6 PUSH2 0x2852 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9E PUSH2 0x1E99 DUP5 PUSH2 0x276A JUMP JUMPDEST PUSH2 0x2714 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC1 DUP5 DUP3 DUP6 PUSH2 0x2852 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ED8 DUP2 PUSH2 0x2C82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EED DUP2 PUSH2 0x2C99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F02 DUP2 PUSH2 0x2CB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F17 DUP2 PUSH2 0x2CB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F3E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F68 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F80 DUP2 PUSH2 0x2CC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FA6 DUP5 DUP3 DUP6 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200E DUP7 DUP3 DUP8 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x201F DUP7 DUP3 DUP8 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2030 DUP7 DUP3 DUP8 ADD PUSH2 0x1F71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x205E DUP8 DUP3 DUP9 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x206F DUP8 DUP3 DUP9 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2080 DUP8 DUP3 DUP9 ADD PUSH2 0x1F71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A9 DUP8 DUP3 DUP9 ADD PUSH2 0x1F1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20E7 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2112 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x212F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213B DUP6 DUP3 DUP7 ADD PUSH2 0x1F47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2166 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2177 DUP6 DUP3 DUP7 ADD PUSH2 0x1F71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21A1 DUP5 DUP3 DUP6 ADD PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21CA DUP5 DUP3 DUP6 ADD PUSH2 0x1F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x220B DUP5 DUP3 DUP6 ADD PUSH2 0x1F47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2234 DUP5 DUP3 DUP6 ADD PUSH2 0x1F71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2246 DUP2 PUSH2 0x27DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2255 DUP2 PUSH2 0x27F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2266 DUP3 PUSH2 0x279B JUMP JUMPDEST PUSH2 0x2270 DUP2 DUP6 PUSH2 0x27B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2280 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x2289 DUP2 PUSH2 0x2955 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229F DUP3 PUSH2 0x27A6 JUMP JUMPDEST PUSH2 0x22A9 DUP2 DUP6 PUSH2 0x27C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x22B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x2955 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D8 DUP3 PUSH2 0x27A6 JUMP JUMPDEST PUSH2 0x22E2 DUP2 DUP6 PUSH2 0x27D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x22F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2861 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x230B PUSH1 0x2D DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2316 DUP3 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232E PUSH1 0x32 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2339 DUP3 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2351 PUSH1 0x25 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x235C DUP3 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2374 PUSH1 0x1C DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x237F DUP3 PUSH2 0x2A53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2397 PUSH1 0x24 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A2 DUP3 PUSH2 0x2A7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BA PUSH1 0x19 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23C5 DUP3 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DD PUSH1 0x29 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23E8 DUP3 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2400 PUSH1 0x2E DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x240B DUP3 PUSH2 0x2B43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2423 PUSH1 0x20 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x242E DUP3 PUSH2 0x2B92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2446 PUSH1 0x18 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2451 DUP3 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2469 PUSH1 0x21 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2474 DUP3 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248C PUSH1 0x3D DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2497 DUP3 PUSH2 0x2C33 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AB DUP2 PUSH2 0x2848 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BD DUP3 DUP6 PUSH2 0x22CD JUMP JUMPDEST SWAP2 POP PUSH2 0x24C9 DUP3 DUP5 PUSH2 0x22CD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x223D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2505 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x2512 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x251F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x24A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2531 DUP2 DUP5 PUSH2 0x225B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x224C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2571 DUP2 DUP5 PUSH2 0x2294 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2592 DUP2 PUSH2 0x22FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25B2 DUP2 PUSH2 0x2321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25D2 DUP2 PUSH2 0x2344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F2 DUP2 PUSH2 0x2367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2612 DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2632 DUP2 PUSH2 0x23AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2652 DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2672 DUP2 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2692 DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B2 DUP2 PUSH2 0x2439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D2 DUP2 PUSH2 0x245C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F2 DUP2 PUSH2 0x247F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271E PUSH2 0x272F JUMP JUMPDEST SWAP1 POP PUSH2 0x272A DUP3 DUP3 PUSH2 0x28C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2754 JUMPI PUSH2 0x2753 PUSH2 0x2926 JUMP JUMPDEST JUMPDEST PUSH2 0x275D DUP3 PUSH2 0x2955 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2785 JUMPI PUSH2 0x2784 PUSH2 0x2926 JUMP JUMPDEST JUMPDEST PUSH2 0x278E DUP3 PUSH2 0x2955 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E9 DUP3 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x287F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2864 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x288E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x28AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x28C0 JUMPI PUSH2 0x28BF PUSH2 0x28F7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28CF DUP3 PUSH2 0x2955 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x28EE JUMPI PUSH2 0x28ED PUSH2 0x2926 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2C8B DUP2 PUSH2 0x27DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2C96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2CA2 DUP2 PUSH2 0x27F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2CB9 DUP2 PUSH2 0x27FC JUMP JUMPDEST DUP2 EQ PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2CD0 DUP2 PUSH2 0x2848 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xDE91DC0FB2F41678F73B 0xE5 0x22 CALL SGT PC CALL 0xDE SWAP15 0xAC 0xC2 AND 0xD9 PUSH20 0x9220E366F3ED7C2964736F6C6343000801003368 PUSH21 0x7470733A2F2F6E667473746F726167652E6C696E6B 0x2F PUSH10 0x7066732F626166796265 PUSH10 0x626E686C687136693778 CALLER PUSH26 0x7865367A3472357A6D796D6D7475776762787362627077356137 ORIGIN PUSH21 0x3572766167703578686367612F4F617468546F4D65 PUSH13 0x696F7269736D2E6A736F6E0000 ","sourceMap":"652:2598:21:-:0;;;905:229;;;;;;;;;;1390:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;995:131:21::1;;;;;;;;;;;;;;;;;:17;:131;;;;;;;;;;;;:::i;:::-;;652:2598:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:22:-;;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:2;;212:4;204:6;200:17;190:27;;146:2;274;266:6;263:14;243:18;240:38;237:2;;;293:18;;:::i;:::-;237:2;58:269;;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;652:2598:21;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:26552:22","statements":[{"body":{"nodeType":"YulBlock","src":"90:260:22","statements":[{"nodeType":"YulAssignment","src":"100:74:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:22"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:22"},"nodeType":"YulFunctionCall","src":"125:48:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:22"},"nodeType":"YulFunctionCall","src":"109:65:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:22"},"nodeType":"YulFunctionCall","src":"183:21:22"},"nodeType":"YulExpressionStatement","src":"183:21:22"},{"nodeType":"YulVariableDeclaration","src":"213:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:22"},"nodeType":"YulFunctionCall","src":"224:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"290:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"280:6:22"},"nodeType":"YulFunctionCall","src":"280:12:22"},"nodeType":"YulExpressionStatement","src":"280:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:22"},"nodeType":"YulFunctionCall","src":"255:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:22"},"nodeType":"YulFunctionCall","src":"252:25:22"},"nodeType":"YulIf","src":"249:2:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"327:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"332:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"337:6:22"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"303:23:22"},"nodeType":"YulFunctionCall","src":"303:41:22"},"nodeType":"YulExpressionStatement","src":"303:41:22"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:22","type":""}],"src":"7:343:22"},{"body":{"nodeType":"YulBlock","src":"440:261:22","statements":[{"nodeType":"YulAssignment","src":"450:75:22","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"517:6:22"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"475:41:22"},"nodeType":"YulFunctionCall","src":"475:49:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"459:15:22"},"nodeType":"YulFunctionCall","src":"459:66:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"450:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"541:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"548:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"534:6:22"},"nodeType":"YulFunctionCall","src":"534:21:22"},"nodeType":"YulExpressionStatement","src":"534:21:22"},{"nodeType":"YulVariableDeclaration","src":"564:27:22","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"579:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"586:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"575:3:22"},"nodeType":"YulFunctionCall","src":"575:16:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"568:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"629:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"631:6:22"},"nodeType":"YulFunctionCall","src":"631:12:22"},"nodeType":"YulExpressionStatement","src":"631:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"610:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"615:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"606:3:22"},"nodeType":"YulFunctionCall","src":"606:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"624:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"603:2:22"},"nodeType":"YulFunctionCall","src":"603:25:22"},"nodeType":"YulIf","src":"600:2:22"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"678:3:22"},{"name":"dst","nodeType":"YulIdentifier","src":"683:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"688:6:22"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"654:23:22"},"nodeType":"YulFunctionCall","src":"654:41:22"},"nodeType":"YulExpressionStatement","src":"654:41:22"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"413:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"418:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"426:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"434:5:22","type":""}],"src":"356:345:22"},{"body":{"nodeType":"YulBlock","src":"759:87:22","statements":[{"nodeType":"YulAssignment","src":"769:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"791:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"778:12:22"},"nodeType":"YulFunctionCall","src":"778:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"834:5:22"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"807:26:22"},"nodeType":"YulFunctionCall","src":"807:33:22"},"nodeType":"YulExpressionStatement","src":"807:33:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:22","type":""}],"src":"707:139:22"},{"body":{"nodeType":"YulBlock","src":"901:84:22","statements":[{"nodeType":"YulAssignment","src":"911:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"933:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"920:12:22"},"nodeType":"YulFunctionCall","src":"920:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"911:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"973:5:22"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"949:23:22"},"nodeType":"YulFunctionCall","src":"949:30:22"},"nodeType":"YulExpressionStatement","src":"949:30:22"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"879:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"887:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"895:5:22","type":""}],"src":"852:133:22"},{"body":{"nodeType":"YulBlock","src":"1042:86:22","statements":[{"nodeType":"YulAssignment","src":"1052:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1074:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1061:12:22"},"nodeType":"YulFunctionCall","src":"1061:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1052:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1116:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1090:25:22"},"nodeType":"YulFunctionCall","src":"1090:32:22"},"nodeType":"YulExpressionStatement","src":"1090:32:22"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1020:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1028:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1036:5:22","type":""}],"src":"991:137:22"},{"body":{"nodeType":"YulBlock","src":"1196:79:22","statements":[{"nodeType":"YulAssignment","src":"1206:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1221:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1215:5:22"},"nodeType":"YulFunctionCall","src":"1215:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1206:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1263:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"1237:25:22"},"nodeType":"YulFunctionCall","src":"1237:32:22"},"nodeType":"YulExpressionStatement","src":"1237:32:22"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1174:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1182:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1190:5:22","type":""}],"src":"1134:141:22"},{"body":{"nodeType":"YulBlock","src":"1355:210:22","statements":[{"body":{"nodeType":"YulBlock","src":"1404:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1413:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1416:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1406:6:22"},"nodeType":"YulFunctionCall","src":"1406:12:22"},"nodeType":"YulExpressionStatement","src":"1406:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1383:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1391:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1379:3:22"},"nodeType":"YulFunctionCall","src":"1379:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"1398:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1375:3:22"},"nodeType":"YulFunctionCall","src":"1375:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1368:6:22"},"nodeType":"YulFunctionCall","src":"1368:35:22"},"nodeType":"YulIf","src":"1365:2:22"},{"nodeType":"YulVariableDeclaration","src":"1429:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1456:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1443:12:22"},"nodeType":"YulFunctionCall","src":"1443:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1433:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1472:87:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1532:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1540:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1528:3:22"},"nodeType":"YulFunctionCall","src":"1528:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"1547:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"1555:3:22"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1481:46:22"},"nodeType":"YulFunctionCall","src":"1481:78:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1472:5:22"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1333:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1341:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1349:5:22","type":""}],"src":"1294:271:22"},{"body":{"nodeType":"YulBlock","src":"1647:211:22","statements":[{"body":{"nodeType":"YulBlock","src":"1696:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1705:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1708:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1698:6:22"},"nodeType":"YulFunctionCall","src":"1698:12:22"},"nodeType":"YulExpressionStatement","src":"1698:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1675:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1683:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1671:3:22"},"nodeType":"YulFunctionCall","src":"1671:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"1690:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1667:3:22"},"nodeType":"YulFunctionCall","src":"1667:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1660:6:22"},"nodeType":"YulFunctionCall","src":"1660:35:22"},"nodeType":"YulIf","src":"1657:2:22"},{"nodeType":"YulVariableDeclaration","src":"1721:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1748:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1735:12:22"},"nodeType":"YulFunctionCall","src":"1735:20:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1725:6:22","type":""}]},{"nodeType":"YulAssignment","src":"1764:88:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1825:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1833:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1821:3:22"},"nodeType":"YulFunctionCall","src":"1821:17:22"},{"name":"length","nodeType":"YulIdentifier","src":"1840:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"1848:3:22"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1773:47:22"},"nodeType":"YulFunctionCall","src":"1773:79:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1764:5:22"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1625:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1633:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1641:5:22","type":""}],"src":"1585:273:22"},{"body":{"nodeType":"YulBlock","src":"1916:87:22","statements":[{"nodeType":"YulAssignment","src":"1926:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1948:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1935:12:22"},"nodeType":"YulFunctionCall","src":"1935:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1926:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1991:5:22"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1964:26:22"},"nodeType":"YulFunctionCall","src":"1964:33:22"},"nodeType":"YulExpressionStatement","src":"1964:33:22"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1894:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1902:3:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1910:5:22","type":""}],"src":"1864:139:22"},{"body":{"nodeType":"YulBlock","src":"2075:196:22","statements":[{"body":{"nodeType":"YulBlock","src":"2121:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2130:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2133:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2123:6:22"},"nodeType":"YulFunctionCall","src":"2123:12:22"},"nodeType":"YulExpressionStatement","src":"2123:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2096:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2105:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2092:3:22"},"nodeType":"YulFunctionCall","src":"2092:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2117:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2088:3:22"},"nodeType":"YulFunctionCall","src":"2088:32:22"},"nodeType":"YulIf","src":"2085:2:22"},{"nodeType":"YulBlock","src":"2147:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2162:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2176:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2166:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2191:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2226:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2237:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2222:3:22"},"nodeType":"YulFunctionCall","src":"2222:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2246:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2201:20:22"},"nodeType":"YulFunctionCall","src":"2201:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2191:6:22"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2045:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2056:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2068:6:22","type":""}],"src":"2009:262:22"},{"body":{"nodeType":"YulBlock","src":"2360:324:22","statements":[{"body":{"nodeType":"YulBlock","src":"2406:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2415:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2418:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2408:6:22"},"nodeType":"YulFunctionCall","src":"2408:12:22"},"nodeType":"YulExpressionStatement","src":"2408:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2381:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2390:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2377:3:22"},"nodeType":"YulFunctionCall","src":"2377:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2402:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2373:3:22"},"nodeType":"YulFunctionCall","src":"2373:32:22"},"nodeType":"YulIf","src":"2370:2:22"},{"nodeType":"YulBlock","src":"2432:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2447:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2461:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2451:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2476:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2511:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2522:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2507:3:22"},"nodeType":"YulFunctionCall","src":"2507:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2531:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2486:20:22"},"nodeType":"YulFunctionCall","src":"2486:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2476:6:22"}]}]},{"nodeType":"YulBlock","src":"2559:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2574:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2588:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2578:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2604:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2639:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2650:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2635:3:22"},"nodeType":"YulFunctionCall","src":"2635:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2659:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2614:20:22"},"nodeType":"YulFunctionCall","src":"2614:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2604:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2322:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2333:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2345:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2353:6:22","type":""}],"src":"2277:407:22"},{"body":{"nodeType":"YulBlock","src":"2790:452:22","statements":[{"body":{"nodeType":"YulBlock","src":"2836:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2848:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2838:6:22"},"nodeType":"YulFunctionCall","src":"2838:12:22"},"nodeType":"YulExpressionStatement","src":"2838:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2811:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2820:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2807:3:22"},"nodeType":"YulFunctionCall","src":"2807:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2832:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2803:3:22"},"nodeType":"YulFunctionCall","src":"2803:32:22"},"nodeType":"YulIf","src":"2800:2:22"},{"nodeType":"YulBlock","src":"2862:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2877:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2891:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2881:6:22","type":""}]},{"nodeType":"YulAssignment","src":"2906:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2941:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2952:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2937:3:22"},"nodeType":"YulFunctionCall","src":"2937:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2961:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2916:20:22"},"nodeType":"YulFunctionCall","src":"2916:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2906:6:22"}]}]},{"nodeType":"YulBlock","src":"2989:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3004:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3018:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3008:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3034:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3069:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3080:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3065:3:22"},"nodeType":"YulFunctionCall","src":"3065:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3089:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3044:20:22"},"nodeType":"YulFunctionCall","src":"3044:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3034:6:22"}]}]},{"nodeType":"YulBlock","src":"3117:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3132:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3136:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3162:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3197:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3208:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:22"},"nodeType":"YulFunctionCall","src":"3193:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3217:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3172:20:22"},"nodeType":"YulFunctionCall","src":"3172:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3162:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2744:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2755:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2767:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2775:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2783:6:22","type":""}],"src":"2690:552:22"},{"body":{"nodeType":"YulBlock","src":"3374:683:22","statements":[{"body":{"nodeType":"YulBlock","src":"3421:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3430:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3433:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3423:6:22"},"nodeType":"YulFunctionCall","src":"3423:12:22"},"nodeType":"YulExpressionStatement","src":"3423:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3395:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3404:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3391:3:22"},"nodeType":"YulFunctionCall","src":"3391:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3416:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3387:3:22"},"nodeType":"YulFunctionCall","src":"3387:33:22"},"nodeType":"YulIf","src":"3384:2:22"},{"nodeType":"YulBlock","src":"3447:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3462:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3476:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3466:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3491:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3526:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3537:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3522:3:22"},"nodeType":"YulFunctionCall","src":"3522:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3546:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3501:20:22"},"nodeType":"YulFunctionCall","src":"3501:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3491:6:22"}]}]},{"nodeType":"YulBlock","src":"3574:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3589:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3603:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3593:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3619:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3654:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3665:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3650:3:22"},"nodeType":"YulFunctionCall","src":"3650:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3674:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3629:20:22"},"nodeType":"YulFunctionCall","src":"3629:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3619:6:22"}]}]},{"nodeType":"YulBlock","src":"3702:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3717:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3731:2:22","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3721:6:22","type":""}]},{"nodeType":"YulAssignment","src":"3747:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3782:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3793:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3778:3:22"},"nodeType":"YulFunctionCall","src":"3778:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3802:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3757:20:22"},"nodeType":"YulFunctionCall","src":"3757:53:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3747:6:22"}]}]},{"nodeType":"YulBlock","src":"3830:220:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3845:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3876:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3887:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3872:3:22"},"nodeType":"YulFunctionCall","src":"3872:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3859:12:22"},"nodeType":"YulFunctionCall","src":"3859:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3849:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3938:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3947:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3950:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3940:6:22"},"nodeType":"YulFunctionCall","src":"3940:12:22"},"nodeType":"YulExpressionStatement","src":"3940:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3910:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3918:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3907:2:22"},"nodeType":"YulFunctionCall","src":"3907:30:22"},"nodeType":"YulIf","src":"3904:2:22"},{"nodeType":"YulAssignment","src":"3968:72:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4012:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4023:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4008:3:22"},"nodeType":"YulFunctionCall","src":"4008:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4032:7:22"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3978:29:22"},"nodeType":"YulFunctionCall","src":"3978:62:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3968:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3320:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3331:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3343:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3351:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3359:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3367:6:22","type":""}],"src":"3248:809:22"},{"body":{"nodeType":"YulBlock","src":"4143:321:22","statements":[{"body":{"nodeType":"YulBlock","src":"4189:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4198:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4201:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4191:6:22"},"nodeType":"YulFunctionCall","src":"4191:12:22"},"nodeType":"YulExpressionStatement","src":"4191:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4164:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4173:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4160:3:22"},"nodeType":"YulFunctionCall","src":"4160:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4185:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4156:3:22"},"nodeType":"YulFunctionCall","src":"4156:32:22"},"nodeType":"YulIf","src":"4153:2:22"},{"nodeType":"YulBlock","src":"4215:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4230:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4244:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4234:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4259:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4294:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4305:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4290:3:22"},"nodeType":"YulFunctionCall","src":"4290:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4314:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4269:20:22"},"nodeType":"YulFunctionCall","src":"4269:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4259:6:22"}]}]},{"nodeType":"YulBlock","src":"4342:115:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4357:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4371:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4361:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4387:60:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4419:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4430:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:22"},"nodeType":"YulFunctionCall","src":"4415:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4439:7:22"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4397:17:22"},"nodeType":"YulFunctionCall","src":"4397:50:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4387:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4105:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4116:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4128:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4136:6:22","type":""}],"src":"4063:401:22"},{"body":{"nodeType":"YulBlock","src":"4563:427:22","statements":[{"body":{"nodeType":"YulBlock","src":"4609:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4618:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4621:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4611:6:22"},"nodeType":"YulFunctionCall","src":"4611:12:22"},"nodeType":"YulExpressionStatement","src":"4611:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4584:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4593:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4580:3:22"},"nodeType":"YulFunctionCall","src":"4580:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4605:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4576:3:22"},"nodeType":"YulFunctionCall","src":"4576:32:22"},"nodeType":"YulIf","src":"4573:2:22"},{"nodeType":"YulBlock","src":"4635:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4650:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4664:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4654:6:22","type":""}]},{"nodeType":"YulAssignment","src":"4679:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4714:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4725:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4710:3:22"},"nodeType":"YulFunctionCall","src":"4710:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4734:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4689:20:22"},"nodeType":"YulFunctionCall","src":"4689:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4679:6:22"}]}]},{"nodeType":"YulBlock","src":"4762:221:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4777:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4808:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4819:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4804:3:22"},"nodeType":"YulFunctionCall","src":"4804:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4791:12:22"},"nodeType":"YulFunctionCall","src":"4791:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4781:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4870:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4879:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4882:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4872:6:22"},"nodeType":"YulFunctionCall","src":"4872:12:22"},"nodeType":"YulExpressionStatement","src":"4872:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4842:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4850:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4839:2:22"},"nodeType":"YulFunctionCall","src":"4839:30:22"},"nodeType":"YulIf","src":"4836:2:22"},{"nodeType":"YulAssignment","src":"4900:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4945:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4956:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4941:3:22"},"nodeType":"YulFunctionCall","src":"4941:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4965:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4910:30:22"},"nodeType":"YulFunctionCall","src":"4910:63:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4900:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4525:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4536:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4548:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4556:6:22","type":""}],"src":"4470:520:22"},{"body":{"nodeType":"YulBlock","src":"5079:324:22","statements":[{"body":{"nodeType":"YulBlock","src":"5125:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5134:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5137:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5127:6:22"},"nodeType":"YulFunctionCall","src":"5127:12:22"},"nodeType":"YulExpressionStatement","src":"5127:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5100:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5109:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5096:3:22"},"nodeType":"YulFunctionCall","src":"5096:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5121:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5092:3:22"},"nodeType":"YulFunctionCall","src":"5092:32:22"},"nodeType":"YulIf","src":"5089:2:22"},{"nodeType":"YulBlock","src":"5151:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5166:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5180:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5170:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5195:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5230:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5241:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5226:3:22"},"nodeType":"YulFunctionCall","src":"5226:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5250:7:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5205:20:22"},"nodeType":"YulFunctionCall","src":"5205:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5195:6:22"}]}]},{"nodeType":"YulBlock","src":"5278:118:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5293:16:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5307:2:22","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5297:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5323:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5358:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5369:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5354:3:22"},"nodeType":"YulFunctionCall","src":"5354:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5378:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5333:20:22"},"nodeType":"YulFunctionCall","src":"5333:53:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5323:6:22"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5041:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5052:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5064:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5072:6:22","type":""}],"src":"4996:407:22"},{"body":{"nodeType":"YulBlock","src":"5474:195:22","statements":[{"body":{"nodeType":"YulBlock","src":"5520:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5529:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5532:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5522:6:22"},"nodeType":"YulFunctionCall","src":"5522:12:22"},"nodeType":"YulExpressionStatement","src":"5522:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5495:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5504:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5491:3:22"},"nodeType":"YulFunctionCall","src":"5491:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5516:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5487:3:22"},"nodeType":"YulFunctionCall","src":"5487:32:22"},"nodeType":"YulIf","src":"5484:2:22"},{"nodeType":"YulBlock","src":"5546:116:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5561:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5575:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5565:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5590:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5624:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5635:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5620:3:22"},"nodeType":"YulFunctionCall","src":"5620:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5644:7:22"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5600:19:22"},"nodeType":"YulFunctionCall","src":"5600:52:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5590:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5444:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5455:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5467:6:22","type":""}],"src":"5409:260:22"},{"body":{"nodeType":"YulBlock","src":"5751:206:22","statements":[{"body":{"nodeType":"YulBlock","src":"5797:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5806:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5809:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5799:6:22"},"nodeType":"YulFunctionCall","src":"5799:12:22"},"nodeType":"YulExpressionStatement","src":"5799:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5772:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5781:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5768:3:22"},"nodeType":"YulFunctionCall","src":"5768:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5793:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5764:3:22"},"nodeType":"YulFunctionCall","src":"5764:32:22"},"nodeType":"YulIf","src":"5761:2:22"},{"nodeType":"YulBlock","src":"5823:127:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5838:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5852:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5842:6:22","type":""}]},{"nodeType":"YulAssignment","src":"5867:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5912:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5923:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5908:3:22"},"nodeType":"YulFunctionCall","src":"5908:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5932:7:22"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5877:30:22"},"nodeType":"YulFunctionCall","src":"5877:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5867:6:22"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5721:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5732:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5744:6:22","type":""}],"src":"5675:282:22"},{"body":{"nodeType":"YulBlock","src":"6039:299:22","statements":[{"body":{"nodeType":"YulBlock","src":"6085:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6094:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6097:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6087:6:22"},"nodeType":"YulFunctionCall","src":"6087:12:22"},"nodeType":"YulExpressionStatement","src":"6087:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6060:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6069:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6056:3:22"},"nodeType":"YulFunctionCall","src":"6056:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6081:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6052:3:22"},"nodeType":"YulFunctionCall","src":"6052:32:22"},"nodeType":"YulIf","src":"6049:2:22"},{"nodeType":"YulBlock","src":"6111:220:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6126:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6157:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6168:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6153:3:22"},"nodeType":"YulFunctionCall","src":"6153:17:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6140:12:22"},"nodeType":"YulFunctionCall","src":"6140:31:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6130:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6218:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6227:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6230:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6220:6:22"},"nodeType":"YulFunctionCall","src":"6220:12:22"},"nodeType":"YulExpressionStatement","src":"6220:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6190:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6198:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6187:2:22"},"nodeType":"YulFunctionCall","src":"6187:30:22"},"nodeType":"YulIf","src":"6184:2:22"},{"nodeType":"YulAssignment","src":"6248:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6293:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6304:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6289:3:22"},"nodeType":"YulFunctionCall","src":"6289:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6313:7:22"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6258:30:22"},"nodeType":"YulFunctionCall","src":"6258:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6248:6:22"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6009:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6020:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6032:6:22","type":""}],"src":"5963:375:22"},{"body":{"nodeType":"YulBlock","src":"6410:196:22","statements":[{"body":{"nodeType":"YulBlock","src":"6456:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6465:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6468:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6458:6:22"},"nodeType":"YulFunctionCall","src":"6458:12:22"},"nodeType":"YulExpressionStatement","src":"6458:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6431:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6440:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6427:3:22"},"nodeType":"YulFunctionCall","src":"6427:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6452:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6423:3:22"},"nodeType":"YulFunctionCall","src":"6423:32:22"},"nodeType":"YulIf","src":"6420:2:22"},{"nodeType":"YulBlock","src":"6482:117:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6497:15:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6511:1:22","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6501:6:22","type":""}]},{"nodeType":"YulAssignment","src":"6526:63:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6561:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6572:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6557:3:22"},"nodeType":"YulFunctionCall","src":"6557:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6581:7:22"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6536:20:22"},"nodeType":"YulFunctionCall","src":"6536:53:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6526:6:22"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6380:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6391:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6403:6:22","type":""}],"src":"6344:262:22"},{"body":{"nodeType":"YulBlock","src":"6677:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6694:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6717:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6699:17:22"},"nodeType":"YulFunctionCall","src":"6699:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6687:6:22"},"nodeType":"YulFunctionCall","src":"6687:37:22"},"nodeType":"YulExpressionStatement","src":"6687:37:22"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6665:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6672:3:22","type":""}],"src":"6612:118:22"},{"body":{"nodeType":"YulBlock","src":"6795:50:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6812:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6832:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6817:14:22"},"nodeType":"YulFunctionCall","src":"6817:21:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6805:6:22"},"nodeType":"YulFunctionCall","src":"6805:34:22"},"nodeType":"YulExpressionStatement","src":"6805:34:22"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6783:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6790:3:22","type":""}],"src":"6736:109:22"},{"body":{"nodeType":"YulBlock","src":"6941:270:22","statements":[{"nodeType":"YulVariableDeclaration","src":"6951:52:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6997:5:22"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6965:31:22"},"nodeType":"YulFunctionCall","src":"6965:38:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6955:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7012:77:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7077:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7082:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7019:57:22"},"nodeType":"YulFunctionCall","src":"7019:70:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7012:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7124:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7131:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7120:3:22"},"nodeType":"YulFunctionCall","src":"7120:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"7138:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7143:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7098:21:22"},"nodeType":"YulFunctionCall","src":"7098:52:22"},"nodeType":"YulExpressionStatement","src":"7098:52:22"},{"nodeType":"YulAssignment","src":"7159:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7170:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7197:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7175:21:22"},"nodeType":"YulFunctionCall","src":"7175:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7166:3:22"},"nodeType":"YulFunctionCall","src":"7166:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7159:3:22"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6922:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6929:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6937:3:22","type":""}],"src":"6851:360:22"},{"body":{"nodeType":"YulBlock","src":"7309:272:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7319:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7366:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7333:32:22"},"nodeType":"YulFunctionCall","src":"7333:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7323:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7381:78:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7447:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7452:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7388:58:22"},"nodeType":"YulFunctionCall","src":"7388:71:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7381:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7494:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7501:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7490:3:22"},"nodeType":"YulFunctionCall","src":"7490:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"7508:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7513:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7468:21:22"},"nodeType":"YulFunctionCall","src":"7468:52:22"},"nodeType":"YulExpressionStatement","src":"7468:52:22"},{"nodeType":"YulAssignment","src":"7529:46:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7540:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7567:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7545:21:22"},"nodeType":"YulFunctionCall","src":"7545:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7536:3:22"},"nodeType":"YulFunctionCall","src":"7536:39:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7529:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7290:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7297:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7305:3:22","type":""}],"src":"7217:364:22"},{"body":{"nodeType":"YulBlock","src":"7697:267:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7707:53:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7754:5:22"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7721:32:22"},"nodeType":"YulFunctionCall","src":"7721:39:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7711:6:22","type":""}]},{"nodeType":"YulAssignment","src":"7769:96:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7853:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7858:6:22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7776:76:22"},"nodeType":"YulFunctionCall","src":"7776:89:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7769:3:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7900:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7907:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7896:3:22"},"nodeType":"YulFunctionCall","src":"7896:16:22"},{"name":"pos","nodeType":"YulIdentifier","src":"7914:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7919:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7874:21:22"},"nodeType":"YulFunctionCall","src":"7874:52:22"},"nodeType":"YulExpressionStatement","src":"7874:52:22"},{"nodeType":"YulAssignment","src":"7935:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7946:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"7951:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7942:3:22"},"nodeType":"YulFunctionCall","src":"7942:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7935:3:22"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7678:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7685:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7693:3:22","type":""}],"src":"7587:377:22"},{"body":{"nodeType":"YulBlock","src":"8116:220:22","statements":[{"nodeType":"YulAssignment","src":"8126:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8192:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8197:2:22","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8133:58:22"},"nodeType":"YulFunctionCall","src":"8133:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8126:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8298:3:22"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"8209:88:22"},"nodeType":"YulFunctionCall","src":"8209:93:22"},"nodeType":"YulExpressionStatement","src":"8209:93:22"},{"nodeType":"YulAssignment","src":"8311:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8322:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8327:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8318:3:22"},"nodeType":"YulFunctionCall","src":"8318:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8311:3:22"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8104:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8112:3:22","type":""}],"src":"7970:366:22"},{"body":{"nodeType":"YulBlock","src":"8488:220:22","statements":[{"nodeType":"YulAssignment","src":"8498:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8564:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8569:2:22","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8505:58:22"},"nodeType":"YulFunctionCall","src":"8505:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8498:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8670:3:22"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"8581:88:22"},"nodeType":"YulFunctionCall","src":"8581:93:22"},"nodeType":"YulExpressionStatement","src":"8581:93:22"},{"nodeType":"YulAssignment","src":"8683:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8694:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8699:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8690:3:22"},"nodeType":"YulFunctionCall","src":"8690:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8683:3:22"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8476:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8484:3:22","type":""}],"src":"8342:366:22"},{"body":{"nodeType":"YulBlock","src":"8860:220:22","statements":[{"nodeType":"YulAssignment","src":"8870:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8936:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8941:2:22","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8877:58:22"},"nodeType":"YulFunctionCall","src":"8877:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8870:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9042:3:22"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"8953:88:22"},"nodeType":"YulFunctionCall","src":"8953:93:22"},"nodeType":"YulExpressionStatement","src":"8953:93:22"},{"nodeType":"YulAssignment","src":"9055:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9066:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9071:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9062:3:22"},"nodeType":"YulFunctionCall","src":"9062:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9055:3:22"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8848:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8856:3:22","type":""}],"src":"8714:366:22"},{"body":{"nodeType":"YulBlock","src":"9232:220:22","statements":[{"nodeType":"YulAssignment","src":"9242:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9308:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9313:2:22","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9249:58:22"},"nodeType":"YulFunctionCall","src":"9249:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9242:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9414:3:22"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"9325:88:22"},"nodeType":"YulFunctionCall","src":"9325:93:22"},"nodeType":"YulExpressionStatement","src":"9325:93:22"},{"nodeType":"YulAssignment","src":"9427:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9438:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9443:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9434:3:22"},"nodeType":"YulFunctionCall","src":"9434:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9427:3:22"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9220:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9228:3:22","type":""}],"src":"9086:366:22"},{"body":{"nodeType":"YulBlock","src":"9604:220:22","statements":[{"nodeType":"YulAssignment","src":"9614:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9680:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9685:2:22","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9621:58:22"},"nodeType":"YulFunctionCall","src":"9621:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9614:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9786:3:22"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"9697:88:22"},"nodeType":"YulFunctionCall","src":"9697:93:22"},"nodeType":"YulExpressionStatement","src":"9697:93:22"},{"nodeType":"YulAssignment","src":"9799:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9810:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"9815:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9806:3:22"},"nodeType":"YulFunctionCall","src":"9806:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9799:3:22"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9592:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9600:3:22","type":""}],"src":"9458:366:22"},{"body":{"nodeType":"YulBlock","src":"9976:220:22","statements":[{"nodeType":"YulAssignment","src":"9986:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10052:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"10057:2:22","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9993:58:22"},"nodeType":"YulFunctionCall","src":"9993:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9986:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10158:3:22"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"10069:88:22"},"nodeType":"YulFunctionCall","src":"10069:93:22"},"nodeType":"YulExpressionStatement","src":"10069:93:22"},{"nodeType":"YulAssignment","src":"10171:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10182:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"10187:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10178:3:22"},"nodeType":"YulFunctionCall","src":"10178:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10171:3:22"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9964:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9972:3:22","type":""}],"src":"9830:366:22"},{"body":{"nodeType":"YulBlock","src":"10348:220:22","statements":[{"nodeType":"YulAssignment","src":"10358:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10424:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"10429:2:22","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10365:58:22"},"nodeType":"YulFunctionCall","src":"10365:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10358:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10530:3:22"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"10441:88:22"},"nodeType":"YulFunctionCall","src":"10441:93:22"},"nodeType":"YulExpressionStatement","src":"10441:93:22"},{"nodeType":"YulAssignment","src":"10543:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10554:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"10559:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10550:3:22"},"nodeType":"YulFunctionCall","src":"10550:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10543:3:22"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10336:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10344:3:22","type":""}],"src":"10202:366:22"},{"body":{"nodeType":"YulBlock","src":"10720:220:22","statements":[{"nodeType":"YulAssignment","src":"10730:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10796:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"10801:2:22","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10737:58:22"},"nodeType":"YulFunctionCall","src":"10737:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10730:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10902:3:22"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"10813:88:22"},"nodeType":"YulFunctionCall","src":"10813:93:22"},"nodeType":"YulExpressionStatement","src":"10813:93:22"},{"nodeType":"YulAssignment","src":"10915:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10926:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"10931:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10922:3:22"},"nodeType":"YulFunctionCall","src":"10922:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10915:3:22"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10708:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10716:3:22","type":""}],"src":"10574:366:22"},{"body":{"nodeType":"YulBlock","src":"11092:220:22","statements":[{"nodeType":"YulAssignment","src":"11102:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11168:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11173:2:22","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11109:58:22"},"nodeType":"YulFunctionCall","src":"11109:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11102:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11274:3:22"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"11185:88:22"},"nodeType":"YulFunctionCall","src":"11185:93:22"},"nodeType":"YulExpressionStatement","src":"11185:93:22"},{"nodeType":"YulAssignment","src":"11287:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11298:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11303:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11294:3:22"},"nodeType":"YulFunctionCall","src":"11294:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11287:3:22"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11080:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11088:3:22","type":""}],"src":"10946:366:22"},{"body":{"nodeType":"YulBlock","src":"11464:220:22","statements":[{"nodeType":"YulAssignment","src":"11474:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11540:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11545:2:22","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11481:58:22"},"nodeType":"YulFunctionCall","src":"11481:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11646:3:22"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"11557:88:22"},"nodeType":"YulFunctionCall","src":"11557:93:22"},"nodeType":"YulExpressionStatement","src":"11557:93:22"},{"nodeType":"YulAssignment","src":"11659:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11670:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11675:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11666:3:22"},"nodeType":"YulFunctionCall","src":"11666:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11659:3:22"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11452:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11460:3:22","type":""}],"src":"11318:366:22"},{"body":{"nodeType":"YulBlock","src":"11836:220:22","statements":[{"nodeType":"YulAssignment","src":"11846:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11912:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11917:2:22","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11853:58:22"},"nodeType":"YulFunctionCall","src":"11853:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11846:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12018:3:22"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11929:88:22"},"nodeType":"YulFunctionCall","src":"11929:93:22"},"nodeType":"YulExpressionStatement","src":"11929:93:22"},{"nodeType":"YulAssignment","src":"12031:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12042:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12047:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12038:3:22"},"nodeType":"YulFunctionCall","src":"12038:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12031:3:22"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11824:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11832:3:22","type":""}],"src":"11690:366:22"},{"body":{"nodeType":"YulBlock","src":"12208:220:22","statements":[{"nodeType":"YulAssignment","src":"12218:74:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12284:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12289:2:22","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12225:58:22"},"nodeType":"YulFunctionCall","src":"12225:67:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12218:3:22"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12390:3:22"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12301:88:22"},"nodeType":"YulFunctionCall","src":"12301:93:22"},"nodeType":"YulExpressionStatement","src":"12301:93:22"},{"nodeType":"YulAssignment","src":"12403:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12414:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"12419:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12410:3:22"},"nodeType":"YulFunctionCall","src":"12410:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12403:3:22"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12196:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12204:3:22","type":""}],"src":"12062:366:22"},{"body":{"nodeType":"YulBlock","src":"12499:53:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12516:3:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12539:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12521:17:22"},"nodeType":"YulFunctionCall","src":"12521:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12509:6:22"},"nodeType":"YulFunctionCall","src":"12509:37:22"},"nodeType":"YulExpressionStatement","src":"12509:37:22"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12487:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12494:3:22","type":""}],"src":"12434:118:22"},{"body":{"nodeType":"YulBlock","src":"12742:251:22","statements":[{"nodeType":"YulAssignment","src":"12753:102:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12842:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"12851:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12760:81:22"},"nodeType":"YulFunctionCall","src":"12760:95:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12753:3:22"}]},{"nodeType":"YulAssignment","src":"12865:102:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12954:6:22"},{"name":"pos","nodeType":"YulIdentifier","src":"12963:3:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12872:81:22"},"nodeType":"YulFunctionCall","src":"12872:95:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12865:3:22"}]},{"nodeType":"YulAssignment","src":"12977:10:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"12984:3:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12977:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12713:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12719:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12727:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12738:3:22","type":""}],"src":"12558:435:22"},{"body":{"nodeType":"YulBlock","src":"13097:124:22","statements":[{"nodeType":"YulAssignment","src":"13107:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13119:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13130:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13115:3:22"},"nodeType":"YulFunctionCall","src":"13115:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13107:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13187:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13200:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13211:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13196:3:22"},"nodeType":"YulFunctionCall","src":"13196:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13143:43:22"},"nodeType":"YulFunctionCall","src":"13143:71:22"},"nodeType":"YulExpressionStatement","src":"13143:71:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13069:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13081:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13092:4:22","type":""}],"src":"12999:222:22"},{"body":{"nodeType":"YulBlock","src":"13427:440:22","statements":[{"nodeType":"YulAssignment","src":"13437:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13449:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13460:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13445:3:22"},"nodeType":"YulFunctionCall","src":"13445:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13437:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13518:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13531:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13542:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13527:3:22"},"nodeType":"YulFunctionCall","src":"13527:17:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13474:43:22"},"nodeType":"YulFunctionCall","src":"13474:71:22"},"nodeType":"YulExpressionStatement","src":"13474:71:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13599:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13612:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13623:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13608:3:22"},"nodeType":"YulFunctionCall","src":"13608:18:22"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13555:43:22"},"nodeType":"YulFunctionCall","src":"13555:72:22"},"nodeType":"YulExpressionStatement","src":"13555:72:22"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13681:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13694:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13705:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13690:3:22"},"nodeType":"YulFunctionCall","src":"13690:18:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13637:43:22"},"nodeType":"YulFunctionCall","src":"13637:72:22"},"nodeType":"YulExpressionStatement","src":"13637:72:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13730:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13741:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13726:3:22"},"nodeType":"YulFunctionCall","src":"13726:18:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13750:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"13756:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13746:3:22"},"nodeType":"YulFunctionCall","src":"13746:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13719:6:22"},"nodeType":"YulFunctionCall","src":"13719:48:22"},"nodeType":"YulExpressionStatement","src":"13719:48:22"},{"nodeType":"YulAssignment","src":"13776:84:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13846:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"13855:4:22"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13784:61:22"},"nodeType":"YulFunctionCall","src":"13784:76:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13776:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13375:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13387:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13395:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13403:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13411:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13422:4:22","type":""}],"src":"13227:640:22"},{"body":{"nodeType":"YulBlock","src":"13965:118:22","statements":[{"nodeType":"YulAssignment","src":"13975:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13987:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13998:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13983:3:22"},"nodeType":"YulFunctionCall","src":"13983:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13975:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14049:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14062:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14073:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14058:3:22"},"nodeType":"YulFunctionCall","src":"14058:17:22"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"14011:37:22"},"nodeType":"YulFunctionCall","src":"14011:65:22"},"nodeType":"YulExpressionStatement","src":"14011:65:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13937:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13949:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13960:4:22","type":""}],"src":"13873:210:22"},{"body":{"nodeType":"YulBlock","src":"14207:195:22","statements":[{"nodeType":"YulAssignment","src":"14217:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14229:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14240:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14225:3:22"},"nodeType":"YulFunctionCall","src":"14225:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14217:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14264:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14275:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14260:3:22"},"nodeType":"YulFunctionCall","src":"14260:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14283:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14289:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14279:3:22"},"nodeType":"YulFunctionCall","src":"14279:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14253:6:22"},"nodeType":"YulFunctionCall","src":"14253:47:22"},"nodeType":"YulExpressionStatement","src":"14253:47:22"},{"nodeType":"YulAssignment","src":"14309:86:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14381:6:22"},{"name":"tail","nodeType":"YulIdentifier","src":"14390:4:22"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14317:63:22"},"nodeType":"YulFunctionCall","src":"14317:78:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14309:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14179:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14191:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14202:4:22","type":""}],"src":"14089:313:22"},{"body":{"nodeType":"YulBlock","src":"14579:248:22","statements":[{"nodeType":"YulAssignment","src":"14589:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14601:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14612:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14597:3:22"},"nodeType":"YulFunctionCall","src":"14597:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14589:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14636:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14647:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14632:3:22"},"nodeType":"YulFunctionCall","src":"14632:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14655:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14661:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14651:3:22"},"nodeType":"YulFunctionCall","src":"14651:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14625:6:22"},"nodeType":"YulFunctionCall","src":"14625:47:22"},"nodeType":"YulExpressionStatement","src":"14625:47:22"},{"nodeType":"YulAssignment","src":"14681:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14815:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14689:124:22"},"nodeType":"YulFunctionCall","src":"14689:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14681:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14559:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14574:4:22","type":""}],"src":"14408:419:22"},{"body":{"nodeType":"YulBlock","src":"15004:248:22","statements":[{"nodeType":"YulAssignment","src":"15014:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15026:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15037:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15022:3:22"},"nodeType":"YulFunctionCall","src":"15022:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15014:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15061:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15072:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15057:3:22"},"nodeType":"YulFunctionCall","src":"15057:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15080:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"15086:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15076:3:22"},"nodeType":"YulFunctionCall","src":"15076:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15050:6:22"},"nodeType":"YulFunctionCall","src":"15050:47:22"},"nodeType":"YulExpressionStatement","src":"15050:47:22"},{"nodeType":"YulAssignment","src":"15106:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15240:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15114:124:22"},"nodeType":"YulFunctionCall","src":"15114:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15106:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14984:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14999:4:22","type":""}],"src":"14833:419:22"},{"body":{"nodeType":"YulBlock","src":"15429:248:22","statements":[{"nodeType":"YulAssignment","src":"15439:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15451:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15462:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15447:3:22"},"nodeType":"YulFunctionCall","src":"15447:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15439:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15486:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15497:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15482:3:22"},"nodeType":"YulFunctionCall","src":"15482:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15505:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"15511:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15501:3:22"},"nodeType":"YulFunctionCall","src":"15501:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15475:6:22"},"nodeType":"YulFunctionCall","src":"15475:47:22"},"nodeType":"YulExpressionStatement","src":"15475:47:22"},{"nodeType":"YulAssignment","src":"15531:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15665:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15539:124:22"},"nodeType":"YulFunctionCall","src":"15539:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15531:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15409:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15424:4:22","type":""}],"src":"15258:419:22"},{"body":{"nodeType":"YulBlock","src":"15854:248:22","statements":[{"nodeType":"YulAssignment","src":"15864:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15876:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15887:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15872:3:22"},"nodeType":"YulFunctionCall","src":"15872:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15864:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15911:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15922:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15907:3:22"},"nodeType":"YulFunctionCall","src":"15907:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15930:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"15936:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15926:3:22"},"nodeType":"YulFunctionCall","src":"15926:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15900:6:22"},"nodeType":"YulFunctionCall","src":"15900:47:22"},"nodeType":"YulExpressionStatement","src":"15900:47:22"},{"nodeType":"YulAssignment","src":"15956:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16090:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15964:124:22"},"nodeType":"YulFunctionCall","src":"15964:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15956:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15834:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15849:4:22","type":""}],"src":"15683:419:22"},{"body":{"nodeType":"YulBlock","src":"16279:248:22","statements":[{"nodeType":"YulAssignment","src":"16289:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16301:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16312:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16297:3:22"},"nodeType":"YulFunctionCall","src":"16297:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16289:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16336:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16347:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16332:3:22"},"nodeType":"YulFunctionCall","src":"16332:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16355:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"16361:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16351:3:22"},"nodeType":"YulFunctionCall","src":"16351:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16325:6:22"},"nodeType":"YulFunctionCall","src":"16325:47:22"},"nodeType":"YulExpressionStatement","src":"16325:47:22"},{"nodeType":"YulAssignment","src":"16381:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16515:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16389:124:22"},"nodeType":"YulFunctionCall","src":"16389:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16381:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16259:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16274:4:22","type":""}],"src":"16108:419:22"},{"body":{"nodeType":"YulBlock","src":"16704:248:22","statements":[{"nodeType":"YulAssignment","src":"16714:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16726:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16737:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16722:3:22"},"nodeType":"YulFunctionCall","src":"16722:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16714:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16761:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"16772:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16757:3:22"},"nodeType":"YulFunctionCall","src":"16757:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16780:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"16786:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16776:3:22"},"nodeType":"YulFunctionCall","src":"16776:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16750:6:22"},"nodeType":"YulFunctionCall","src":"16750:47:22"},"nodeType":"YulExpressionStatement","src":"16750:47:22"},{"nodeType":"YulAssignment","src":"16806:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16940:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16814:124:22"},"nodeType":"YulFunctionCall","src":"16814:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16806:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16684:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16699:4:22","type":""}],"src":"16533:419:22"},{"body":{"nodeType":"YulBlock","src":"17129:248:22","statements":[{"nodeType":"YulAssignment","src":"17139:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17151:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17162:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17147:3:22"},"nodeType":"YulFunctionCall","src":"17147:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17139:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17186:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17197:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17182:3:22"},"nodeType":"YulFunctionCall","src":"17182:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17205:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"17211:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17201:3:22"},"nodeType":"YulFunctionCall","src":"17201:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17175:6:22"},"nodeType":"YulFunctionCall","src":"17175:47:22"},"nodeType":"YulExpressionStatement","src":"17175:47:22"},{"nodeType":"YulAssignment","src":"17231:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17365:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17239:124:22"},"nodeType":"YulFunctionCall","src":"17239:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17231:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17109:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17124:4:22","type":""}],"src":"16958:419:22"},{"body":{"nodeType":"YulBlock","src":"17554:248:22","statements":[{"nodeType":"YulAssignment","src":"17564:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17576:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17587:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17572:3:22"},"nodeType":"YulFunctionCall","src":"17572:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17564:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17611:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"17622:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17607:3:22"},"nodeType":"YulFunctionCall","src":"17607:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17630:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"17636:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17626:3:22"},"nodeType":"YulFunctionCall","src":"17626:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17600:6:22"},"nodeType":"YulFunctionCall","src":"17600:47:22"},"nodeType":"YulExpressionStatement","src":"17600:47:22"},{"nodeType":"YulAssignment","src":"17656:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17790:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17664:124:22"},"nodeType":"YulFunctionCall","src":"17664:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17656:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17534:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17549:4:22","type":""}],"src":"17383:419:22"},{"body":{"nodeType":"YulBlock","src":"17979:248:22","statements":[{"nodeType":"YulAssignment","src":"17989:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18001:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18012:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17997:3:22"},"nodeType":"YulFunctionCall","src":"17997:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17989:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18036:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18047:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18032:3:22"},"nodeType":"YulFunctionCall","src":"18032:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18055:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"18061:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18051:3:22"},"nodeType":"YulFunctionCall","src":"18051:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18025:6:22"},"nodeType":"YulFunctionCall","src":"18025:47:22"},"nodeType":"YulExpressionStatement","src":"18025:47:22"},{"nodeType":"YulAssignment","src":"18081:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18215:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18089:124:22"},"nodeType":"YulFunctionCall","src":"18089:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18081:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17959:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17974:4:22","type":""}],"src":"17808:419:22"},{"body":{"nodeType":"YulBlock","src":"18404:248:22","statements":[{"nodeType":"YulAssignment","src":"18414:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18426:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18437:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18422:3:22"},"nodeType":"YulFunctionCall","src":"18422:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18414:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18461:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18472:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18457:3:22"},"nodeType":"YulFunctionCall","src":"18457:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18480:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"18486:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18476:3:22"},"nodeType":"YulFunctionCall","src":"18476:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18450:6:22"},"nodeType":"YulFunctionCall","src":"18450:47:22"},"nodeType":"YulExpressionStatement","src":"18450:47:22"},{"nodeType":"YulAssignment","src":"18506:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18640:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18514:124:22"},"nodeType":"YulFunctionCall","src":"18514:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18506:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18384:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18399:4:22","type":""}],"src":"18233:419:22"},{"body":{"nodeType":"YulBlock","src":"18829:248:22","statements":[{"nodeType":"YulAssignment","src":"18839:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18851:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18862:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18847:3:22"},"nodeType":"YulFunctionCall","src":"18847:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18839:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18886:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"18897:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18882:3:22"},"nodeType":"YulFunctionCall","src":"18882:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18905:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"18911:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18901:3:22"},"nodeType":"YulFunctionCall","src":"18901:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18875:6:22"},"nodeType":"YulFunctionCall","src":"18875:47:22"},"nodeType":"YulExpressionStatement","src":"18875:47:22"},{"nodeType":"YulAssignment","src":"18931:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19065:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18939:124:22"},"nodeType":"YulFunctionCall","src":"18939:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18931:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18809:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18824:4:22","type":""}],"src":"18658:419:22"},{"body":{"nodeType":"YulBlock","src":"19254:248:22","statements":[{"nodeType":"YulAssignment","src":"19264:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19276:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19287:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19272:3:22"},"nodeType":"YulFunctionCall","src":"19272:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19264:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19311:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19322:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19307:3:22"},"nodeType":"YulFunctionCall","src":"19307:17:22"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19330:4:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"19336:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19326:3:22"},"nodeType":"YulFunctionCall","src":"19326:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19300:6:22"},"nodeType":"YulFunctionCall","src":"19300:47:22"},"nodeType":"YulExpressionStatement","src":"19300:47:22"},{"nodeType":"YulAssignment","src":"19356:139:22","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19490:4:22"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19364:124:22"},"nodeType":"YulFunctionCall","src":"19364:131:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19356:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19234:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19249:4:22","type":""}],"src":"19083:419:22"},{"body":{"nodeType":"YulBlock","src":"19606:124:22","statements":[{"nodeType":"YulAssignment","src":"19616:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19628:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19639:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19624:3:22"},"nodeType":"YulFunctionCall","src":"19624:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19616:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19696:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19709:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"19720:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19705:3:22"},"nodeType":"YulFunctionCall","src":"19705:17:22"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19652:43:22"},"nodeType":"YulFunctionCall","src":"19652:71:22"},"nodeType":"YulExpressionStatement","src":"19652:71:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19578:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19590:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19601:4:22","type":""}],"src":"19508:222:22"},{"body":{"nodeType":"YulBlock","src":"19777:88:22","statements":[{"nodeType":"YulAssignment","src":"19787:30:22","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"19797:18:22"},"nodeType":"YulFunctionCall","src":"19797:20:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19787:6:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19846:6:22"},{"name":"size","nodeType":"YulIdentifier","src":"19854:4:22"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"19826:19:22"},"nodeType":"YulFunctionCall","src":"19826:33:22"},"nodeType":"YulExpressionStatement","src":"19826:33:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"19761:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"19770:6:22","type":""}],"src":"19736:129:22"},{"body":{"nodeType":"YulBlock","src":"19911:35:22","statements":[{"nodeType":"YulAssignment","src":"19921:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19937:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19931:5:22"},"nodeType":"YulFunctionCall","src":"19931:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19921:6:22"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"19904:6:22","type":""}],"src":"19871:75:22"},{"body":{"nodeType":"YulBlock","src":"20018:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"20123:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20125:16:22"},"nodeType":"YulFunctionCall","src":"20125:18:22"},"nodeType":"YulExpressionStatement","src":"20125:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20095:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20103:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20092:2:22"},"nodeType":"YulFunctionCall","src":"20092:30:22"},"nodeType":"YulIf","src":"20089:2:22"},{"nodeType":"YulAssignment","src":"20155:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20185:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"20163:21:22"},"nodeType":"YulFunctionCall","src":"20163:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20155:4:22"}]},{"nodeType":"YulAssignment","src":"20229:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"20241:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"20247:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20237:3:22"},"nodeType":"YulFunctionCall","src":"20237:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20229:4:22"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"20002:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"20013:4:22","type":""}],"src":"19952:307:22"},{"body":{"nodeType":"YulBlock","src":"20332:241:22","statements":[{"body":{"nodeType":"YulBlock","src":"20437:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"20439:16:22"},"nodeType":"YulFunctionCall","src":"20439:18:22"},"nodeType":"YulExpressionStatement","src":"20439:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20409:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"20417:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20406:2:22"},"nodeType":"YulFunctionCall","src":"20406:30:22"},"nodeType":"YulIf","src":"20403:2:22"},{"nodeType":"YulAssignment","src":"20469:37:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20499:6:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"20477:21:22"},"nodeType":"YulFunctionCall","src":"20477:29:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20469:4:22"}]},{"nodeType":"YulAssignment","src":"20543:23:22","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"20555:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"20561:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20551:3:22"},"nodeType":"YulFunctionCall","src":"20551:15:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"20543:4:22"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"20316:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"20327:4:22","type":""}],"src":"20265:308:22"},{"body":{"nodeType":"YulBlock","src":"20637:40:22","statements":[{"nodeType":"YulAssignment","src":"20648:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20664:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20658:5:22"},"nodeType":"YulFunctionCall","src":"20658:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20648:6:22"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20620:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20630:6:22","type":""}],"src":"20579:98:22"},{"body":{"nodeType":"YulBlock","src":"20742:40:22","statements":[{"nodeType":"YulAssignment","src":"20753:22:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20769:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20763:5:22"},"nodeType":"YulFunctionCall","src":"20763:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20753:6:22"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20725:5:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20735:6:22","type":""}],"src":"20683:99:22"},{"body":{"nodeType":"YulBlock","src":"20883:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20900:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"20905:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20893:6:22"},"nodeType":"YulFunctionCall","src":"20893:19:22"},"nodeType":"YulExpressionStatement","src":"20893:19:22"},{"nodeType":"YulAssignment","src":"20921:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20940:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"20945:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20936:3:22"},"nodeType":"YulFunctionCall","src":"20936:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20921:11:22"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20855:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"20860:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20871:11:22","type":""}],"src":"20788:168:22"},{"body":{"nodeType":"YulBlock","src":"21058:73:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21075:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21080:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21068:6:22"},"nodeType":"YulFunctionCall","src":"21068:19:22"},"nodeType":"YulExpressionStatement","src":"21068:19:22"},{"nodeType":"YulAssignment","src":"21096:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21115:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"21120:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21111:3:22"},"nodeType":"YulFunctionCall","src":"21111:14:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21096:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21030:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"21035:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21046:11:22","type":""}],"src":"20962:169:22"},{"body":{"nodeType":"YulBlock","src":"21251:34:22","statements":[{"nodeType":"YulAssignment","src":"21261:18:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"21276:3:22"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21261:11:22"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21223:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"21228:6:22","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21239:11:22","type":""}],"src":"21137:148:22"},{"body":{"nodeType":"YulBlock","src":"21336:51:22","statements":[{"nodeType":"YulAssignment","src":"21346:35:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21375:5:22"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"21357:17:22"},"nodeType":"YulFunctionCall","src":"21357:24:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21346:7:22"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21318:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21328:7:22","type":""}],"src":"21291:96:22"},{"body":{"nodeType":"YulBlock","src":"21435:48:22","statements":[{"nodeType":"YulAssignment","src":"21445:32:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21470:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21463:6:22"},"nodeType":"YulFunctionCall","src":"21463:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21456:6:22"},"nodeType":"YulFunctionCall","src":"21456:21:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21445:7:22"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21417:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21427:7:22","type":""}],"src":"21393:90:22"},{"body":{"nodeType":"YulBlock","src":"21533:105:22","statements":[{"nodeType":"YulAssignment","src":"21543:89:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21558:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"21565:66:22","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21554:3:22"},"nodeType":"YulFunctionCall","src":"21554:78:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21543:7:22"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21515:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21525:7:22","type":""}],"src":"21489:149:22"},{"body":{"nodeType":"YulBlock","src":"21689:81:22","statements":[{"nodeType":"YulAssignment","src":"21699:65:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21714:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"21721:42:22","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21710:3:22"},"nodeType":"YulFunctionCall","src":"21710:54:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21699:7:22"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21671:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21681:7:22","type":""}],"src":"21644:126:22"},{"body":{"nodeType":"YulBlock","src":"21821:32:22","statements":[{"nodeType":"YulAssignment","src":"21831:16:22","value":{"name":"value","nodeType":"YulIdentifier","src":"21842:5:22"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21831:7:22"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21803:5:22","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21813:7:22","type":""}],"src":"21776:77:22"},{"body":{"nodeType":"YulBlock","src":"21910:103:22","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"21933:3:22"},{"name":"src","nodeType":"YulIdentifier","src":"21938:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21943:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"21920:12:22"},"nodeType":"YulFunctionCall","src":"21920:30:22"},"nodeType":"YulExpressionStatement","src":"21920:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"21991:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"21996:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21987:3:22"},"nodeType":"YulFunctionCall","src":"21987:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"22005:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21980:6:22"},"nodeType":"YulFunctionCall","src":"21980:27:22"},"nodeType":"YulExpressionStatement","src":"21980:27:22"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"21892:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"21897:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"21902:6:22","type":""}],"src":"21859:154:22"},{"body":{"nodeType":"YulBlock","src":"22068:258:22","statements":[{"nodeType":"YulVariableDeclaration","src":"22078:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"22087:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22082:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"22147:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22172:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"22177:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22168:3:22"},"nodeType":"YulFunctionCall","src":"22168:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22191:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"22196:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22187:3:22"},"nodeType":"YulFunctionCall","src":"22187:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22181:5:22"},"nodeType":"YulFunctionCall","src":"22181:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22161:6:22"},"nodeType":"YulFunctionCall","src":"22161:39:22"},"nodeType":"YulExpressionStatement","src":"22161:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22108:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"22111:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22105:2:22"},"nodeType":"YulFunctionCall","src":"22105:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22119:19:22","statements":[{"nodeType":"YulAssignment","src":"22121:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22130:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"22133:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22126:3:22"},"nodeType":"YulFunctionCall","src":"22126:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22121:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"22101:3:22","statements":[]},"src":"22097:113:22"},{"body":{"nodeType":"YulBlock","src":"22244:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22294:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"22299:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22290:3:22"},"nodeType":"YulFunctionCall","src":"22290:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"22308:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22283:6:22"},"nodeType":"YulFunctionCall","src":"22283:27:22"},"nodeType":"YulExpressionStatement","src":"22283:27:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22225:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"22228:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22222:2:22"},"nodeType":"YulFunctionCall","src":"22222:13:22"},"nodeType":"YulIf","src":"22219:2:22"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"22050:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"22055:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"22060:6:22","type":""}],"src":"22019:307:22"},{"body":{"nodeType":"YulBlock","src":"22383:269:22","statements":[{"nodeType":"YulAssignment","src":"22393:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22407:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"22413:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22403:3:22"},"nodeType":"YulFunctionCall","src":"22403:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22393:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"22424:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22454:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"22460:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22450:3:22"},"nodeType":"YulFunctionCall","src":"22450:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"22428:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"22501:51:22","statements":[{"nodeType":"YulAssignment","src":"22515:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22529:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"22537:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22525:3:22"},"nodeType":"YulFunctionCall","src":"22525:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22515:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"22481:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22474:6:22"},"nodeType":"YulFunctionCall","src":"22474:26:22"},"nodeType":"YulIf","src":"22471:2:22"},{"body":{"nodeType":"YulBlock","src":"22604:42:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"22618:16:22"},"nodeType":"YulFunctionCall","src":"22618:18:22"},"nodeType":"YulExpressionStatement","src":"22618:18:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"22568:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22591:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"22599:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22588:2:22"},"nodeType":"YulFunctionCall","src":"22588:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22565:2:22"},"nodeType":"YulFunctionCall","src":"22565:38:22"},"nodeType":"YulIf","src":"22562:2:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22367:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22376:6:22","type":""}],"src":"22332:320:22"},{"body":{"nodeType":"YulBlock","src":"22701:238:22","statements":[{"nodeType":"YulVariableDeclaration","src":"22711:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22733:6:22"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"22763:4:22"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22741:21:22"},"nodeType":"YulFunctionCall","src":"22741:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22729:3:22"},"nodeType":"YulFunctionCall","src":"22729:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"22715:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"22880:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22882:16:22"},"nodeType":"YulFunctionCall","src":"22882:18:22"},"nodeType":"YulExpressionStatement","src":"22882:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"22823:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"22835:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22820:2:22"},"nodeType":"YulFunctionCall","src":"22820:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"22859:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"22871:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22856:2:22"},"nodeType":"YulFunctionCall","src":"22856:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22817:2:22"},"nodeType":"YulFunctionCall","src":"22817:62:22"},"nodeType":"YulIf","src":"22814:2:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22918:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"22922:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22911:6:22"},"nodeType":"YulFunctionCall","src":"22911:22:22"},"nodeType":"YulExpressionStatement","src":"22911:22:22"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22687:6:22","type":""},{"name":"size","nodeType":"YulTypedName","src":"22695:4:22","type":""}],"src":"22658:281:22"},{"body":{"nodeType":"YulBlock","src":"22973:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22990:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22993:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22983:6:22"},"nodeType":"YulFunctionCall","src":"22983:88:22"},"nodeType":"YulExpressionStatement","src":"22983:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23087:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23090:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23080:6:22"},"nodeType":"YulFunctionCall","src":"23080:15:22"},"nodeType":"YulExpressionStatement","src":"23080:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23111:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23114:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23104:6:22"},"nodeType":"YulFunctionCall","src":"23104:15:22"},"nodeType":"YulExpressionStatement","src":"23104:15:22"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"22945:180:22"},{"body":{"nodeType":"YulBlock","src":"23159:152:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23176:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23179:77:22","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23169:6:22"},"nodeType":"YulFunctionCall","src":"23169:88:22"},"nodeType":"YulExpressionStatement","src":"23169:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23273:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23276:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23266:6:22"},"nodeType":"YulFunctionCall","src":"23266:15:22"},"nodeType":"YulExpressionStatement","src":"23266:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23297:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23300:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23290:6:22"},"nodeType":"YulFunctionCall","src":"23290:15:22"},"nodeType":"YulExpressionStatement","src":"23290:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"23131:180:22"},{"body":{"nodeType":"YulBlock","src":"23365:54:22","statements":[{"nodeType":"YulAssignment","src":"23375:38:22","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23393:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"23400:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23389:3:22"},"nodeType":"YulFunctionCall","src":"23389:14:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23409:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23405:3:22"},"nodeType":"YulFunctionCall","src":"23405:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23385:3:22"},"nodeType":"YulFunctionCall","src":"23385:28:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"23375:6:22"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23348:5:22","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"23358:6:22","type":""}],"src":"23317:102:22"},{"body":{"nodeType":"YulBlock","src":"23531:126:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23553:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"23561:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23549:3:22"},"nodeType":"YulFunctionCall","src":"23549:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"23565:34:22","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23542:6:22"},"nodeType":"YulFunctionCall","src":"23542:58:22"},"nodeType":"YulExpressionStatement","src":"23542:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23621:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"23629:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23617:3:22"},"nodeType":"YulFunctionCall","src":"23617:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"23634:15:22","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23610:6:22"},"nodeType":"YulFunctionCall","src":"23610:40:22"},"nodeType":"YulExpressionStatement","src":"23610:40:22"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23523:6:22","type":""}],"src":"23425:232:22"},{"body":{"nodeType":"YulBlock","src":"23769:131:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23791:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"23799:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23787:3:22"},"nodeType":"YulFunctionCall","src":"23787:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"23803:34:22","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23780:6:22"},"nodeType":"YulFunctionCall","src":"23780:58:22"},"nodeType":"YulExpressionStatement","src":"23780:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23859:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"23867:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23855:3:22"},"nodeType":"YulFunctionCall","src":"23855:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"23872:20:22","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23848:6:22"},"nodeType":"YulFunctionCall","src":"23848:45:22"},"nodeType":"YulExpressionStatement","src":"23848:45:22"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23761:6:22","type":""}],"src":"23663:237:22"},{"body":{"nodeType":"YulBlock","src":"24012:118:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24034:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24042:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24030:3:22"},"nodeType":"YulFunctionCall","src":"24030:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"24046:34:22","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24023:6:22"},"nodeType":"YulFunctionCall","src":"24023:58:22"},"nodeType":"YulExpressionStatement","src":"24023:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24102:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24110:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24098:3:22"},"nodeType":"YulFunctionCall","src":"24098:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"24115:7:22","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24091:6:22"},"nodeType":"YulFunctionCall","src":"24091:32:22"},"nodeType":"YulExpressionStatement","src":"24091:32:22"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24004:6:22","type":""}],"src":"23906:224:22"},{"body":{"nodeType":"YulBlock","src":"24242:72:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24264:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24272:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24260:3:22"},"nodeType":"YulFunctionCall","src":"24260:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"24276:30:22","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24253:6:22"},"nodeType":"YulFunctionCall","src":"24253:54:22"},"nodeType":"YulExpressionStatement","src":"24253:54:22"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24234:6:22","type":""}],"src":"24136:178:22"},{"body":{"nodeType":"YulBlock","src":"24426:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24448:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24456:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24444:3:22"},"nodeType":"YulFunctionCall","src":"24444:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"24460:34:22","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24437:6:22"},"nodeType":"YulFunctionCall","src":"24437:58:22"},"nodeType":"YulExpressionStatement","src":"24437:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24516:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24524:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24512:3:22"},"nodeType":"YulFunctionCall","src":"24512:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"24529:6:22","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24505:6:22"},"nodeType":"YulFunctionCall","src":"24505:31:22"},"nodeType":"YulExpressionStatement","src":"24505:31:22"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24418:6:22","type":""}],"src":"24320:223:22"},{"body":{"nodeType":"YulBlock","src":"24655:69:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24677:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24685:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24673:3:22"},"nodeType":"YulFunctionCall","src":"24673:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"24689:27:22","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24666:6:22"},"nodeType":"YulFunctionCall","src":"24666:51:22"},"nodeType":"YulExpressionStatement","src":"24666:51:22"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24647:6:22","type":""}],"src":"24549:175:22"},{"body":{"nodeType":"YulBlock","src":"24836:122:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24858:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24866:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24854:3:22"},"nodeType":"YulFunctionCall","src":"24854:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"24870:34:22","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24847:6:22"},"nodeType":"YulFunctionCall","src":"24847:58:22"},"nodeType":"YulExpressionStatement","src":"24847:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24926:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"24934:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24922:3:22"},"nodeType":"YulFunctionCall","src":"24922:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"24939:11:22","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24915:6:22"},"nodeType":"YulFunctionCall","src":"24915:36:22"},"nodeType":"YulExpressionStatement","src":"24915:36:22"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24828:6:22","type":""}],"src":"24730:228:22"},{"body":{"nodeType":"YulBlock","src":"25070:127:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25092:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25100:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25088:3:22"},"nodeType":"YulFunctionCall","src":"25088:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"25104:34:22","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25081:6:22"},"nodeType":"YulFunctionCall","src":"25081:58:22"},"nodeType":"YulExpressionStatement","src":"25081:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25160:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25168:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25156:3:22"},"nodeType":"YulFunctionCall","src":"25156:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"25173:16:22","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25149:6:22"},"nodeType":"YulFunctionCall","src":"25149:41:22"},"nodeType":"YulExpressionStatement","src":"25149:41:22"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25062:6:22","type":""}],"src":"24964:233:22"},{"body":{"nodeType":"YulBlock","src":"25309:76:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25331:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25339:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25327:3:22"},"nodeType":"YulFunctionCall","src":"25327:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"25343:34:22","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25320:6:22"},"nodeType":"YulFunctionCall","src":"25320:58:22"},"nodeType":"YulExpressionStatement","src":"25320:58:22"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25301:6:22","type":""}],"src":"25203:182:22"},{"body":{"nodeType":"YulBlock","src":"25497:68:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25519:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25527:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25515:3:22"},"nodeType":"YulFunctionCall","src":"25515:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"25531:26:22","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25508:6:22"},"nodeType":"YulFunctionCall","src":"25508:50:22"},"nodeType":"YulExpressionStatement","src":"25508:50:22"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25489:6:22","type":""}],"src":"25391:174:22"},{"body":{"nodeType":"YulBlock","src":"25677:114:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25699:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25707:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25695:3:22"},"nodeType":"YulFunctionCall","src":"25695:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"25711:34:22","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25688:6:22"},"nodeType":"YulFunctionCall","src":"25688:58:22"},"nodeType":"YulExpressionStatement","src":"25688:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25767:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25775:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25763:3:22"},"nodeType":"YulFunctionCall","src":"25763:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"25780:3:22","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25756:6:22"},"nodeType":"YulFunctionCall","src":"25756:28:22"},"nodeType":"YulExpressionStatement","src":"25756:28:22"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25669:6:22","type":""}],"src":"25571:220:22"},{"body":{"nodeType":"YulBlock","src":"25903:142:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25925:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"25933:1:22","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25921:3:22"},"nodeType":"YulFunctionCall","src":"25921:14:22"},{"kind":"string","nodeType":"YulLiteral","src":"25937:34:22","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25914:6:22"},"nodeType":"YulFunctionCall","src":"25914:58:22"},"nodeType":"YulExpressionStatement","src":"25914:58:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25993:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"26001:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25989:3:22"},"nodeType":"YulFunctionCall","src":"25989:15:22"},{"kind":"string","nodeType":"YulLiteral","src":"26006:31:22","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25982:6:22"},"nodeType":"YulFunctionCall","src":"25982:56:22"},"nodeType":"YulExpressionStatement","src":"25982:56:22"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25895:6:22","type":""}],"src":"25797:248:22"},{"body":{"nodeType":"YulBlock","src":"26094:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"26151:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26160:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26163:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26153:6:22"},"nodeType":"YulFunctionCall","src":"26153:12:22"},"nodeType":"YulExpressionStatement","src":"26153:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26117:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26142:5:22"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"26124:17:22"},"nodeType":"YulFunctionCall","src":"26124:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26114:2:22"},"nodeType":"YulFunctionCall","src":"26114:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26107:6:22"},"nodeType":"YulFunctionCall","src":"26107:43:22"},"nodeType":"YulIf","src":"26104:2:22"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26087:5:22","type":""}],"src":"26051:122:22"},{"body":{"nodeType":"YulBlock","src":"26219:76:22","statements":[{"body":{"nodeType":"YulBlock","src":"26273:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26282:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26285:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26275:6:22"},"nodeType":"YulFunctionCall","src":"26275:12:22"},"nodeType":"YulExpressionStatement","src":"26275:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26242:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26264:5:22"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"26249:14:22"},"nodeType":"YulFunctionCall","src":"26249:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26239:2:22"},"nodeType":"YulFunctionCall","src":"26239:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26232:6:22"},"nodeType":"YulFunctionCall","src":"26232:40:22"},"nodeType":"YulIf","src":"26229:2:22"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26212:5:22","type":""}],"src":"26179:116:22"},{"body":{"nodeType":"YulBlock","src":"26343:78:22","statements":[{"body":{"nodeType":"YulBlock","src":"26399:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26408:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26411:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26401:6:22"},"nodeType":"YulFunctionCall","src":"26401:12:22"},"nodeType":"YulExpressionStatement","src":"26401:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26366:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26390:5:22"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"26373:16:22"},"nodeType":"YulFunctionCall","src":"26373:23:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26363:2:22"},"nodeType":"YulFunctionCall","src":"26363:34:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26356:6:22"},"nodeType":"YulFunctionCall","src":"26356:42:22"},"nodeType":"YulIf","src":"26353:2:22"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26336:5:22","type":""}],"src":"26301:120:22"},{"body":{"nodeType":"YulBlock","src":"26470:79:22","statements":[{"body":{"nodeType":"YulBlock","src":"26527:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26536:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26539:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26529:6:22"},"nodeType":"YulFunctionCall","src":"26529:12:22"},"nodeType":"YulExpressionStatement","src":"26529:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26493:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26518:5:22"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26500:17:22"},"nodeType":"YulFunctionCall","src":"26500:24:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26490:2:22"},"nodeType":"YulFunctionCall","src":"26490:35:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26483:6:22"},"nodeType":"YulFunctionCall","src":"26483:43:22"},"nodeType":"YulIf","src":"26480:2:22"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26463:5:22","type":""}],"src":"26427:122:22"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100fe5760003560e01c8063938e3d7b11610095578063b88d4fde11610064578063b88d4fde14610345578063c87b56dd1461036e578063d0def521146103ab578063e8a3d485146103db578063e985e9c514610406576100fe565b8063938e3d7b1461029d57806395d89b41146102c6578063a22cb465146102f1578063b00a29971461031a576100fe565b806323b872dd116100d157806323b872dd146101d157806342842e0e146101fa5780636352211e1461022357806370a0823114610260576100fe565b806301ffc9a71461010357806306fdde0314610140578063081812fc1461016b578063095ea7b3146101a8575b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190612181565b610443565b604051610137919061253c565b60405180910390f35b34801561014c57600080fd5b506101556104a4565b6040516101629190612557565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190612214565b610536565b60405161019f91906124d5565b60405180910390f35b3480156101b457600080fd5b506101cf60048036038101906101ca9190612145565b61057c565b005b3480156101dd57600080fd5b506101f860048036038101906101f39190611feb565b610694565b005b34801561020657600080fd5b50610221600480360381019061021c9190611feb565b6106f4565b005b34801561022f57600080fd5b5061024a60048036038101906102459190612214565b610714565b60405161025791906124d5565b60405180910390f35b34801561026c57600080fd5b5061028760048036038101906102829190611f86565b61079b565b60405161029491906126f9565b60405180910390f35b3480156102a957600080fd5b506102c460048036038101906102bf91906121d3565b610853565b005b3480156102d257600080fd5b506102db61086d565b6040516102e89190612557565b60405180910390f35b3480156102fd57600080fd5b50610318600480360381019061031391906120b5565b6108ff565b005b34801561032657600080fd5b5061032f610915565b60405161033c9190612557565b60405180910390f35b34801561035157600080fd5b5061036c6004803603810190610367919061203a565b6109a3565b005b34801561037a57600080fd5b5061039560048036038101906103909190612214565b610a05565b6040516103a29190612557565b60405180910390f35b6103c560048036038101906103c091906120f1565b610b18565b6040516103d291906126f9565b60405180910390f35b3480156103e757600080fd5b506103f0610b50565b6040516103fd9190612557565b60405180910390f35b34801561041257600080fd5b5061042d60048036038101906104289190611faf565b610be2565b60405161043a919061253c565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061049d575061049c82610c76565b5b9050919050565b6060600080546104b390612894565b80601f01602080910402602001604051908101604052809291908181526020018280546104df90612894565b801561052c5780601f106105015761010080835404028352916020019161052c565b820191906000526020600020905b81548152906001019060200180831161050f57829003601f168201915b5050505050905090565b600061054182610d58565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061058782610714565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ef906126b9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610617610da3565b73ffffffffffffffffffffffffffffffffffffffff161480610646575061064581610640610da3565b610be2565b5b610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c906126d9565b60405180910390fd5b61068f8383610dab565b505050565b6106a561069f610da3565b82610e64565b6106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90612579565b60405180910390fd5b6106ef838383610ef9565b505050565b61070f838383604051806020016040528060008152506109a3565b505050565b600080610720836111f3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078990612699565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561080c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080390612639565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8060089080519060200190610869929190611daa565b5050565b60606001805461087c90612894565b80601f01602080910402602001604051908101604052809291908181526020018280546108a890612894565b80156108f55780601f106108ca576101008083540402835291602001916108f5565b820191906000526020600020905b8154815290600101906020018083116108d857829003601f168201915b5050505050905090565b61091161090a610da3565b8383611230565b5050565b6008805461092290612894565b80601f016020809104026020016040519081016040528092919081815260200182805461094e90612894565b801561099b5780601f106109705761010080835404028352916020019161099b565b820191906000526020600020905b81548152906001019060200180831161097e57829003601f168201915b505050505081565b6109b46109ae610da3565b83610e64565b6109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea90612579565b60405180910390fd5b6109ff8484848461139d565b50505050565b6060610a1082610d58565b6000600660008481526020019081526020016000208054610a3090612894565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5c90612894565b8015610aa95780601f10610a7e57610100808354040283529160200191610aa9565b820191906000526020600020905b815481529060010190602001808311610a8c57829003601f168201915b505050505090506000610aba6113f9565b9050600081511415610ad0578192505050610b13565b600082511115610b05578082604051602001610aed9291906124b1565b60405160208183030381529060405292505050610b13565b610b0e84611410565b925050505b919050565b6000610b246007611478565b6000610b30600761148e565b9050610b3c848261149c565b610b4681846114ba565b8091505092915050565b606060088054610b5f90612894565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8b90612894565b8015610bd85780601f10610bad57610100808354040283529160200191610bd8565b820191906000526020600020905b815481529060010190602001808311610bbb57829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d4157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610d515750610d5082611565565b5b9050919050565b610d61816115cf565b610da0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9790612699565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610e1e83610714565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e7083610714565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610eb25750610eb18185610be2565b5b80610ef057508373ffffffffffffffffffffffffffffffffffffffff16610ed884610536565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610f1982610714565b73ffffffffffffffffffffffffffffffffffffffff1614610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f66906125b9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd6906125f9565b60405180910390fd5b610fec8383836001611610565b8273ffffffffffffffffffffffffffffffffffffffff1661100c82610714565b73ffffffffffffffffffffffffffffffffffffffff1614611062576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611059906125b9565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46111ee8383836001611616565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561129f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129690612619565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611390919061253c565b60405180910390a3505050565b6113a8848484610ef9565b6113b48484848461161c565b6113f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ea90612599565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606061141b82610d58565b60006114256113f9565b905060008151116114455760405180602001604052806000815250611470565b8061144f846117b3565b6040516020016114609291906124b1565b6040516020818303038152906040525b915050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6114b68282604051806020016040528060008152506118d7565b5050565b6114c3826115cf565b611502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f990612659565b60405180910390fd5b80600660008481526020019081526020016000209080519060200190611529929190611daa565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce78260405161155991906126f9565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166115f1836111f3565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b600061163d8473ffffffffffffffffffffffffffffffffffffffff16611932565b156117a6578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611666610da3565b8786866040518563ffffffff1660e01b815260040161168894939291906124f0565b602060405180830381600087803b1580156116a257600080fd5b505af19250505080156116d357506040513d601f19601f820116820180604052508101906116d091906121aa565b60015b611756573d8060008114611703576040519150601f19603f3d011682016040523d82523d6000602084013e611708565b606091505b5060008151141561174e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174590612599565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506117ab565b600190505b949350505050565b6060600060016117c284611955565b01905060008167ffffffffffffffff811115611807577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156118395781602001600182028036833780820191505090505b509050600082602001820190505b6001156118cc578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04945060008514156118c7576118cc565b611847565b819350505050919050565b6118e18383611b8c565b6118ee600084848461161c565b61192d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192490612599565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119d9577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a3c576d04ee2d6d415b85acef81000000008381611a32577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506020810190505b662386f26fc100008310611a9157662386f26fc100008381611a87577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506010810190505b6305f5e1008310611ae0576305f5e1008381611ad6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506008810190505b6127108310611b2b576127108381611b21577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506004810190505b60648310611b745760648381611b6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b0492506002810190505b600a8310611b83576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf390612679565b60405180910390fd5b611c05816115cf565b15611c45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3c906125d9565b60405180910390fd5b611c53600083836001611610565b611c5c816115cf565b15611c9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c93906125d9565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611da6600083836001611616565b5050565b828054611db690612894565b90600052602060002090601f016020900481019282611dd85760008555611e1f565b82601f10611df157805160ff1916838001178555611e1f565b82800160010185558215611e1f579182015b82811115611e1e578251825591602001919060010190611e03565b5b509050611e2c9190611e30565b5090565b5b80821115611e49576000816000905550600101611e31565b5090565b6000611e60611e5b84612739565b612714565b905082815260208101848484011115611e7857600080fd5b611e83848285612852565b509392505050565b6000611e9e611e998461276a565b612714565b905082815260208101848484011115611eb657600080fd5b611ec1848285612852565b509392505050565b600081359050611ed881612c82565b92915050565b600081359050611eed81612c99565b92915050565b600081359050611f0281612cb0565b92915050565b600081519050611f1781612cb0565b92915050565b600082601f830112611f2e57600080fd5b8135611f3e848260208601611e4d565b91505092915050565b600082601f830112611f5857600080fd5b8135611f68848260208601611e8b565b91505092915050565b600081359050611f8081612cc7565b92915050565b600060208284031215611f9857600080fd5b6000611fa684828501611ec9565b91505092915050565b60008060408385031215611fc257600080fd5b6000611fd085828601611ec9565b9250506020611fe185828601611ec9565b9150509250929050565b60008060006060848603121561200057600080fd5b600061200e86828701611ec9565b935050602061201f86828701611ec9565b925050604061203086828701611f71565b9150509250925092565b6000806000806080858703121561205057600080fd5b600061205e87828801611ec9565b945050602061206f87828801611ec9565b935050604061208087828801611f71565b925050606085013567ffffffffffffffff81111561209d57600080fd5b6120a987828801611f1d565b91505092959194509250565b600080604083850312156120c857600080fd5b60006120d685828601611ec9565b92505060206120e785828601611ede565b9150509250929050565b6000806040838503121561210457600080fd5b600061211285828601611ec9565b925050602083013567ffffffffffffffff81111561212f57600080fd5b61213b85828601611f47565b9150509250929050565b6000806040838503121561215857600080fd5b600061216685828601611ec9565b925050602061217785828601611f71565b9150509250929050565b60006020828403121561219357600080fd5b60006121a184828501611ef3565b91505092915050565b6000602082840312156121bc57600080fd5b60006121ca84828501611f08565b91505092915050565b6000602082840312156121e557600080fd5b600082013567ffffffffffffffff8111156121ff57600080fd5b61220b84828501611f47565b91505092915050565b60006020828403121561222657600080fd5b600061223484828501611f71565b91505092915050565b612246816127de565b82525050565b612255816127f0565b82525050565b60006122668261279b565b61227081856127b1565b9350612280818560208601612861565b61228981612955565b840191505092915050565b600061229f826127a6565b6122a981856127c2565b93506122b9818560208601612861565b6122c281612955565b840191505092915050565b60006122d8826127a6565b6122e281856127d3565b93506122f2818560208601612861565b80840191505092915050565b600061230b602d836127c2565b915061231682612966565b604082019050919050565b600061232e6032836127c2565b9150612339826129b5565b604082019050919050565b60006123516025836127c2565b915061235c82612a04565b604082019050919050565b6000612374601c836127c2565b915061237f82612a53565b602082019050919050565b60006123976024836127c2565b91506123a282612a7c565b604082019050919050565b60006123ba6019836127c2565b91506123c582612acb565b602082019050919050565b60006123dd6029836127c2565b91506123e882612af4565b604082019050919050565b6000612400602e836127c2565b915061240b82612b43565b604082019050919050565b60006124236020836127c2565b915061242e82612b92565b602082019050919050565b60006124466018836127c2565b915061245182612bbb565b602082019050919050565b60006124696021836127c2565b915061247482612be4565b604082019050919050565b600061248c603d836127c2565b915061249782612c33565b604082019050919050565b6124ab81612848565b82525050565b60006124bd82856122cd565b91506124c982846122cd565b91508190509392505050565b60006020820190506124ea600083018461223d565b92915050565b6000608082019050612505600083018761223d565b612512602083018661223d565b61251f60408301856124a2565b8181036060830152612531818461225b565b905095945050505050565b6000602082019050612551600083018461224c565b92915050565b600060208201905081810360008301526125718184612294565b905092915050565b60006020820190508181036000830152612592816122fe565b9050919050565b600060208201905081810360008301526125b281612321565b9050919050565b600060208201905081810360008301526125d281612344565b9050919050565b600060208201905081810360008301526125f281612367565b9050919050565b600060208201905081810360008301526126128161238a565b9050919050565b60006020820190508181036000830152612632816123ad565b9050919050565b60006020820190508181036000830152612652816123d0565b9050919050565b60006020820190508181036000830152612672816123f3565b9050919050565b6000602082019050818103600083015261269281612416565b9050919050565b600060208201905081810360008301526126b281612439565b9050919050565b600060208201905081810360008301526126d28161245c565b9050919050565b600060208201905081810360008301526126f28161247f565b9050919050565b600060208201905061270e60008301846124a2565b92915050565b600061271e61272f565b905061272a82826128c6565b919050565b6000604051905090565b600067ffffffffffffffff82111561275457612753612926565b5b61275d82612955565b9050602081019050919050565b600067ffffffffffffffff82111561278557612784612926565b5b61278e82612955565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006127e982612828565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561287f578082015181840152602081019050612864565b8381111561288e576000848401525b50505050565b600060028204905060018216806128ac57607f821691505b602082108114156128c0576128bf6128f7565b5b50919050565b6128cf82612955565b810181811067ffffffffffffffff821117156128ee576128ed612926565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b612c8b816127de565b8114612c9657600080fd5b50565b612ca2816127f0565b8114612cad57600080fd5b50565b612cb9816127fc565b8114612cc457600080fd5b50565b612cd081612848565b8114612cdb57600080fd5b5056fea264697066735822122069de91dc0fb2f41678f73be522f11358f1de9eacc216d9739220e366f3ed7c2964736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x938E3D7B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x406 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xB00A2997 EQ PUSH2 0x31A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x260 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1F86 JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH2 0x853 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DB PUSH2 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x203A JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F0 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FD SWAP2 SWAP1 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x49D JUMPI POP PUSH2 0x49C DUP3 PUSH2 0xC76 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4B3 SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4DF SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x501 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x50F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x541 DUP3 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x587 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP1 PUSH2 0x26B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x617 PUSH2 0xDA3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x646 JUMPI POP PUSH2 0x645 DUP2 PUSH2 0x640 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68F DUP4 DUP4 PUSH2 0xDAB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6A5 PUSH2 0x69F PUSH2 0xDA3 JUMP JUMPDEST DUP3 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6EF DUP4 DUP4 DUP4 PUSH2 0xEF9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x70F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x720 DUP4 PUSH2 0x11F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x789 SWAP1 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x803 SWAP1 PUSH2 0x2639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x869 SWAP3 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x87C SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A8 SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x911 PUSH2 0x90A PUSH2 0xDA3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1230 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x922 SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x94E SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x99B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x970 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x9B4 PUSH2 0x9AE PUSH2 0xDA3 JUMP JUMPDEST DUP4 PUSH2 0xE64 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9FF DUP5 DUP5 DUP5 DUP5 PUSH2 0x139D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA10 DUP3 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xA30 SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5C SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xABA PUSH2 0x13F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xAD0 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xB05 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAED SWAP3 SWAP2 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xB13 JUMP JUMPDEST PUSH2 0xB0E DUP5 PUSH2 0x1410 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB24 PUSH1 0x7 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB30 PUSH1 0x7 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP PUSH2 0xB3C DUP5 DUP3 PUSH2 0x149C JUMP JUMPDEST PUSH2 0xB46 DUP2 DUP5 PUSH2 0x14BA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0xB5F SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8B SWAP1 PUSH2 0x2894 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xD41 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xD51 JUMPI POP PUSH2 0xD50 DUP3 PUSH2 0x1565 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD61 DUP2 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD97 SWAP1 PUSH2 0x2699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1E DUP4 PUSH2 0x714 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE70 DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xEB2 JUMPI POP PUSH2 0xEB1 DUP2 DUP6 PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xEF0 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xED8 DUP5 PUSH2 0x536 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF19 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD6 SWAP1 PUSH2 0x25F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFEC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1610 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100C DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1062 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1059 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11EE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1616 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x129F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1296 SWAP1 PUSH2 0x2619 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1390 SWAP2 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13A8 DUP5 DUP5 DUP5 PUSH2 0xEF9 JUMP JUMPDEST PUSH2 0x13B4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13EA SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x141B DUP3 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1425 PUSH2 0x13F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1445 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1470 JUMP JUMPDEST DUP1 PUSH2 0x144F DUP5 PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1460 SWAP3 SWAP2 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x18D7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14C3 DUP3 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x1502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F9 SWAP1 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1529 SWAP3 SWAP2 SWAP1 PUSH2 0x1DAA JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1559 SWAP2 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15F1 DUP4 PUSH2 0x11F3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1932 JUMP JUMPDEST ISZERO PUSH2 0x17A6 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1666 PUSH2 0xDA3 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1688 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16D3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16D0 SWAP2 SWAP1 PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1756 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1703 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x174E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1745 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x17C2 DUP5 PUSH2 0x1955 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1807 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1839 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x18CC JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x18B6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x18C7 JUMPI PUSH2 0x18CC JUMP JUMPDEST PUSH2 0x1847 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E1 DUP4 DUP4 PUSH2 0x1B8C JUMP JUMPDEST PUSH2 0x18EE PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1924 SWAP1 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19D9 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A3C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A32 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A91 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A87 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1AE0 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1AD6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1B2B JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1B21 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B74 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1B6A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1B83 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF3 SWAP1 PUSH2 0x2679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C05 DUP2 PUSH2 0x15CF JUMP JUMPDEST ISZERO PUSH2 0x1C45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3C SWAP1 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C53 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1610 JUMP JUMPDEST PUSH2 0x1C5C DUP2 PUSH2 0x15CF JUMP JUMPDEST ISZERO PUSH2 0x1C9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C93 SWAP1 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1DA6 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1616 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1DB6 SWAP1 PUSH2 0x2894 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1DD8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1E1F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1DF1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1E1F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1E1F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E1E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1E03 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1E2C SWAP2 SWAP1 PUSH2 0x1E30 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E49 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1E31 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E60 PUSH2 0x1E5B DUP5 PUSH2 0x2739 JUMP JUMPDEST PUSH2 0x2714 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E83 DUP5 DUP3 DUP6 PUSH2 0x2852 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E9E PUSH2 0x1E99 DUP5 PUSH2 0x276A JUMP JUMPDEST PUSH2 0x2714 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC1 DUP5 DUP3 DUP6 PUSH2 0x2852 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ED8 DUP2 PUSH2 0x2C82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EED DUP2 PUSH2 0x2C99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F02 DUP2 PUSH2 0x2CB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F17 DUP2 PUSH2 0x2CB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F3E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F68 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F80 DUP2 PUSH2 0x2CC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FA6 DUP5 DUP3 DUP6 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200E DUP7 DUP3 DUP8 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x201F DUP7 DUP3 DUP8 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2030 DUP7 DUP3 DUP8 ADD PUSH2 0x1F71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x205E DUP8 DUP3 DUP9 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x206F DUP8 DUP3 DUP9 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2080 DUP8 DUP3 DUP9 ADD PUSH2 0x1F71 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20A9 DUP8 DUP3 DUP9 ADD PUSH2 0x1F1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20E7 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2112 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x212F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213B DUP6 DUP3 DUP7 ADD PUSH2 0x1F47 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2166 DUP6 DUP3 DUP7 ADD PUSH2 0x1EC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2177 DUP6 DUP3 DUP7 ADD PUSH2 0x1F71 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21A1 DUP5 DUP3 DUP6 ADD PUSH2 0x1EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21CA DUP5 DUP3 DUP6 ADD PUSH2 0x1F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x220B DUP5 DUP3 DUP6 ADD PUSH2 0x1F47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2234 DUP5 DUP3 DUP6 ADD PUSH2 0x1F71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2246 DUP2 PUSH2 0x27DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2255 DUP2 PUSH2 0x27F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2266 DUP3 PUSH2 0x279B JUMP JUMPDEST PUSH2 0x2270 DUP2 DUP6 PUSH2 0x27B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2280 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x2289 DUP2 PUSH2 0x2955 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229F DUP3 PUSH2 0x27A6 JUMP JUMPDEST PUSH2 0x22A9 DUP2 DUP6 PUSH2 0x27C2 JUMP JUMPDEST SWAP4 POP PUSH2 0x22B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x2955 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D8 DUP3 PUSH2 0x27A6 JUMP JUMPDEST PUSH2 0x22E2 DUP2 DUP6 PUSH2 0x27D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x22F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2861 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x230B PUSH1 0x2D DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2316 DUP3 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232E PUSH1 0x32 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2339 DUP3 PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2351 PUSH1 0x25 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x235C DUP3 PUSH2 0x2A04 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2374 PUSH1 0x1C DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x237F DUP3 PUSH2 0x2A53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2397 PUSH1 0x24 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A2 DUP3 PUSH2 0x2A7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BA PUSH1 0x19 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23C5 DUP3 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DD PUSH1 0x29 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23E8 DUP3 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2400 PUSH1 0x2E DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x240B DUP3 PUSH2 0x2B43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2423 PUSH1 0x20 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x242E DUP3 PUSH2 0x2B92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2446 PUSH1 0x18 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2451 DUP3 PUSH2 0x2BBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2469 PUSH1 0x21 DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2474 DUP3 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248C PUSH1 0x3D DUP4 PUSH2 0x27C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2497 DUP3 PUSH2 0x2C33 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AB DUP2 PUSH2 0x2848 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BD DUP3 DUP6 PUSH2 0x22CD JUMP JUMPDEST SWAP2 POP PUSH2 0x24C9 DUP3 DUP5 PUSH2 0x22CD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x223D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2505 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x2512 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x251F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x24A2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2531 DUP2 DUP5 PUSH2 0x225B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x224C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2571 DUP2 DUP5 PUSH2 0x2294 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2592 DUP2 PUSH2 0x22FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25B2 DUP2 PUSH2 0x2321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25D2 DUP2 PUSH2 0x2344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F2 DUP2 PUSH2 0x2367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2612 DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2632 DUP2 PUSH2 0x23AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2652 DUP2 PUSH2 0x23D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2672 DUP2 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2692 DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B2 DUP2 PUSH2 0x2439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D2 DUP2 PUSH2 0x245C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F2 DUP2 PUSH2 0x247F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x271E PUSH2 0x272F JUMP JUMPDEST SWAP1 POP PUSH2 0x272A DUP3 DUP3 PUSH2 0x28C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2754 JUMPI PUSH2 0x2753 PUSH2 0x2926 JUMP JUMPDEST JUMPDEST PUSH2 0x275D DUP3 PUSH2 0x2955 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2785 JUMPI PUSH2 0x2784 PUSH2 0x2926 JUMP JUMPDEST JUMPDEST PUSH2 0x278E DUP3 PUSH2 0x2955 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E9 DUP3 PUSH2 0x2828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x287F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2864 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x288E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x28AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x28C0 JUMPI PUSH2 0x28BF PUSH2 0x28F7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28CF DUP3 PUSH2 0x2955 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x28EE JUMPI PUSH2 0x28ED PUSH2 0x2926 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2C8B DUP2 PUSH2 0x27DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2C96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2CA2 DUP2 PUSH2 0x27F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2CB9 DUP2 PUSH2 0x27FC JUMP JUMPDEST DUP2 EQ PUSH2 0x2CC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2CD0 DUP2 PUSH2 0x2848 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xDE91DC0FB2F41678F73B 0xE5 0x22 CALL SGT PC CALL 0xDE SWAP15 0xAC 0xC2 AND 0xD9 PUSH20 0x9220E366F3ED7C2964736F6C6343000801003300 ","sourceMap":"652:2598:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:205:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2746:122:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2633:102:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;861:31:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5189:276:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;806:608:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1146:1094:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2248:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;535:205:9;637:4;682:10;675:18;;660:33;;;:11;:33;;;;:73;;;;697:36;721:11;697:23;:36::i;:::-;660:73;653:80;;535:205;;;:::o;2471:98:5:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3468:406;;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2746:122:21:-;2842:18;2822:17;:38;;;;;;;;;;;;:::i;:::-;;2746:122;:::o;2633:102:5:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;861:31:21:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5189:276:5:-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;806:608:9:-;879:13;904:23;919:7;904:14;:23::i;:::-;938;964:10;:19;975:7;964:19;;;;;;;;;;;938:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:18;1014:10;:8;:10::i;:::-;993:31;;1119:1;1103:4;1097:18;:23;1093:70;;;1143:9;1136:16;;;;;;1093:70;1291:1;1271:9;1265:23;:27;1261:106;;;1339:4;1345:9;1322:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1308:48;;;;;;1261:106;1384:23;1399:7;1384:14;:23::i;:::-;1377:30;;;;806:608;;;;:::o;1146:1094:21:-;1229:7;1249:26;:14;:24;:26::i;:::-;1286:17;1306:24;:14;:22;:24::i;:::-;1286:44;;1341:31;1351:9;1362;1341;:31::i;:::-;1383:33;1396:9;1407:8;1383:12;:33::i;:::-;2223:9;2216:16;;;1146:1094;;;;:::o;2248:102::-;2292:13;2325:17;2318:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2248:102;:::o;4388:162:5:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;1570:300::-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;13240:133::-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:13:-;693:7;719:10;712:17;;640:96;:::o;12572:171:5:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;945:123:14:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;7995:108:5:-;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;:9;:26::i;:::-;7995:108;;:::o;1599:253:9:-;1698:16;1706:7;1698;:16::i;:::-;1690:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1797:9;1775:10;:19;1786:7;1775:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1822:23;1837:7;1822:23;;;;;;:::i;:::-;;;;;;;;1599:253;;:::o;829:155:16:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7120:126:5:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;447:696:15:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;;;;;;;;;;;;1077:1;1068:5;:10;1064:21;;;1080:5;;1064:21;820:280;;;1120:6;1113:13;;;;;447:696;;;:::o;8324:279:5:-;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8324:279;;;:::o;1412:320:12:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;10139:916:18:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;;;;;;;;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;;;;;;;;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;;;;;;;;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;;;;;;;;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;;;;;;;;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;;;;;;;;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;8925:920:5:-;9018:1;9004:16;;:2;:16;;;;8996:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9076:16;9084:7;9076;:16::i;:::-;9075:17;9067:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;9280:16;9288:7;9280;:16::i;:::-;9279:17;9271:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9688:1;9671:9;:13;9681:2;9671:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9729:2;9710:7;:16;9718:7;9710:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9772:7;9768:2;9747:33;;9764:1;9747:33;;;;;;;;;;;;9791:47;9819:1;9823:2;9827:7;9836:1;9791:19;:47::i;:::-;8925:920;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:343:22:-;;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:345::-;;459:66;475:49;517:6;475:49;:::i;:::-;459:66;:::i;:::-;450:75;;548:6;541:5;534:21;586:4;579:5;575:16;624:3;615:6;610:3;606:16;603:25;600:2;;;641:1;638;631:12;600:2;654:41;688:6;683:3;678;654:41;:::i;:::-;440:261;;;;;;:::o;707:139::-;;791:6;778:20;769:29;;807:33;834:5;807:33;:::i;:::-;759:87;;;;:::o;852:133::-;;933:6;920:20;911:29;;949:30;973:5;949:30;:::i;:::-;901:84;;;;:::o;991:137::-;;1074:6;1061:20;1052:29;;1090:32;1116:5;1090:32;:::i;:::-;1042:86;;;;:::o;1134:141::-;;1221:6;1215:13;1206:22;;1237:32;1263:5;1237:32;:::i;:::-;1196:79;;;;:::o;1294:271::-;;1398:3;1391:4;1383:6;1379:17;1375:27;1365:2;;1416:1;1413;1406:12;1365:2;1456:6;1443:20;1481:78;1555:3;1547:6;1540:4;1532:6;1528:17;1481:78;:::i;:::-;1472:87;;1355:210;;;;;:::o;1585:273::-;;1690:3;1683:4;1675:6;1671:17;1667:27;1657:2;;1708:1;1705;1698:12;1657:2;1748:6;1735:20;1773:79;1848:3;1840:6;1833:4;1825:6;1821:17;1773:79;:::i;:::-;1764:88;;1647:211;;;;;:::o;1864:139::-;;1948:6;1935:20;1926:29;;1964:33;1991:5;1964:33;:::i;:::-;1916:87;;;;:::o;2009:262::-;;2117:2;2105:9;2096:7;2092:23;2088:32;2085:2;;;2133:1;2130;2123:12;2085:2;2176:1;2201:53;2246:7;2237:6;2226:9;2222:22;2201:53;:::i;:::-;2191:63;;2147:117;2075:196;;;;:::o;2277:407::-;;;2402:2;2390:9;2381:7;2377:23;2373:32;2370:2;;;2418:1;2415;2408:12;2370:2;2461:1;2486:53;2531:7;2522:6;2511:9;2507:22;2486:53;:::i;:::-;2476:63;;2432:117;2588:2;2614:53;2659:7;2650:6;2639:9;2635:22;2614:53;:::i;:::-;2604:63;;2559:118;2360:324;;;;;:::o;2690:552::-;;;;2832:2;2820:9;2811:7;2807:23;2803:32;2800:2;;;2848:1;2845;2838:12;2800:2;2891:1;2916:53;2961:7;2952:6;2941:9;2937:22;2916:53;:::i;:::-;2906:63;;2862:117;3018:2;3044:53;3089:7;3080:6;3069:9;3065:22;3044:53;:::i;:::-;3034:63;;2989:118;3146:2;3172:53;3217:7;3208:6;3197:9;3193:22;3172:53;:::i;:::-;3162:63;;3117:118;2790:452;;;;;:::o;3248:809::-;;;;;3416:3;3404:9;3395:7;3391:23;3387:33;3384:2;;;3433:1;3430;3423:12;3384:2;3476:1;3501:53;3546:7;3537:6;3526:9;3522:22;3501:53;:::i;:::-;3491:63;;3447:117;3603:2;3629:53;3674:7;3665:6;3654:9;3650:22;3629:53;:::i;:::-;3619:63;;3574:118;3731:2;3757:53;3802:7;3793:6;3782:9;3778:22;3757:53;:::i;:::-;3747:63;;3702:118;3887:2;3876:9;3872:18;3859:32;3918:18;3910:6;3907:30;3904:2;;;3950:1;3947;3940:12;3904:2;3978:62;4032:7;4023:6;4012:9;4008:22;3978:62;:::i;:::-;3968:72;;3830:220;3374:683;;;;;;;:::o;4063:401::-;;;4185:2;4173:9;4164:7;4160:23;4156:32;4153:2;;;4201:1;4198;4191:12;4153:2;4244:1;4269:53;4314:7;4305:6;4294:9;4290:22;4269:53;:::i;:::-;4259:63;;4215:117;4371:2;4397:50;4439:7;4430:6;4419:9;4415:22;4397:50;:::i;:::-;4387:60;;4342:115;4143:321;;;;;:::o;4470:520::-;;;4605:2;4593:9;4584:7;4580:23;4576:32;4573:2;;;4621:1;4618;4611:12;4573:2;4664:1;4689:53;4734:7;4725:6;4714:9;4710:22;4689:53;:::i;:::-;4679:63;;4635:117;4819:2;4808:9;4804:18;4791:32;4850:18;4842:6;4839:30;4836:2;;;4882:1;4879;4872:12;4836:2;4910:63;4965:7;4956:6;4945:9;4941:22;4910:63;:::i;:::-;4900:73;;4762:221;4563:427;;;;;:::o;4996:407::-;;;5121:2;5109:9;5100:7;5096:23;5092:32;5089:2;;;5137:1;5134;5127:12;5089:2;5180:1;5205:53;5250:7;5241:6;5230:9;5226:22;5205:53;:::i;:::-;5195:63;;5151:117;5307:2;5333:53;5378:7;5369:6;5358:9;5354:22;5333:53;:::i;:::-;5323:63;;5278:118;5079:324;;;;;:::o;5409:260::-;;5516:2;5504:9;5495:7;5491:23;5487:32;5484:2;;;5532:1;5529;5522:12;5484:2;5575:1;5600:52;5644:7;5635:6;5624:9;5620:22;5600:52;:::i;:::-;5590:62;;5546:116;5474:195;;;;:::o;5675:282::-;;5793:2;5781:9;5772:7;5768:23;5764:32;5761:2;;;5809:1;5806;5799:12;5761:2;5852:1;5877:63;5932:7;5923:6;5912:9;5908:22;5877:63;:::i;:::-;5867:73;;5823:127;5751:206;;;;:::o;5963:375::-;;6081:2;6069:9;6060:7;6056:23;6052:32;6049:2;;;6097:1;6094;6087:12;6049:2;6168:1;6157:9;6153:17;6140:31;6198:18;6190:6;6187:30;6184:2;;;6230:1;6227;6220:12;6184:2;6258:63;6313:7;6304:6;6293:9;6289:22;6258:63;:::i;:::-;6248:73;;6111:220;6039:299;;;;:::o;6344:262::-;;6452:2;6440:9;6431:7;6427:23;6423:32;6420:2;;;6468:1;6465;6458:12;6420:2;6511:1;6536:53;6581:7;6572:6;6561:9;6557:22;6536:53;:::i;:::-;6526:63;;6482:117;6410:196;;;;:::o;6612:118::-;6699:24;6717:5;6699:24;:::i;:::-;6694:3;6687:37;6677:53;;:::o;6736:109::-;6817:21;6832:5;6817:21;:::i;:::-;6812:3;6805:34;6795:50;;:::o;6851:360::-;;6965:38;6997:5;6965:38;:::i;:::-;7019:70;7082:6;7077:3;7019:70;:::i;:::-;7012:77;;7098:52;7143:6;7138:3;7131:4;7124:5;7120:16;7098:52;:::i;:::-;7175:29;7197:6;7175:29;:::i;:::-;7170:3;7166:39;7159:46;;6941:270;;;;;:::o;7217:364::-;;7333:39;7366:5;7333:39;:::i;:::-;7388:71;7452:6;7447:3;7388:71;:::i;:::-;7381:78;;7468:52;7513:6;7508:3;7501:4;7494:5;7490:16;7468:52;:::i;:::-;7545:29;7567:6;7545:29;:::i;:::-;7540:3;7536:39;7529:46;;7309:272;;;;;:::o;7587:377::-;;7721:39;7754:5;7721:39;:::i;:::-;7776:89;7858:6;7853:3;7776:89;:::i;:::-;7769:96;;7874:52;7919:6;7914:3;7907:4;7900:5;7896:16;7874:52;:::i;:::-;7951:6;7946:3;7942:16;7935:23;;7697:267;;;;;:::o;7970:366::-;;8133:67;8197:2;8192:3;8133:67;:::i;:::-;8126:74;;8209:93;8298:3;8209:93;:::i;:::-;8327:2;8322:3;8318:12;8311:19;;8116:220;;;:::o;8342:366::-;;8505:67;8569:2;8564:3;8505:67;:::i;:::-;8498:74;;8581:93;8670:3;8581:93;:::i;:::-;8699:2;8694:3;8690:12;8683:19;;8488:220;;;:::o;8714:366::-;;8877:67;8941:2;8936:3;8877:67;:::i;:::-;8870:74;;8953:93;9042:3;8953:93;:::i;:::-;9071:2;9066:3;9062:12;9055:19;;8860:220;;;:::o;9086:366::-;;9249:67;9313:2;9308:3;9249:67;:::i;:::-;9242:74;;9325:93;9414:3;9325:93;:::i;:::-;9443:2;9438:3;9434:12;9427:19;;9232:220;;;:::o;9458:366::-;;9621:67;9685:2;9680:3;9621:67;:::i;:::-;9614:74;;9697:93;9786:3;9697:93;:::i;:::-;9815:2;9810:3;9806:12;9799:19;;9604:220;;;:::o;9830:366::-;;9993:67;10057:2;10052:3;9993:67;:::i;:::-;9986:74;;10069:93;10158:3;10069:93;:::i;:::-;10187:2;10182:3;10178:12;10171:19;;9976:220;;;:::o;10202:366::-;;10365:67;10429:2;10424:3;10365:67;:::i;:::-;10358:74;;10441:93;10530:3;10441:93;:::i;:::-;10559:2;10554:3;10550:12;10543:19;;10348:220;;;:::o;10574:366::-;;10737:67;10801:2;10796:3;10737:67;:::i;:::-;10730:74;;10813:93;10902:3;10813:93;:::i;:::-;10931:2;10926:3;10922:12;10915:19;;10720:220;;;:::o;10946:366::-;;11109:67;11173:2;11168:3;11109:67;:::i;:::-;11102:74;;11185:93;11274:3;11185:93;:::i;:::-;11303:2;11298:3;11294:12;11287:19;;11092:220;;;:::o;11318:366::-;;11481:67;11545:2;11540:3;11481:67;:::i;:::-;11474:74;;11557:93;11646:3;11557:93;:::i;:::-;11675:2;11670:3;11666:12;11659:19;;11464:220;;;:::o;11690:366::-;;11853:67;11917:2;11912:3;11853:67;:::i;:::-;11846:74;;11929:93;12018:3;11929:93;:::i;:::-;12047:2;12042:3;12038:12;12031:19;;11836:220;;;:::o;12062:366::-;;12225:67;12289:2;12284:3;12225:67;:::i;:::-;12218:74;;12301:93;12390:3;12301:93;:::i;:::-;12419:2;12414:3;12410:12;12403:19;;12208:220;;;:::o;12434:118::-;12521:24;12539:5;12521:24;:::i;:::-;12516:3;12509:37;12499:53;;:::o;12558:435::-;;12760:95;12851:3;12842:6;12760:95;:::i;:::-;12753:102;;12872:95;12963:3;12954:6;12872:95;:::i;:::-;12865:102;;12984:3;12977:10;;12742:251;;;;;:::o;12999:222::-;;13130:2;13119:9;13115:18;13107:26;;13143:71;13211:1;13200:9;13196:17;13187:6;13143:71;:::i;:::-;13097:124;;;;:::o;13227:640::-;;13460:3;13449:9;13445:19;13437:27;;13474:71;13542:1;13531:9;13527:17;13518:6;13474:71;:::i;:::-;13555:72;13623:2;13612:9;13608:18;13599:6;13555:72;:::i;:::-;13637;13705:2;13694:9;13690:18;13681:6;13637:72;:::i;:::-;13756:9;13750:4;13746:20;13741:2;13730:9;13726:18;13719:48;13784:76;13855:4;13846:6;13784:76;:::i;:::-;13776:84;;13427:440;;;;;;;:::o;13873:210::-;;13998:2;13987:9;13983:18;13975:26;;14011:65;14073:1;14062:9;14058:17;14049:6;14011:65;:::i;:::-;13965:118;;;;:::o;14089:313::-;;14240:2;14229:9;14225:18;14217:26;;14289:9;14283:4;14279:20;14275:1;14264:9;14260:17;14253:47;14317:78;14390:4;14381:6;14317:78;:::i;:::-;14309:86;;14207:195;;;;:::o;14408:419::-;;14612:2;14601:9;14597:18;14589:26;;14661:9;14655:4;14651:20;14647:1;14636:9;14632:17;14625:47;14689:131;14815:4;14689:131;:::i;:::-;14681:139;;14579:248;;;:::o;14833:419::-;;15037:2;15026:9;15022:18;15014:26;;15086:9;15080:4;15076:20;15072:1;15061:9;15057:17;15050:47;15114:131;15240:4;15114:131;:::i;:::-;15106:139;;15004:248;;;:::o;15258:419::-;;15462:2;15451:9;15447:18;15439:26;;15511:9;15505:4;15501:20;15497:1;15486:9;15482:17;15475:47;15539:131;15665:4;15539:131;:::i;:::-;15531:139;;15429:248;;;:::o;15683:419::-;;15887:2;15876:9;15872:18;15864:26;;15936:9;15930:4;15926:20;15922:1;15911:9;15907:17;15900:47;15964:131;16090:4;15964:131;:::i;:::-;15956:139;;15854:248;;;:::o;16108:419::-;;16312:2;16301:9;16297:18;16289:26;;16361:9;16355:4;16351:20;16347:1;16336:9;16332:17;16325:47;16389:131;16515:4;16389:131;:::i;:::-;16381:139;;16279:248;;;:::o;16533:419::-;;16737:2;16726:9;16722:18;16714:26;;16786:9;16780:4;16776:20;16772:1;16761:9;16757:17;16750:47;16814:131;16940:4;16814:131;:::i;:::-;16806:139;;16704:248;;;:::o;16958:419::-;;17162:2;17151:9;17147:18;17139:26;;17211:9;17205:4;17201:20;17197:1;17186:9;17182:17;17175:47;17239:131;17365:4;17239:131;:::i;:::-;17231:139;;17129:248;;;:::o;17383:419::-;;17587:2;17576:9;17572:18;17564:26;;17636:9;17630:4;17626:20;17622:1;17611:9;17607:17;17600:47;17664:131;17790:4;17664:131;:::i;:::-;17656:139;;17554:248;;;:::o;17808:419::-;;18012:2;18001:9;17997:18;17989:26;;18061:9;18055:4;18051:20;18047:1;18036:9;18032:17;18025:47;18089:131;18215:4;18089:131;:::i;:::-;18081:139;;17979:248;;;:::o;18233:419::-;;18437:2;18426:9;18422:18;18414:26;;18486:9;18480:4;18476:20;18472:1;18461:9;18457:17;18450:47;18514:131;18640:4;18514:131;:::i;:::-;18506:139;;18404:248;;;:::o;18658:419::-;;18862:2;18851:9;18847:18;18839:26;;18911:9;18905:4;18901:20;18897:1;18886:9;18882:17;18875:47;18939:131;19065:4;18939:131;:::i;:::-;18931:139;;18829:248;;;:::o;19083:419::-;;19287:2;19276:9;19272:18;19264:26;;19336:9;19330:4;19326:20;19322:1;19311:9;19307:17;19300:47;19364:131;19490:4;19364:131;:::i;:::-;19356:139;;19254:248;;;:::o;19508:222::-;;19639:2;19628:9;19624:18;19616:26;;19652:71;19720:1;19709:9;19705:17;19696:6;19652:71;:::i;:::-;19606:124;;;;:::o;19736:129::-;;19797:20;;:::i;:::-;19787:30;;19826:33;19854:4;19846:6;19826:33;:::i;:::-;19777:88;;;:::o;19871:75::-;;19937:2;19931:9;19921:19;;19911:35;:::o;19952:307::-;;20103:18;20095:6;20092:30;20089:2;;;20125:18;;:::i;:::-;20089:2;20163:29;20185:6;20163:29;:::i;:::-;20155:37;;20247:4;20241;20237:15;20229:23;;20018:241;;;:::o;20265:308::-;;20417:18;20409:6;20406:30;20403:2;;;20439:18;;:::i;:::-;20403:2;20477:29;20499:6;20477:29;:::i;:::-;20469:37;;20561:4;20555;20551:15;20543:23;;20332:241;;;:::o;20579:98::-;;20664:5;20658:12;20648:22;;20637:40;;;:::o;20683:99::-;;20769:5;20763:12;20753:22;;20742:40;;;:::o;20788:168::-;;20905:6;20900:3;20893:19;20945:4;20940:3;20936:14;20921:29;;20883:73;;;;:::o;20962:169::-;;21080:6;21075:3;21068:19;21120:4;21115:3;21111:14;21096:29;;21058:73;;;;:::o;21137:148::-;;21276:3;21261:18;;21251:34;;;;:::o;21291:96::-;;21357:24;21375:5;21357:24;:::i;:::-;21346:35;;21336:51;;;:::o;21393:90::-;;21470:5;21463:13;21456:21;21445:32;;21435:48;;;:::o;21489:149::-;;21565:66;21558:5;21554:78;21543:89;;21533:105;;;:::o;21644:126::-;;21721:42;21714:5;21710:54;21699:65;;21689:81;;;:::o;21776:77::-;;21842:5;21831:16;;21821:32;;;:::o;21859:154::-;21943:6;21938:3;21933;21920:30;22005:1;21996:6;21991:3;21987:16;21980:27;21910:103;;;:::o;22019:307::-;22087:1;22097:113;22111:6;22108:1;22105:13;22097:113;;;22196:1;22191:3;22187:11;22181:18;22177:1;22172:3;22168:11;22161:39;22133:2;22130:1;22126:10;22121:15;;22097:113;;;22228:6;22225:1;22222:13;22219:2;;;22308:1;22299:6;22294:3;22290:16;22283:27;22219:2;22068:258;;;;:::o;22332:320::-;;22413:1;22407:4;22403:12;22393:22;;22460:1;22454:4;22450:12;22481:18;22471:2;;22537:4;22529:6;22525:17;22515:27;;22471:2;22599;22591:6;22588:14;22568:18;22565:38;22562:2;;;22618:18;;:::i;:::-;22562:2;22383:269;;;;:::o;22658:281::-;22741:27;22763:4;22741:27;:::i;:::-;22733:6;22729:40;22871:6;22859:10;22856:22;22835:18;22823:10;22820:34;22817:62;22814:2;;;22882:18;;:::i;:::-;22814:2;22922:10;22918:2;22911:22;22701:238;;;:::o;22945:180::-;22993:77;22990:1;22983:88;23090:4;23087:1;23080:15;23114:4;23111:1;23104:15;23131:180;23179:77;23176:1;23169:88;23276:4;23273:1;23266:15;23300:4;23297:1;23290:15;23317:102;;23409:2;23405:7;23400:2;23393:5;23389:14;23385:28;23375:38;;23365:54;;;:::o;23425:232::-;23565:34;23561:1;23553:6;23549:14;23542:58;23634:15;23629:2;23621:6;23617:15;23610:40;23531:126;:::o;23663:237::-;23803:34;23799:1;23791:6;23787:14;23780:58;23872:20;23867:2;23859:6;23855:15;23848:45;23769:131;:::o;23906:224::-;24046:34;24042:1;24034:6;24030:14;24023:58;24115:7;24110:2;24102:6;24098:15;24091:32;24012:118;:::o;24136:178::-;24276:30;24272:1;24264:6;24260:14;24253:54;24242:72;:::o;24320:223::-;24460:34;24456:1;24448:6;24444:14;24437:58;24529:6;24524:2;24516:6;24512:15;24505:31;24426:117;:::o;24549:175::-;24689:27;24685:1;24677:6;24673:14;24666:51;24655:69;:::o;24730:228::-;24870:34;24866:1;24858:6;24854:14;24847:58;24939:11;24934:2;24926:6;24922:15;24915:36;24836:122;:::o;24964:233::-;25104:34;25100:1;25092:6;25088:14;25081:58;25173:16;25168:2;25160:6;25156:15;25149:41;25070:127;:::o;25203:182::-;25343:34;25339:1;25331:6;25327:14;25320:58;25309:76;:::o;25391:174::-;25531:26;25527:1;25519:6;25515:14;25508:50;25497:68;:::o;25571:220::-;25711:34;25707:1;25699:6;25695:14;25688:58;25780:3;25775:2;25767:6;25763:15;25756:28;25677:114;:::o;25797:248::-;25937:34;25933:1;25925:6;25921:14;25914:58;26006:31;26001:2;25993:6;25989:15;25982:56;25903:142;:::o;26051:122::-;26124:24;26142:5;26124:24;:::i;:::-;26117:5;26114:35;26104:2;;26163:1;26160;26153:12;26104:2;26094:79;:::o;26179:116::-;26249:21;26264:5;26249:21;:::i;:::-;26242:5;26239:32;26229:2;;26285:1;26282;26275:12;26229:2;26219:76;:::o;26301:120::-;26373:23;26390:5;26373:23;:::i;:::-;26366:5;26363:34;26353:2;;26411:1;26408;26401:12;26353:2;26343:78;:::o;26427:122::-;26500:24;26518:5;26500:24;:::i;:::-;26493:5;26490:35;26480:2;;26539:1;26536;26529:12;26480:2;26470:79;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","collectionInfoURI()":"b00a2997","contractURI()":"e8a3d485","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mint(address,string)":"d0def521","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setContractURI(string)":"938e3d7b","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectionInfoURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_collectionInfoURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setContractURI(string)\":{\"details\":\"Sets the URI for the collection info JSON.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OathToMeliorism.sol\":\"OathToMeliorism\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Royalty.sol\":{\"keccak256\":\"0x93d24eea4e6ddbed53ef161567ae62bfd0c3aebb7b48f37e4dbeb7a937108866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2ed35e16e296fcc3d2311d584e5006ddc188d7d76198e8e750193750b65f9c4\",\"dweb:/ipfs/QmYzLcEgZ4TSBJNPBxhq9BdLQC89w3zyWH88rw3DBy4MxY\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/OathToMeliorism.sol\":{\"keccak256\":\"0x4c45c6301a7548c8ca14a651a00dbc0ff8a6ba9f4ffd4ad62a8deae8fa09f0da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c1aeb702ee8eb4d4f4cad0fb3395668766049e263d73190d79a8c664480cbab\",\"dweb:/ipfs/QmRvfPftRLjCvnAPofjx5ALaG5Hpmg5zpFJXq3hxkPpaBu\"]}},\"version\":1}"}}}}}